{"version":3,"file":"main.js","sources":["lib/sjcl/sjcl.js","lib/jsrsasign/jsrsasign-latest-all-min.js","lib/q/q.js","lib/lodash/dist/lodash.js","lib/eventemitter2/lib/eventemitter2.js","muskepeer-module.js","lib/node-uuid/uuid.js","uuid.js","lib/mixing/dist/mixing.js","project.js","lib/idbwrapper/idbstore.js","storage/database.js","lib/observe-js/src/observe.js","settings.js","crypto/index.js","storage/filesystem.js","storage/index.js","computation/collection/jobs.js","computation/collection/results.js","computation/model/thread.js","computation/model/pool.js","computation/model/job.js","computation/model/result.js","computation/index.js","network/geolocation.js","network/model/node.js","network/collections/nodes.js","network/model/peer.js","network/collections/peers.js","network/model/service.js","network/index.js","mediator.js","muskepeer-client.js","util/logger.js"],"names":[],"mappings":"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,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA,GAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,CAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GAAA,IAAA,GAAA,GAAA,KAAA,GACA,EAAA,IAAA,IAAA,IAAA,EAAA,GAAA,IAAA,GAAA,GAAA,KAAA,GAAA,EAAA,IAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,KAAA,GAAA,GAAA,IAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,KAAA,GAAA,GAAA,IAAA,KAAA,IAAA,EAAA,IAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,KAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA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AA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,GAAA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EA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","sourcesContent":["\n\"use strict\";function q(a){throw a;}var t=void 0,u=!1;var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\n\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\nsjcl.cipher.aes=function(a){this.k[0][0][0]||this.D();var b,c,d,e,f=this.k[0][4],g=this.k[1];b=a.length;var h=1;4!==b&&(6!==b&&8!==b)&&q(new sjcl.exception.invalid(\"invalid aes key size\"));this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=f[c>>>24]<<24^f[c>>16&255]<<16^f[c>>8&255]<<8^f[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:g[0][f[c>>>24]]^g[1][f[c>>16&255]]^g[2][f[c>>8&255]]^g[3][f[c&\n255]]};\nsjcl.cipher.aes.prototype={encrypt:function(a){return y(this,a,0)},decrypt:function(a){return y(this,a,1)},k:[[[],[],[],[],[]],[[],[],[],[],[]]],D:function(){var a=this.k[0],b=this.k[1],c=a[4],d=b[4],e,f,g,h=[],l=[],k,n,m,p;for(e=0;0x100>e;e++)l[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g=0;!c[f];f^=k||1,g=l[g]||1){m=g^g<<1^g<<2^g<<3^g<<4;m=m>>8^m&255^99;c[f]=m;d[m]=f;n=h[e=h[k=h[f]]];p=0x1010101*n^0x10001*e^0x101*k^0x1010100*f;n=0x101*h[m]^0x1010100*m;for(e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b[e][m]=p=p<<24^p>>>8}for(e=\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\nfunction y(a,b,c){4!==b.length&&q(new sjcl.exception.invalid(\"invalid aes block size\"));var d=a.b[c],e=b[0]^d[0],f=b[c?3:1]^d[1],g=b[2]^d[2];b=b[c?1:3]^d[3];var h,l,k,n=d.length/4-2,m,p=4,s=[0,0,0,0];h=a.k[c];a=h[0];var r=h[1],v=h[2],w=h[3],x=h[4];for(m=0;m<n;m++)h=a[e>>>24]^r[f>>16&255]^v[g>>8&255]^w[b&255]^d[p],l=a[f>>>24]^r[g>>16&255]^v[b>>8&255]^w[e&255]^d[p+1],k=a[g>>>24]^r[b>>16&255]^v[e>>8&255]^w[f&255]^d[p+2],b=a[b>>>24]^r[e>>16&255]^v[f>>8&255]^w[g&255]^d[p+3],p+=4,e=h,f=l,g=k;for(m=0;4>\nm;m++)s[c?3&-m:m]=x[e>>>24]<<24^x[f>>16&255]<<16^x[g>>8&255]<<8^x[b&255]^d[p++],h=e,e=f,f=g,g=b,b=h;return s}\nsjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.P(a.slice(b/32),32-(b&31)).slice(1);return c===t?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.P(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===\nb?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b&=31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return u;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===\nc},P:function(a,b,c,d){var e;e=0;for(d===t&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},l:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]}};\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>24),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};\nsjcl.codec.hex={fromBits:function(a){var b=\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,\"\");d=a.length;a+=\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};\nsjcl.codec.base64={J:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,c){var d=\"\",e=0,f=sjcl.codec.base64.J,g=0,h=sjcl.bitArray.bitLength(a);c&&(f=f.substr(0,62)+\"-_\");for(c=0;6*d.length<h;)d+=f.charAt((g^a[c]>>>e)>>>26),6>e?(g=a[c]<<6-e,e+=26,c++):(g<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var c=[],d,e=0,f=sjcl.codec.base64.J,g=0,h;b&&(f=f.substr(0,62)+\"-_\");for(d=0;d<a.length;d++)h=f.indexOf(a.charAt(d)),\n0>h&&q(new sjcl.exception.invalid(\"this isn't base64!\")),26<e?(e-=26,c.push(g^h>>>e),g=h<<32-e):(e+=6,g^=h<<32-e);e&56&&c.push(sjcl.bitArray.partial(e&56,g,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.D();a?(this.r=a.r.slice(0),this.o=a.o.slice(0),this.h=a.h):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.r=this.N.slice(0);this.o=[];this.h=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.o=sjcl.bitArray.concat(this.o,a);b=this.h;a=this.h=b+sjcl.bitArray.bitLength(a);for(b=512+b&-512;b<=a;b+=512)z(this,c.splice(0,16));return this},finalize:function(){var a,b=this.o,c=this.r,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.h/\n4294967296));for(b.push(this.h|0);b.length;)z(this,b.splice(0,16));this.reset();return c},N:[],b:[],D:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}var b=0,c=2,d;a:for(;64>b;c++){for(d=2;d*d<=c;d++)if(0===c%d)continue a;8>b&&(this.N[b]=a(Math.pow(c,0.5)));this.b[b]=a(Math.pow(c,1/3));b++}}};\nfunction z(a,b){var c,d,e,f=b.slice(0),g=a.r,h=a.b,l=g[0],k=g[1],n=g[2],m=g[3],p=g[4],s=g[5],r=g[6],v=g[7];for(c=0;64>c;c++)16>c?d=f[c]:(d=f[c+1&15],e=f[c+14&15],d=f[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+f[c&15]+f[c+9&15]|0),d=d+v+(p>>>6^p>>>11^p>>>25^p<<26^p<<21^p<<7)+(r^p&(s^r))+h[c],v=r,r=s,s=p,p=m+d|0,m=n,n=k,k=l,l=d+(k&n^m&(k^n))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;g[0]=g[0]+l|0;g[1]=g[1]+k|0;g[2]=g[2]+n|0;g[3]=g[3]+m|0;g[4]=g[4]+p|0;g[5]=g[5]+s|0;g[6]=\ng[6]+r|0;g[7]=g[7]+v|0}\nsjcl.mode.ccm={name:\"ccm\",encrypt:function(a,b,c,d,e){var f,g=b.slice(0),h=sjcl.bitArray,l=h.bitLength(c)/8,k=h.bitLength(g)/8;e=e||64;d=d||[];7>l&&q(new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\"));for(f=2;4>f&&k>>>8*f;f++);f<15-l&&(f=15-l);c=h.clamp(c,8*(15-f));b=sjcl.mode.ccm.L(a,b,c,d,e,f);g=sjcl.mode.ccm.p(a,g,c,b,e,f);return h.concat(g.data,g.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var f=sjcl.bitArray,g=f.bitLength(c)/8,h=f.bitLength(b),l=f.clamp(b,h-e),k=f.bitSlice(b,\nh-e),h=(h-e)/8;7>g&&q(new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\"));for(b=2;4>b&&h>>>8*b;b++);b<15-g&&(b=15-g);c=f.clamp(c,8*(15-b));l=sjcl.mode.ccm.p(a,l,c,k,e,b);a=sjcl.mode.ccm.L(a,l.data,c,d,e,b);f.equal(l.tag,a)||q(new sjcl.exception.corrupt(\"ccm: tag doesn't match\"));return l.data},L:function(a,b,c,d,e,f){var g=[],h=sjcl.bitArray,l=h.l;e/=8;(e%2||4>e||16<e)&&q(new sjcl.exception.invalid(\"ccm: invalid tag length\"));(0xffffffff<d.length||0xffffffff<b.length)&&q(new sjcl.exception.bug(\"ccm: can't deal with 4GiB or more data\"));\nf=[h.partial(8,(d.length?64:0)|e-2<<2|f-1)];f=h.concat(f,c);f[3]|=h.bitLength(b)/8;f=a.encrypt(f);if(d.length){c=h.bitLength(d)/8;65279>=c?g=[h.partial(16,c)]:0xffffffff>=c&&(g=h.concat([h.partial(16,65534)],[c]));g=h.concat(g,d);for(d=0;d<g.length;d+=4)f=a.encrypt(l(f,g.slice(d,d+4).concat([0,0,0])))}for(d=0;d<b.length;d+=4)f=a.encrypt(l(f,b.slice(d,d+4).concat([0,0,0])));return h.clamp(f,8*e)},p:function(a,b,c,d,e,f){var g,h=sjcl.bitArray;g=h.l;var l=b.length,k=h.bitLength(b);c=h.concat([h.partial(8,\nf-1)],c).concat([0,0,0]).slice(0,4);d=h.bitSlice(g(d,a.encrypt(c)),0,e);if(!l)return{tag:d,data:[]};for(g=0;g<l;g+=4)c[3]++,e=a.encrypt(c),b[g]^=e[0],b[g+1]^=e[1],b[g+2]^=e[2],b[g+3]^=e[3];return{tag:d,data:h.clamp(b,k)}}};\nsjcl.mode.ocb2={name:\"ocb2\",encrypt:function(a,b,c,d,e,f){128!==sjcl.bitArray.bitLength(c)&&q(new sjcl.exception.invalid(\"ocb iv must be 128 bits\"));var g,h=sjcl.mode.ocb2.H,l=sjcl.bitArray,k=l.l,n=[0,0,0,0];c=h(a.encrypt(c));var m,p=[];d=d||[];e=e||64;for(g=0;g+4<b.length;g+=4)m=b.slice(g,g+4),n=k(n,m),p=p.concat(k(c,a.encrypt(k(c,m)))),c=h(c);m=b.slice(g);b=l.bitLength(m);g=a.encrypt(k(c,[0,0,0,b]));m=l.clamp(k(m.concat([0,0,0]),g),b);n=k(n,k(m.concat([0,0,0]),g));n=a.encrypt(k(n,k(c,h(c))));d.length&&\n(n=k(n,f?d:sjcl.mode.ocb2.pmac(a,d)));return p.concat(l.concat(m,l.clamp(n,e)))},decrypt:function(a,b,c,d,e,f){128!==sjcl.bitArray.bitLength(c)&&q(new sjcl.exception.invalid(\"ocb iv must be 128 bits\"));e=e||64;var g=sjcl.mode.ocb2.H,h=sjcl.bitArray,l=h.l,k=[0,0,0,0],n=g(a.encrypt(c)),m,p,s=sjcl.bitArray.bitLength(b)-e,r=[];d=d||[];for(c=0;c+4<s/32;c+=4)m=l(n,a.decrypt(l(n,b.slice(c,c+4)))),k=l(k,m),r=r.concat(m),n=g(n);p=s-32*c;m=a.encrypt(l(n,[0,0,0,p]));m=l(m,h.clamp(b.slice(c),p).concat([0,0,0]));\nk=l(k,m);k=a.encrypt(l(k,l(n,g(n))));d.length&&(k=l(k,f?d:sjcl.mode.ocb2.pmac(a,d)));h.equal(h.clamp(k,e),h.bitSlice(b,s))||q(new sjcl.exception.corrupt(\"ocb: tag doesn't match\"));return r.concat(h.clamp(m,p))},pmac:function(a,b){var c,d=sjcl.mode.ocb2.H,e=sjcl.bitArray,f=e.l,g=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,d(d(h)));for(c=0;c+4<b.length;c+=4)h=d(h),g=f(g,a.encrypt(f(h,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(h=f(h,d(h)),c=e.concat(c,[-2147483648,0,0,0]));g=f(g,c);return a.encrypt(f(d(f(h,\nd(h))),g))},H:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};\nsjcl.mode.gcm={name:\"gcm\",encrypt:function(a,b,c,d,e){var f=b.slice(0);b=sjcl.bitArray;d=d||[];a=sjcl.mode.gcm.p(!0,a,f,d,c,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var f=b.slice(0),g=sjcl.bitArray,h=g.bitLength(f);e=e||128;d=d||[];e<=h?(b=g.bitSlice(f,h-e),f=g.bitSlice(f,0,h-e)):(b=f,f=[]);a=sjcl.mode.gcm.p(u,a,f,d,c,e);g.equal(a.tag,b)||q(new sjcl.exception.corrupt(\"gcm: tag doesn't match\"));return a.data},Z:function(a,b){var c,d,e,f,g,h=sjcl.bitArray.l;e=[0,0,0,0];f=b.slice(0);\nfor(c=0;128>c;c++){(d=0!==(a[Math.floor(c/32)]&1<<31-c%32))&&(e=h(e,f));g=0!==(f[3]&1);for(d=3;0<d;d--)f[d]=f[d]>>>1|(f[d-1]&1)<<31;f[0]>>>=1;g&&(f[0]^=-0x1f000000)}return e},g:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=0xffffffff&c[d],b[1]^=0xffffffff&c[d+1],b[2]^=0xffffffff&c[d+2],b[3]^=0xffffffff&c[d+3],b=sjcl.mode.gcm.Z(b,a);return b},p:function(a,b,c,d,e,f){var g,h,l,k,n,m,p,s,r=sjcl.bitArray;m=c.length;p=r.bitLength(c);s=r.bitLength(d);h=r.bitLength(e);g=b.encrypt([0,\n0,0,0]);96===h?(e=e.slice(0),e=r.concat(e,[1])):(e=sjcl.mode.gcm.g(g,[0,0,0,0],e),e=sjcl.mode.gcm.g(g,e,[0,0,Math.floor(h/0x100000000),h&0xffffffff]));h=sjcl.mode.gcm.g(g,[0,0,0,0],d);n=e.slice(0);d=h.slice(0);a||(d=sjcl.mode.gcm.g(g,h,c));for(k=0;k<m;k+=4)n[3]++,l=b.encrypt(n),c[k]^=l[0],c[k+1]^=l[1],c[k+2]^=l[2],c[k+3]^=l[3];c=r.clamp(c,p);a&&(d=sjcl.mode.gcm.g(g,h,c));a=[Math.floor(s/0x100000000),s&0xffffffff,Math.floor(p/0x100000000),p&0xffffffff];d=sjcl.mode.gcm.g(g,d,a);l=b.encrypt(e);d[0]^=l[0];\nd[1]^=l[1];d[2]^=l[2];d[3]^=l[3];return{tag:r.bitSlice(d,0,f),data:c}}};sjcl.misc.hmac=function(a,b){this.M=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.n=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.n[0].update(c[0]);this.n[1].update(c[1]);this.G=new b(this.n[0])};\nsjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){this.Q&&q(new sjcl.exception.invalid(\"encrypt on already updated hmac called!\"));this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.G=new this.M(this.n[0]);this.Q=u};sjcl.misc.hmac.prototype.update=function(a){this.Q=!0;this.G.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.G.finalize(),a=(new this.M(this.n[1])).update(a).finalize();this.reset();return a};\nsjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E3;(0>d||0>c)&&q(sjcl.exception.invalid(\"invalid params to pbkdf2\"));\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var f,g,h,l,k=[],n=sjcl.bitArray;for(l=1;32*k.length<(d||1);l++){e=f=a.encrypt(n.concat(b,[l]));for(g=1;g<c;g++){f=a.encrypt(f);for(h=0;h<f.length;h++)e[h]^=f[h]}k=k.concat(e)}d&&(k=n.clamp(k,d));return k};\nsjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.i=[0];this.F=0;this.s={};this.C=0;this.K={};this.O=this.d=this.j=this.W=0;this.b=[0,0,0,0,0,0,0,0];this.f=[0,0,0,0];this.A=t;this.B=a;this.q=u;this.w={progress:{},seeded:{}};this.m=this.V=0;this.t=1;this.u=2;this.S=0x10000;this.I=[0,48,64,96,128,192,0x100,384,512,768,1024];this.T=3E4;this.R=80};\nsjcl.prng.prototype={randomWords:function(a,b){var c=[],d;d=this.isReady(b);var e;d===this.m&&q(new sjcl.exception.notReady(\"generator isn't seeded\"));if(d&this.u){d=!(d&this.t);e=[];var f=0,g;this.O=e[0]=(new Date).valueOf()+this.T;for(g=0;16>g;g++)e.push(0x100000000*Math.random()|0);for(g=0;g<this.c.length&&!(e=e.concat(this.c[g].finalize()),f+=this.i[g],this.i[g]=0,!d&&this.F&1<<g);g++);this.F>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.i.push(0));this.d-=f;f>this.j&&(this.j=f);this.F++;\nthis.b=sjcl.hash.sha256.hash(this.b.concat(e));this.A=new sjcl.cipher.aes(this.b);for(d=0;4>d&&!(this.f[d]=this.f[d]+1|0,this.f[d]);d++);}for(d=0;d<a;d+=4)0===(d+1)%this.S&&A(this),e=B(this),c.push(e[0],e[1],e[2],e[3]);A(this);return c.slice(0,a)},setDefaultParanoia:function(a,b){0===a&&\"Setting paranoia=0 will ruin your security; use it only for testing\"!==b&&q(\"Setting paranoia=0 will ruin your security; use it only for testing\");this.B=a},addEntropy:function(a,b,c){c=c||\"user\";var d,e,f=(new Date).valueOf(),\ng=this.s[c],h=this.isReady(),l=0;d=this.K[c];d===t&&(d=this.K[c]=this.W++);g===t&&(g=this.s[c]=0);this.s[c]=(this.s[c]+1)%this.c.length;switch(typeof a){case \"number\":b===t&&(b=1);this.c[g].update([d,this.C++,1,b,f,1,a|0]);break;case \"object\":c=Object.prototype.toString.call(a);if(\"[object Uint32Array]\"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else{\"[object Array]\"!==c&&(l=1);for(c=0;c<a.length&&!l;c++)\"number\"!==typeof a[c]&&(l=1)}if(!l){if(b===t)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,\ne>>>=1;this.c[g].update([d,this.C++,2,b,f,a.length].concat(a))}break;case \"string\":b===t&&(b=a.length);this.c[g].update([d,this.C++,3,b,f,a.length]);this.c[g].update(a);break;default:l=1}l&&q(new sjcl.exception.bug(\"random: addEntropy only supports number, array of numbers or string\"));this.i[g]+=b;this.d+=b;h===this.m&&(this.isReady()!==this.m&&C(\"seeded\",Math.max(this.j,this.d)),C(\"progress\",this.getProgress()))},isReady:function(a){a=this.I[a!==t?a:this.B];return this.j&&this.j>=a?this.i[0]>this.R&&\n(new Date).valueOf()>this.O?this.u|this.t:this.t:this.d>=a?this.u|this.m:this.m},getProgress:function(a){a=this.I[a?a:this.B];return this.j>=a?1:this.d>a?1:this.d/a},startCollectors:function(){this.q||(this.a={loadTimeCollector:D(this,this.aa),mouseCollector:D(this,this.ba),keyboardCollector:D(this,this.$),accelerometerCollector:D(this,this.U)},window.addEventListener?(window.addEventListener(\"load\",this.a.loadTimeCollector,u),window.addEventListener(\"mousemove\",this.a.mouseCollector,u),window.addEventListener(\"keypress\",\nthis.a.keyboardCollector,u),window.addEventListener(\"devicemotion\",this.a.accelerometerCollector,u)):document.attachEvent?(document.attachEvent(\"onload\",this.a.loadTimeCollector),document.attachEvent(\"onmousemove\",this.a.mouseCollector),document.attachEvent(\"keypress\",this.a.keyboardCollector)):q(new sjcl.exception.bug(\"can't attach event\")),this.q=!0)},stopCollectors:function(){this.q&&(window.removeEventListener?(window.removeEventListener(\"load\",this.a.loadTimeCollector,u),window.removeEventListener(\"mousemove\",\nthis.a.mouseCollector,u),window.removeEventListener(\"keypress\",this.a.keyboardCollector,u),window.removeEventListener(\"devicemotion\",this.a.accelerometerCollector,u)):document.detachEvent&&(document.detachEvent(\"onload\",this.a.loadTimeCollector),document.detachEvent(\"onmousemove\",this.a.mouseCollector),document.detachEvent(\"keypress\",this.a.keyboardCollector)),this.q=u)},addEventListener:function(a,b){this.w[a][this.V++]=b},removeEventListener:function(a,b){var c,d,e=this.w[a],f=[];for(d in e)e.hasOwnProperty(d)&&\ne[d]===b&&f.push(d);for(c=0;c<f.length;c++)d=f[c],delete e[d]},$:function(){E(1)},ba:function(a){sjcl.random.addEntropy([a.x||a.clientX||a.offsetX||0,a.y||a.clientY||a.offsetY||0],2,\"mouse\");E(0)},aa:function(){E(2)},U:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;var b=\"\";window.orientation&&(b=window.orientation);sjcl.random.addEntropy([a,b],3,\"accelerometer\");E(0)}};\nfunction C(a,b){var c,d=sjcl.random.w[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}function E(a){window&&window.performance&&\"function\"===typeof window.performance.now?sjcl.random.addEntropy(window.performance.now(),a,\"loadtime\"):sjcl.random.addEntropy((new Date).valueOf(),a,\"loadtime\")}function A(a){a.b=B(a).concat(B(a));a.A=new sjcl.cipher.aes(a.b)}function B(a){for(var b=0;4>b&&!(a.f[b]=a.f[b]+1|0,a.f[b]);b++);return a.A.encrypt(a.f)}\nfunction D(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);\na:try{var F,G,H;if(\"undefined\"!==typeof module&&module.exports)G=require(\"crypto\"),F=G.randomBytes(128),sjcl.random.addEntropy(F,1024,\"crypto['randomBytes']\");else if(window&&Uint32Array){H=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(H);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(H);else break a;sjcl.random.addEntropy(H,1024,\"crypto['getRandomValues']\")}}catch(I){console.log(\"There was an error collecting entropy from the browser:\"),\nconsole.log(I)}\nsjcl.json={defaults:{v:1,iter:1E3,ks:128,ts:64,mode:\"ccm\",adata:\"\",cipher:\"aes\"},Y:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json,f=e.e({iv:sjcl.random.randomWords(4,0)},e.defaults),g;e.e(f,c);c=f.adata;\"string\"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));\"string\"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||\"string\"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&0x100!==f.ks||2>f.iv.length||4<\nf.iv.length)&&q(new sjcl.exception.invalid(\"json encrypt: invalid parameters\"));\"string\"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,f),a=g.key.slice(0,f.ks/32),f.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g=a.kem(),f.kemtag=g.tag,a=g.key.slice(0,f.ks/32));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));\"string\"===typeof c&&(c=sjcl.codec.utf8String.toBits(c));g=new sjcl.cipher[f.cipher](a);e.e(d,f);d.key=a;f.ct=sjcl.mode[f.mode].encrypt(g,b,f.iv,c,f.ts);return f},encrypt:function(a,\nb,c,d){var e=sjcl.json,f=e.Y.apply(e,arguments);return e.encode(f)},X:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json;b=e.e(e.e(e.e({},e.defaults),b),c,!0);var f;c=b.adata;\"string\"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));\"string\"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||\"string\"===typeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&0x100!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)&&q(new sjcl.exception.invalid(\"json decrypt: invalid parameters\"));\n\"string\"===typeof a?(f=sjcl.misc.cachedPbkdf2(a,b),a=f.key.slice(0,b.ks/32),b.salt=f.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));\"string\"===typeof c&&(c=sjcl.codec.utf8String.toBits(c));f=new sjcl.cipher[b.cipher](a);c=sjcl.mode[b.mode].decrypt(f,b.ct,b.iv,c,b.ts);e.e(d,b);d.key=a;return sjcl.codec.utf8String.fromBits(c)},decrypt:function(a,b,c,d){var e=sjcl.json;return e.X(a,e.decode(b),c,d)},encode:function(a){var b,c=\n\"{\",d=\"\";for(b in a)if(a.hasOwnProperty(b))switch(b.match(/^[a-z0-9]+$/i)||q(new sjcl.exception.invalid(\"json encode: invalid property name\")),c+=d+'\"'+b+'\":',d=\",\",typeof a[b]){case \"number\":case \"boolean\":c+=a[b];break;case \"string\":c+='\"'+escape(a[b])+'\"';break;case \"object\":c+='\"'+sjcl.codec.base64.fromBits(a[b],0)+'\"';break;default:q(new sjcl.exception.bug(\"json encode: unsupported type\"))}return c+\"}\"},decode:function(a){a=a.replace(/\\s/g,\"\");a.match(/^\\{.*\\}$/)||q(new sjcl.exception.invalid(\"json decode: this isn't json!\"));\na=a.replace(/^\\{|\\}$/g,\"\").split(/,/);var b={},c,d;for(c=0;c<a.length;c++)(d=a[c].match(/^(?:([\"']?)([a-z][a-z0-9]*)\\1):(?:(\\d+)|\"([a-z0-9+\\/%*_.@=\\-]*)\")$/i))||q(new sjcl.exception.invalid(\"json decode: this isn't json!\")),b[d[2]]=d[3]?parseInt(d[3],10):d[2].match(/^(ct|salt|iv)$/)?sjcl.codec.base64.toBits(d[4]):unescape(d[4]);return b},e:function(a,b,c){a===t&&(a={});if(b===t)return a;for(var d in b)b.hasOwnProperty(d)&&(c&&(a[d]!==t&&a[d]!==b[d])&&q(new sjcl.exception.invalid(\"required parameter overridden\")),\na[d]=b[d]);return a},ea:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},da:function(a,b){var c={},d;for(d=0;d<b.length;d++)a[b[d]]!==t&&(c[b[d]]=a[b[d]]);return c}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.ca={};\nsjcl.misc.cachedPbkdf2=function(a,b){var c=sjcl.misc.ca,d;b=b||{};d=b.iter||1E3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};c=b.salt===t?d.firstSalt:b.salt;d[c]=d[c]||sjcl.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};\n\ndefine(\"sjcl\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.sjcl;\n    };\n}(this)));\n","\n/*\r\n * jsrsasign 4.2.1 (c) 2010-2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\n/*\r\nyahoo-min.js\r\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\r\nCode licensed under the BSD License:\r\nhttp://developer.yahoo.com/yui/license.html\r\nversion: 2.9.0\r\n*/\r\nif(typeof YAHOO==\"undefined\"||!YAHOO){var YAHOO={};}YAHOO.namespace=function(){var b=arguments,g=null,e,c,f;for(e=0;e<b.length;e=e+1){f=(\"\"+b[e]).split(\".\");g=YAHOO;for(c=(f[0]==\"YAHOO\")?1:0;c<f.length;c=c+1){g[f[c]]=g[f[c]]||{};g=g[f[c]];}}return g;};YAHOO.log=function(d,a,c){var b=YAHOO.widget.Logger;if(b&&b.log){return b.log(d,a,c);}else{return false;}};YAHOO.register=function(a,f,e){var k=YAHOO.env.modules,c,j,h,g,d;if(!k[a]){k[a]={versions:[],builds:[]};}c=k[a];j=e.version;h=e.build;g=YAHOO.env.listeners;c.name=a;c.version=j;c.build=h;c.versions.push(j);c.builds.push(h);c.mainClass=f;for(d=0;d<g.length;d=d+1){g[d](c);}if(f){f.VERSION=j;f.BUILD=h;}else{YAHOO.log(\"mainClass is undefined for module \"+a,\"warn\");}};YAHOO.env=YAHOO.env||{modules:[],listeners:[]};YAHOO.env.getVersion=function(a){return YAHOO.env.modules[a]||null;};YAHOO.env.parseUA=function(d){var e=function(i){var j=0;return parseFloat(i.replace(/\\./g,function(){return(j++==1)?\"\":\".\";}));},h=navigator,g={ie:0,opera:0,gecko:0,webkit:0,chrome:0,mobile:null,air:0,ipad:0,iphone:0,ipod:0,ios:null,android:0,webos:0,caja:h&&h.cajaVersion,secure:false,os:null},c=d||(navigator&&navigator.userAgent),f=window&&window.location,b=f&&f.href,a;g.secure=b&&(b.toLowerCase().indexOf(\"https\")===0);if(c){if((/windows|win32/i).test(c)){g.os=\"windows\";}else{if((/macintosh/i).test(c)){g.os=\"macintosh\";}else{if((/rhino/i).test(c)){g.os=\"rhino\";}}}if((/KHTML/).test(c)){g.webkit=1;}a=c.match(/AppleWebKit\\/([^\\s]*)/);if(a&&a[1]){g.webkit=e(a[1]);if(/ Mobile\\//.test(c)){g.mobile=\"Apple\";a=c.match(/OS ([^\\s]*)/);if(a&&a[1]){a=e(a[1].replace(\"_\",\".\"));}g.ios=a;g.ipad=g.ipod=g.iphone=0;a=c.match(/iPad|iPod|iPhone/);if(a&&a[0]){g[a[0].toLowerCase()]=g.ios;}}else{a=c.match(/NokiaN[^\\/]*|Android \\d\\.\\d|webOS\\/\\d\\.\\d/);if(a){g.mobile=a[0];}if(/webOS/.test(c)){g.mobile=\"WebOS\";a=c.match(/webOS\\/([^\\s]*);/);if(a&&a[1]){g.webos=e(a[1]);}}if(/ Android/.test(c)){g.mobile=\"Android\";a=c.match(/Android ([^\\s]*);/);if(a&&a[1]){g.android=e(a[1]);}}}a=c.match(/Chrome\\/([^\\s]*)/);if(a&&a[1]){g.chrome=e(a[1]);}else{a=c.match(/AdobeAIR\\/([^\\s]*)/);if(a){g.air=a[0];}}}if(!g.webkit){a=c.match(/Opera[\\s\\/]([^\\s]*)/);if(a&&a[1]){g.opera=e(a[1]);a=c.match(/Version\\/([^\\s]*)/);if(a&&a[1]){g.opera=e(a[1]);}a=c.match(/Opera Mini[^;]*/);if(a){g.mobile=a[0];}}else{a=c.match(/MSIE\\s([^;]*)/);if(a&&a[1]){g.ie=e(a[1]);}else{a=c.match(/Gecko\\/([^\\s]*)/);if(a){g.gecko=1;a=c.match(/rv:([^\\s\\)]*)/);if(a&&a[1]){g.gecko=e(a[1]);}}}}}}return g;};YAHOO.env.ua=YAHOO.env.parseUA();(function(){YAHOO.namespace(\"util\",\"widget\",\"example\");if(\"undefined\"!==typeof YAHOO_config){var b=YAHOO_config.listener,a=YAHOO.env.listeners,d=true,c;if(b){for(c=0;c<a.length;c++){if(a[c]==b){d=false;break;}}if(d){a.push(b);}}}})();YAHOO.lang=YAHOO.lang||{};(function(){var f=YAHOO.lang,a=Object.prototype,c=\"[object Array]\",h=\"[object Function]\",i=\"[object Object]\",b=[],g={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\",\"`\":\"&#x60;\"},d=[\"toString\",\"valueOf\"],e={isArray:function(j){return a.toString.apply(j)===c;},isBoolean:function(j){return typeof j===\"boolean\";},isFunction:function(j){return(typeof j===\"function\")||a.toString.apply(j)===h;},isNull:function(j){return j===null;},isNumber:function(j){return typeof j===\"number\"&&isFinite(j);},isObject:function(j){return(j&&(typeof j===\"object\"||f.isFunction(j)))||false;},isString:function(j){return typeof j===\"string\";},isUndefined:function(j){return typeof j===\"undefined\";},_IEEnumFix:(YAHOO.env.ua.ie)?function(l,k){var j,n,m;for(j=0;j<d.length;j=j+1){n=d[j];m=k[n];if(f.isFunction(m)&&m!=a[n]){l[n]=m;}}}:function(){},escapeHTML:function(j){return j.replace(/[&<>\"'\\/`]/g,function(k){return g[k];});},extend:function(m,n,l){if(!n||!m){throw new Error(\"extend failed, please check that \"+\"all dependencies are included.\");}var k=function(){},j;k.prototype=n.prototype;m.prototype=new k();m.prototype.constructor=m;m.superclass=n.prototype;if(n.prototype.constructor==a.constructor){n.prototype.constructor=n;}if(l){for(j in l){if(f.hasOwnProperty(l,j)){m.prototype[j]=l[j];}}f._IEEnumFix(m.prototype,l);}},augmentObject:function(n,m){if(!m||!n){throw new Error(\"Absorb failed, verify dependencies.\");}var j=arguments,l,o,k=j[2];if(k&&k!==true){for(l=2;l<j.length;l=l+1){n[j[l]]=m[j[l]];}}else{for(o in m){if(k||!(o in n)){n[o]=m[o];}}f._IEEnumFix(n,m);}return n;},augmentProto:function(m,l){if(!l||!m){throw new Error(\"Augment failed, verify dependencies.\");}var j=[m.prototype,l.prototype],k;for(k=2;k<arguments.length;k=k+1){j.push(arguments[k]);}f.augmentObject.apply(this,j);return m;},dump:function(j,p){var l,n,r=[],t=\"{...}\",k=\"f(){...}\",q=\", \",m=\" => \";if(!f.isObject(j)){return j+\"\";}else{if(j instanceof Date||(\"nodeType\" in j&&\"tagName\" in j)){return j;}else{if(f.isFunction(j)){return k;}}}p=(f.isNumber(p))?p:3;if(f.isArray(j)){r.push(\"[\");for(l=0,n=j.length;l<n;l=l+1){if(f.isObject(j[l])){r.push((p>0)?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}if(r.length>1){r.pop();}r.push(\"]\");}else{r.push(\"{\");for(l in j){if(f.hasOwnProperty(j,l)){r.push(l+m);if(f.isObject(j[l])){r.push((p>0)?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}}if(r.length>1){r.pop();}r.push(\"}\");}return r.join(\"\");},substitute:function(x,y,E,l){var D,C,B,G,t,u,F=[],p,z=x.length,A=\"dump\",r=\" \",q=\"{\",m=\"}\",n,w;for(;;){D=x.lastIndexOf(q,z);if(D<0){break;}C=x.indexOf(m,D);if(D+1>C){break;}p=x.substring(D+1,C);G=p;u=null;B=G.indexOf(r);if(B>-1){u=G.substring(B+1);G=G.substring(0,B);}t=y[G];if(E){t=E(G,t,u);}if(f.isObject(t)){if(f.isArray(t)){t=f.dump(t,parseInt(u,10));}else{u=u||\"\";n=u.indexOf(A);if(n>-1){u=u.substring(4);}w=t.toString();if(w===i||n>-1){t=f.dump(t,parseInt(u,10));}else{t=w;}}}else{if(!f.isString(t)&&!f.isNumber(t)){t=\"~-\"+F.length+\"-~\";F[F.length]=p;}}x=x.substring(0,D)+t+x.substring(C+1);if(l===false){z=D-1;}}for(D=F.length-1;D>=0;D=D-1){x=x.replace(new RegExp(\"~-\"+D+\"-~\"),\"{\"+F[D]+\"}\",\"g\");}return x;},trim:function(j){try{return j.replace(/^\\s+|\\s+$/g,\"\");}catch(k){return j;\r\n}},merge:function(){var n={},k=arguments,j=k.length,m;for(m=0;m<j;m=m+1){f.augmentObject(n,k[m],true);}return n;},later:function(t,k,u,n,p){t=t||0;k=k||{};var l=u,s=n,q,j;if(f.isString(u)){l=k[u];}if(!l){throw new TypeError(\"method undefined\");}if(!f.isUndefined(n)&&!f.isArray(s)){s=[n];}q=function(){l.apply(k,s||b);};j=(p)?setInterval(q,t):setTimeout(q,t);return{interval:p,cancel:function(){if(this.interval){clearInterval(j);}else{clearTimeout(j);}}};},isValue:function(j){return(f.isObject(j)||f.isString(j)||f.isNumber(j)||f.isBoolean(j));}};f.hasOwnProperty=(a.hasOwnProperty)?function(j,k){return j&&j.hasOwnProperty&&j.hasOwnProperty(k);}:function(j,k){return !f.isUndefined(j[k])&&j.constructor.prototype[k]!==j[k];};e.augmentObject(f,e,true);YAHOO.util.Lang=f;f.augment=f.augmentProto;YAHOO.augment=f.augmentProto;YAHOO.extend=f.extend;})();YAHOO.register(\"yahoo\",YAHOO,{version:\"2.9.0\",build:\"2800\"});\r\n/*! CryptoJS v3.1.2 core-fix.js\r\n * code.google.com/p/crypto-js\r\n * (c) 2009-2013 by Jeff Mott. All rights reserved.\r\n * code.google.com/p/crypto-js/wiki/License\r\n * THIS IS FIX of 'core.js' to fix Hmac issue.\r\n * https://code.google.com/p/crypto-js/issues/detail?id=84\r\n * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js\r\n */\r\nvar CryptoJS=CryptoJS||(function(e,g){var a={};var b=a.lib={};var j=b.Base=(function(){function n(){}return{extend:function(p){n.prototype=this;var o=new n();if(p){o.mixIn(p)}if(!o.hasOwnProperty(\"init\")){o.init=function(){o.$super.init.apply(this,arguments)}}o.init.prototype=o;o.$super=this;return o},create:function(){var o=this.extend();o.init.apply(o,arguments);return o},init:function(){},mixIn:function(p){for(var o in p){if(p.hasOwnProperty(o)){this[o]=p[o]}}if(p.hasOwnProperty(\"toString\")){this.toString=p.toString}},clone:function(){return this.init.prototype.extend(this)}}}());var l=b.WordArray=j.extend({init:function(o,n){o=this.words=o||[];if(n!=g){this.sigBytes=n}else{this.sigBytes=o.length*4}},toString:function(n){return(n||h).stringify(this)},concat:function(t){var q=this.words;var p=t.words;var n=this.sigBytes;var s=t.sigBytes;this.clamp();if(n%4){for(var r=0;r<s;r++){var o=(p[r>>>2]>>>(24-(r%4)*8))&255;q[(n+r)>>>2]|=o<<(24-((n+r)%4)*8)}}else{for(var r=0;r<s;r+=4){q[(n+r)>>>2]=p[r>>>2]}}this.sigBytes+=s;return this},clamp:function(){var o=this.words;var n=this.sigBytes;o[n>>>2]&=4294967295<<(32-(n%4)*8);o.length=e.ceil(n/4)},clone:function(){var n=j.clone.call(this);n.words=this.words.slice(0);return n},random:function(p){var o=[];for(var n=0;n<p;n+=4){o.push((e.random()*4294967296)|0)}return new l.init(o,p)}});var m=a.enc={};var h=m.Hex={stringify:function(p){var r=p.words;var o=p.sigBytes;var q=[];for(var n=0;n<o;n++){var s=(r[n>>>2]>>>(24-(n%4)*8))&255;q.push((s>>>4).toString(16));q.push((s&15).toString(16))}return q.join(\"\")},parse:function(p){var n=p.length;var q=[];for(var o=0;o<n;o+=2){q[o>>>3]|=parseInt(p.substr(o,2),16)<<(24-(o%8)*4)}return new l.init(q,n/2)}};var d=m.Latin1={stringify:function(q){var r=q.words;var p=q.sigBytes;var n=[];for(var o=0;o<p;o++){var s=(r[o>>>2]>>>(24-(o%4)*8))&255;n.push(String.fromCharCode(s))}return n.join(\"\")},parse:function(p){var n=p.length;var q=[];for(var o=0;o<n;o++){q[o>>>2]|=(p.charCodeAt(o)&255)<<(24-(o%4)*8)}return new l.init(q,n)}};var c=m.Utf8={stringify:function(n){try{return decodeURIComponent(escape(d.stringify(n)))}catch(o){throw new Error(\"Malformed UTF-8 data\")}},parse:function(n){return d.parse(unescape(encodeURIComponent(n)))}};var i=b.BufferedBlockAlgorithm=j.extend({reset:function(){this._data=new l.init();this._nDataBytes=0},_append:function(n){if(typeof n==\"string\"){n=c.parse(n)}this._data.concat(n);this._nDataBytes+=n.sigBytes},_process:function(w){var q=this._data;var x=q.words;var n=q.sigBytes;var t=this.blockSize;var v=t*4;var u=n/v;if(w){u=e.ceil(u)}else{u=e.max((u|0)-this._minBufferSize,0)}var s=u*t;var r=e.min(s*4,n);if(s){for(var p=0;p<s;p+=t){this._doProcessBlock(x,p)}var o=x.splice(0,s);q.sigBytes-=r}return new l.init(o,r)},clone:function(){var n=j.clone.call(this);n._data=this._data.clone();return n},_minBufferSize:0});var f=b.Hasher=i.extend({cfg:j.extend(),init:function(n){this.cfg=this.cfg.extend(n);this.reset()},reset:function(){i.reset.call(this);this._doReset()},update:function(n){this._append(n);this._process();return this},finalize:function(n){if(n){this._append(n)}var o=this._doFinalize();return o},blockSize:512/32,_createHelper:function(n){return function(p,o){return new n.init(o).finalize(p)}},_createHmacHelper:function(n){return function(p,o){return new k.HMAC.init(n,o).finalize(p)}}});var k=a.algo={};return a}(Math));/*\r\nCryptoJS v3.1.2 x64-core-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function(b,c){this.high=b;this.low=c}});a.WordArray=e.extend({init:function(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length},toX32:function(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low)}return h.create(a,this.sigBytes)},clone:function(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++)c[d]=c[d].clone();return b}})})();\r\n/*\r\nCryptoJS v3.1.2 hmac-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var c=CryptoJS,k=c.enc.Utf8;c.algo.HMAC=c.lib.Base.extend({init:function(a,b){a=this._hasher=new a.init;\"string\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update:function(a){this._hasher.update(a);return this},finalize:function(a){var b=\r\nthis._hasher;a=b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}})})();\r\n/*\r\nCryptoJS v3.1.2 sha256-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(k){for(var g=CryptoJS,h=g.lib,v=h.WordArray,j=h.Hasher,h=g.algo,s=[],t=[],u=function(q){return 4294967296*(q-(q|0))|0},l=2,b=0;64>b;){var d;a:{d=l;for(var w=k.sqrt(d),r=2;r<=w;r++)if(!(d%r)){d=!1;break a}d=!0}d&&(8>b&&(s[b]=u(k.pow(l,0.5))),t[b]=u(k.pow(l,1/3)),b++);l++}var n=[],h=h.SHA256=j.extend({_doReset:function(){this._hash=new v.init(s.slice(0))},_doProcessBlock:function(q,h){for(var a=this._hash.words,c=a[0],d=a[1],b=a[2],k=a[3],f=a[4],g=a[5],j=a[6],l=a[7],e=0;64>e;e++){if(16>e)n[e]=\r\nq[h+e]|0;else{var m=n[e-15],p=n[e-2];n[e]=((m<<25|m>>>7)^(m<<14|m>>>18)^m>>>3)+n[e-7]+((p<<15|p>>>17)^(p<<13|p>>>19)^p>>>10)+n[e-16]}m=l+((f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25))+(f&g^~f&j)+t[e]+n[e];p=((c<<30|c>>>2)^(c<<19|c>>>13)^(c<<10|c>>>22))+(c&d^c&b^d&b);l=j;j=g;g=f;f=k+m|0;k=b;b=d;d=c;c=m+p|0}a[0]=a[0]+c|0;a[1]=a[1]+d|0;a[2]=a[2]+b|0;a[3]=a[3]+k|0;a[4]=a[4]+f|0;a[5]=a[5]+g|0;a[6]=a[6]+j|0;a[7]=a[7]+l|0},_doFinalize:function(){var d=this._data,b=d.words,a=8*this._nDataBytes,c=8*d.sigBytes;\r\nb[c>>>5]|=128<<24-c%32;b[(c+64>>>9<<4)+14]=k.floor(a/4294967296);b[(c+64>>>9<<4)+15]=a;d.sigBytes=4*b.length;this._process();return this._hash},clone:function(){var b=j.clone.call(this);b._hash=this._hash.clone();return b}});g.SHA256=j._createHelper(h);g.HmacSHA256=j._createHmacHelper(h)})(Math);\r\n/*\r\nCryptoJS v3.1.2 sha224-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var b=CryptoJS,d=b.lib.WordArray,a=b.algo,c=a.SHA256,a=a.SHA224=c.extend({_doReset:function(){this._hash=new d.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var a=c._doFinalize.call(this);a.sigBytes-=4;return a}});b.SHA224=c._createHelper(a);b.HmacSHA224=c._createHmacHelper(a)})();\r\n/*\r\nCryptoJS v3.1.2 sha512-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){function a(){return d.create.apply(d,arguments)}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),\r\na(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,\r\n2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),\r\na(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,\r\n3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++)v[w]=a();e=e.SHA512=r.extend({_doReset:function(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)])},_doProcessBlock:function(a,d){for(var f=this._hash.words,\r\nF=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<\r\n3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:\r\n0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;\r\nI.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0)},_doFinalize:function(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32()},clone:function(){var a=r.clone.call(this);a._hash=this._hash.clone();return a},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e)})();\r\n/*\r\nCryptoJS v3.1.2 sha384-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var c=CryptoJS,a=c.x64,b=a.Word,e=a.WordArray,a=c.algo,d=a.SHA512,a=a.SHA384=d.extend({_doReset:function(){this._hash=new e.init([new b.init(3418070365,3238371032),new b.init(1654270250,914150663),new b.init(2438529370,812702999),new b.init(355462360,4144912697),new b.init(1731405415,4290775857),new b.init(2394180231,1750603025),new b.init(3675008525,1694076839),new b.init(1203062813,3204075428)])},_doFinalize:function(){var a=d._doFinalize.call(this);a.sigBytes-=16;return a}});c.SHA384=\r\nd._createHelper(a);c.HmacSHA384=d._createHmacHelper(a)})();\r\n/*\r\nCryptoJS v3.1.2 md5-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(E){function h(a,f,g,j,p,h,k){a=a+(f&g|~f&j)+p+k;return(a<<h|a>>>32-h)+f}function k(a,f,g,j,p,h,k){a=a+(f&j|g&~j)+p+k;return(a<<h|a>>>32-h)+f}function l(a,f,g,j,h,k,l){a=a+(f^g^j)+h+l;return(a<<k|a>>>32-k)+f}function n(a,f,g,j,h,k,l){a=a+(g^(f|~j))+h+l;return(a<<k|a>>>32-k)+f}for(var r=CryptoJS,q=r.lib,F=q.WordArray,s=q.Hasher,q=r.algo,a=[],t=0;64>t;t++)a[t]=4294967296*E.abs(E.sin(t+1))|0;q=q.MD5=s.extend({_doReset:function(){this._hash=new F.init([1732584193,4023233417,2562383102,271733878])},\r\n_doProcessBlock:function(m,f){for(var g=0;16>g;g++){var j=f+g,p=m[j];m[j]=(p<<8|p>>>24)&16711935|(p<<24|p>>>8)&4278255360}var g=this._hash.words,j=m[f+0],p=m[f+1],q=m[f+2],r=m[f+3],s=m[f+4],t=m[f+5],u=m[f+6],v=m[f+7],w=m[f+8],x=m[f+9],y=m[f+10],z=m[f+11],A=m[f+12],B=m[f+13],C=m[f+14],D=m[f+15],b=g[0],c=g[1],d=g[2],e=g[3],b=h(b,c,d,e,j,7,a[0]),e=h(e,b,c,d,p,12,a[1]),d=h(d,e,b,c,q,17,a[2]),c=h(c,d,e,b,r,22,a[3]),b=h(b,c,d,e,s,7,a[4]),e=h(e,b,c,d,t,12,a[5]),d=h(d,e,b,c,u,17,a[6]),c=h(c,d,e,b,v,22,a[7]),\r\nb=h(b,c,d,e,w,7,a[8]),e=h(e,b,c,d,x,12,a[9]),d=h(d,e,b,c,y,17,a[10]),c=h(c,d,e,b,z,22,a[11]),b=h(b,c,d,e,A,7,a[12]),e=h(e,b,c,d,B,12,a[13]),d=h(d,e,b,c,C,17,a[14]),c=h(c,d,e,b,D,22,a[15]),b=k(b,c,d,e,p,5,a[16]),e=k(e,b,c,d,u,9,a[17]),d=k(d,e,b,c,z,14,a[18]),c=k(c,d,e,b,j,20,a[19]),b=k(b,c,d,e,t,5,a[20]),e=k(e,b,c,d,y,9,a[21]),d=k(d,e,b,c,D,14,a[22]),c=k(c,d,e,b,s,20,a[23]),b=k(b,c,d,e,x,5,a[24]),e=k(e,b,c,d,C,9,a[25]),d=k(d,e,b,c,r,14,a[26]),c=k(c,d,e,b,w,20,a[27]),b=k(b,c,d,e,B,5,a[28]),e=k(e,b,\r\nc,d,q,9,a[29]),d=k(d,e,b,c,v,14,a[30]),c=k(c,d,e,b,A,20,a[31]),b=l(b,c,d,e,t,4,a[32]),e=l(e,b,c,d,w,11,a[33]),d=l(d,e,b,c,z,16,a[34]),c=l(c,d,e,b,C,23,a[35]),b=l(b,c,d,e,p,4,a[36]),e=l(e,b,c,d,s,11,a[37]),d=l(d,e,b,c,v,16,a[38]),c=l(c,d,e,b,y,23,a[39]),b=l(b,c,d,e,B,4,a[40]),e=l(e,b,c,d,j,11,a[41]),d=l(d,e,b,c,r,16,a[42]),c=l(c,d,e,b,u,23,a[43]),b=l(b,c,d,e,x,4,a[44]),e=l(e,b,c,d,A,11,a[45]),d=l(d,e,b,c,D,16,a[46]),c=l(c,d,e,b,q,23,a[47]),b=n(b,c,d,e,j,6,a[48]),e=n(e,b,c,d,v,10,a[49]),d=n(d,e,b,c,\r\nC,15,a[50]),c=n(c,d,e,b,t,21,a[51]),b=n(b,c,d,e,A,6,a[52]),e=n(e,b,c,d,r,10,a[53]),d=n(d,e,b,c,y,15,a[54]),c=n(c,d,e,b,p,21,a[55]),b=n(b,c,d,e,w,6,a[56]),e=n(e,b,c,d,D,10,a[57]),d=n(d,e,b,c,u,15,a[58]),c=n(c,d,e,b,B,21,a[59]),b=n(b,c,d,e,s,6,a[60]),e=n(e,b,c,d,z,10,a[61]),d=n(d,e,b,c,q,15,a[62]),c=n(c,d,e,b,x,21,a[63]);g[0]=g[0]+b|0;g[1]=g[1]+c|0;g[2]=g[2]+d|0;g[3]=g[3]+e|0},_doFinalize:function(){var a=this._data,f=a.words,g=8*this._nDataBytes,j=8*a.sigBytes;f[j>>>5]|=128<<24-j%32;var h=E.floor(g/\r\n4294967296);f[(j+64>>>9<<4)+15]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;f[(j+64>>>9<<4)+14]=(g<<8|g>>>24)&16711935|(g<<24|g>>>8)&4278255360;a.sigBytes=4*(f.length+1);this._process();a=this._hash;f=a.words;for(g=0;4>g;g++)j=f[g],f[g]=(j<<8|j>>>24)&16711935|(j<<24|j>>>8)&4278255360;return a},clone:function(){var a=s.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=s._createHelper(q);r.HmacMD5=s._createHmacHelper(q)})(Math);\r\n/*\r\nCryptoJS v3.1.2 enc-base64-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\"\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<\r\ne;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\r\n/*\r\nCryptoJS v3.1.2 cipher-core-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\nCryptoJS.lib.Cipher||function(u){var g=CryptoJS,f=g.lib,k=f.Base,l=f.WordArray,q=f.BufferedBlockAlgorithm,r=g.enc.Base64,v=g.algo.EvpKDF,n=f.Cipher=q.extend({cfg:k.extend(),createEncryptor:function(a,b){return this.create(this._ENC_XFORM_MODE,a,b)},createDecryptor:function(a,b){return this.create(this._DEC_XFORM_MODE,a,b)},init:function(a,b,c){this.cfg=this.cfg.extend(c);this._xformMode=a;this._key=b;this.reset()},reset:function(){q.reset.call(this);this._doReset()},process:function(a){this._append(a);\r\nreturn this._process()},finalize:function(a){a&&this._append(a);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(a){return{encrypt:function(b,c,d){return(\"string\"==typeof c?s:j).encrypt(a,b,c,d)},decrypt:function(b,c,d){return(\"string\"==typeof c?s:j).decrypt(a,b,c,d)}}}});f.StreamCipher=n.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var m=g.mode={},t=function(a,b,c){var d=this._iv;d?this._iv=u:d=this._prevBlock;for(var e=\r\n0;e<c;e++)a[b+e]^=d[e]},h=(f.BlockCipherMode=k.extend({createEncryptor:function(a,b){return this.Encryptor.create(a,b)},createDecryptor:function(a,b){return this.Decryptor.create(a,b)},init:function(a,b){this._cipher=a;this._iv=b}})).extend();h.Encryptor=h.extend({processBlock:function(a,b){var c=this._cipher,d=c.blockSize;t.call(this,a,b,d);c.encryptBlock(a,b);this._prevBlock=a.slice(b,b+d)}});h.Decryptor=h.extend({processBlock:function(a,b){var c=this._cipher,d=c.blockSize,e=a.slice(b,b+d);c.decryptBlock(a,\r\nb);t.call(this,a,b,d);this._prevBlock=e}});m=m.CBC=h;h=(g.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,e=[],f=0;f<c;f+=4)e.push(d);c=l.create(e,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};f.BlockCipher=n.extend({cfg:n.cfg.extend({mode:m,padding:h}),reset:function(){n.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;\r\nthis._mode=c.call(a,this,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var p=f.CipherParams=k.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),m=(g.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;\r\nreturn(a?l.create([1398893684,1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=l.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return p.create({ciphertext:a,salt:c})}},j=f.SerializableCipher=k.extend({cfg:k.extend({format:m}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var e=a.createEncryptor(c,d);b=e.finalize(b);e=e.cfg;return p.create({ciphertext:b,key:c,iv:e.iv,algorithm:a,mode:e.mode,padding:e.padding,\r\nblockSize:a.blockSize,formatter:d.format})},decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),g=(g.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=l.random(8));a=v.create({keySize:b+c}).compute(a,d);c=l.create(a.words.slice(b),4*c);a.sigBytes=4*b;return p.create({key:a,iv:c,salt:d})}},s=f.PasswordBasedCipher=j.extend({cfg:j.cfg.extend({kdf:g}),encrypt:function(a,\r\nb,c,d){d=this.cfg.extend(d);c=d.kdf.execute(c,a.keySize,a.ivSize);d.iv=c.iv;a=j.encrypt.call(this,a,b,c.key,d);a.mixIn(c);return a},decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);c=d.kdf.execute(c,a.keySize,a.ivSize,b.salt);d.iv=c.iv;return j.decrypt.call(this,a,b,c.key,d)}})}();\r\n/*\r\nCryptoJS v3.1.2 aes-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++)g[k]=128>k?k<<1:k<<1^283;for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1}var F=[0,1,2,4,8,\r\n16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++)if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d}e=this._invKeySchedule=[];for(a=0;a<c;a++)h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>\r\n8&255]]^w[j[d&255]]},encryptBlock:function(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j)},decryptBlock:function(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a},_doCryptBlock:function(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++)var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=\r\nb[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p},keySize:8});q.AES=x._createHelper(r)})();\r\n/*\r\nCryptoJS v3.1.2 tripledes-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){function j(b,c){var a=(this._lBlock>>>b^this._rBlock)&c;this._rBlock^=a;this._lBlock^=a<<b}function l(b,c){var a=(this._rBlock>>>b^this._lBlock)&c;this._lBlock^=a;this._rBlock^=a<<b}var h=CryptoJS,e=h.lib,n=e.WordArray,e=e.BlockCipher,g=h.algo,q=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],p=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,\r\n55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],r=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],s=[{\"0\":8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,\r\n2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,\r\n1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{\"0\":1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,\r\n75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,\r\n276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{\"0\":260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,\r\n14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,\r\n17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{\"0\":2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,\r\n98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,\r\n1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{\"0\":128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,\r\n10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,\r\n83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{\"0\":268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,\r\n2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{\"0\":1048576,\r\n16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,\r\n496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{\"0\":134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,\r\n2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,\r\n2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],t=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],m=g.DES=e.extend({_doReset:function(){for(var b=this._key.words,c=[],a=0;56>a;a++){var f=q[a]-1;c[a]=b[f>>>5]>>>31-f%32&1}b=this._subKeys=[];for(f=0;16>f;f++){for(var d=b[f]=[],e=r[f],a=0;24>a;a++)d[a/6|0]|=c[(p[a]-1+e)%28]<<31-a%6,d[4+(a/6|0)]|=c[28+(p[a+24]-1+e)%28]<<31-a%6;d[0]=d[0]<<1|d[0]>>>31;for(a=1;7>a;a++)d[a]>>>=\r\n4*(a-1)+3;d[7]=d[7]<<5|d[7]>>>27}c=this._invSubKeys=[];for(a=0;16>a;a++)c[a]=b[15-a]},encryptBlock:function(b,c){this._doCryptBlock(b,c,this._subKeys)},decryptBlock:function(b,c){this._doCryptBlock(b,c,this._invSubKeys)},_doCryptBlock:function(b,c,a){this._lBlock=b[c];this._rBlock=b[c+1];j.call(this,4,252645135);j.call(this,16,65535);l.call(this,2,858993459);l.call(this,8,16711935);j.call(this,1,1431655765);for(var f=0;16>f;f++){for(var d=a[f],e=this._lBlock,h=this._rBlock,g=0,k=0;8>k;k++)g|=s[k][((h^\r\nd[k])&t[k])>>>0];this._lBlock=h;this._rBlock=e^g}a=this._lBlock;this._lBlock=this._rBlock;this._rBlock=a;j.call(this,1,1431655765);l.call(this,8,16711935);l.call(this,2,858993459);j.call(this,16,65535);j.call(this,4,252645135);b[c]=this._lBlock;b[c+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});h.DES=e._createHelper(m);g=g.TripleDES=e.extend({_doReset:function(){var b=this._key.words;this._des1=m.createEncryptor(n.create(b.slice(0,2)));this._des2=m.createEncryptor(n.create(b.slice(2,4)));this._des3=\r\nm.createEncryptor(n.create(b.slice(4,6)))},encryptBlock:function(b,c){this._des1.encryptBlock(b,c);this._des2.decryptBlock(b,c);this._des3.encryptBlock(b,c)},decryptBlock:function(b,c){this._des3.decryptBlock(b,c);this._des2.encryptBlock(b,c);this._des1.decryptBlock(b,c)},keySize:6,ivSize:2,blockSize:2});h.TripleDES=e._createHelper(g)})();\r\n/*\r\nCryptoJS v3.1.2 sha1-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var k=CryptoJS,b=k.lib,m=b.WordArray,l=b.Hasher,d=[],b=k.algo.SHA1=l.extend({_doReset:function(){this._hash=new m.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(n,p){for(var a=this._hash.words,e=a[0],f=a[1],h=a[2],j=a[3],b=a[4],c=0;80>c;c++){if(16>c)d[c]=n[p+c]|0;else{var g=d[c-3]^d[c-8]^d[c-14]^d[c-16];d[c]=g<<1|g>>>31}g=(e<<5|e>>>27)+b+d[c];g=20>c?g+((f&h|~f&j)+1518500249):40>c?g+((f^h^j)+1859775393):60>c?g+((f&h|f&j|h&j)-1894007588):g+((f^h^\r\nj)-899497514);b=j;j=h;h=f<<30|f>>>2;f=e;e=g}a[0]=a[0]+e|0;a[1]=a[1]+f|0;a[2]=a[2]+h|0;a[3]=a[3]+j|0;a[4]=a[4]+b|0},_doFinalize:function(){var b=this._data,d=b.words,a=8*this._nDataBytes,e=8*b.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=Math.floor(a/4294967296);d[(e+64>>>9<<4)+15]=a;b.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var b=l.clone.call(this);b._hash=this._hash.clone();return b}});k.SHA1=l._createHelper(b);k.HmacSHA1=l._createHmacHelper(b)})();\r\n/*\r\nCryptoJS v3.1.2 ripemd160-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/*\r\n\r\n(c) 2012 by Cedric Mesnil. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n(function(){var q=CryptoJS,d=q.lib,n=d.WordArray,p=d.Hasher,d=q.algo,x=n.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),y=n.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),z=n.create([11,14,15,12,\r\n5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),A=n.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),B=n.create([0,1518500249,1859775393,2400959708,2840853838]),C=n.create([1352829926,1548603684,1836072691,\r\n2053994217,0]),d=d.RIPEMD160=p.extend({_doReset:function(){this._hash=n.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,v){for(var b=0;16>b;b++){var c=v+b,f=e[c];e[c]=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360}var c=this._hash.words,f=B.words,d=C.words,n=x.words,q=y.words,p=z.words,w=A.words,t,g,h,j,r,u,k,l,m,s;u=t=c[0];k=g=c[1];l=h=c[2];m=j=c[3];s=r=c[4];for(var a,b=0;80>b;b+=1)a=t+e[v+n[b]]|0,a=16>b?a+((g^h^j)+f[0]):32>b?a+((g&h|~g&j)+f[1]):48>b?\r\na+(((g|~h)^j)+f[2]):64>b?a+((g&j|h&~j)+f[3]):a+((g^(h|~j))+f[4]),a|=0,a=a<<p[b]|a>>>32-p[b],a=a+r|0,t=r,r=j,j=h<<10|h>>>22,h=g,g=a,a=u+e[v+q[b]]|0,a=16>b?a+((k^(l|~m))+d[0]):32>b?a+((k&m|l&~m)+d[1]):48>b?a+(((k|~l)^m)+d[2]):64>b?a+((k&l|~k&m)+d[3]):a+((k^l^m)+d[4]),a|=0,a=a<<w[b]|a>>>32-w[b],a=a+s|0,u=s,s=m,m=l<<10|l>>>22,l=k,k=a;a=c[1]+h+m|0;c[1]=c[2]+j+s|0;c[2]=c[3]+r+u|0;c[3]=c[4]+t+k|0;c[4]=c[0]+g+l|0;c[0]=a},_doFinalize:function(){var e=this._data,d=e.words,b=8*this._nDataBytes,c=8*e.sigBytes;\r\nd[c>>>5]|=128<<24-c%32;d[(c+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;e.sigBytes=4*(d.length+1);this._process();e=this._hash;d=e.words;for(b=0;5>b;b++)c=d[b],d[b]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return e},clone:function(){var d=p.clone.call(this);d._hash=this._hash.clone();return d}});q.RIPEMD160=p._createHelper(d);q.HmacRIPEMD160=p._createHmacHelper(d)})(Math);\r\n/*\r\nCryptoJS v3.1.2 pbkdf2-min.js\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function(a){this.cfg=this.cfg.extend(a)},compute:function(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++)j[e]^=t[e]}g.concat(h);\r\nr[0]++}g.sigBytes=4*n;return g}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b)}})();\r\n\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nvar b64map=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var b64pad=\"=\";function hex2b64(d){var b;var e;var a=\"\";for(b=0;b+3<=d.length;b+=3){e=parseInt(d.substring(b,b+3),16);a+=b64map.charAt(e>>6)+b64map.charAt(e&63)}if(b+1==d.length){e=parseInt(d.substring(b,b+1),16);a+=b64map.charAt(e<<2)}else{if(b+2==d.length){e=parseInt(d.substring(b,b+2),16);a+=b64map.charAt(e>>2)+b64map.charAt((e&3)<<4)}}if(b64pad){while((a.length&3)>0){a+=b64pad}}return a}function b64tohex(f){var d=\"\";var e;var b=0;var c;var a;for(e=0;e<f.length;++e){if(f.charAt(e)==b64pad){break}a=b64map.indexOf(f.charAt(e));if(a<0){continue}if(b==0){d+=int2char(a>>2);c=a&3;b=1}else{if(b==1){d+=int2char((c<<2)|(a>>4));c=a&15;b=2}else{if(b==2){d+=int2char(c);d+=int2char(a>>2);c=a&3;b=3}else{d+=int2char((c<<2)|(a>>4));d+=int2char(a&15);b=0}}}}if(b==1){d+=int2char(c<<2)}return d}function b64toBA(e){var d=b64tohex(e);var c;var b=new Array();for(c=0;2*c<d.length;++c){b[c]=parseInt(d.substring(2*c,2*c+2),16)}return b};\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nvar dbits;var canary=244837814094590;var j_lm=((canary&16777215)==15715070);function BigInteger(e,d,f){if(e!=null){if(\"number\"==typeof e){this.fromNumber(e,d,f)}else{if(d==null&&\"string\"!=typeof e){this.fromString(e,256)}else{this.fromString(e,d)}}}}function nbi(){return new BigInteger(null)}function am1(f,a,b,e,h,g){while(--g>=0){var d=a*this[f++]+b[e]+h;h=Math.floor(d/67108864);b[e++]=d&67108863}return h}function am2(f,q,r,e,o,a){var k=q&32767,p=q>>15;while(--a>=0){var d=this[f]&32767;var g=this[f++]>>15;var b=p*d+g*k;d=k*d+((b&32767)<<15)+r[e]+(o&1073741823);o=(d>>>30)+(b>>>15)+p*g+(o>>>30);r[e++]=d&1073741823}return o}function am3(f,q,r,e,o,a){var k=q&16383,p=q>>14;while(--a>=0){var d=this[f]&16383;var g=this[f++]>>14;var b=p*d+g*k;d=k*d+((b&16383)<<14)+r[e]+o;o=(d>>28)+(b>>14)+p*g;r[e++]=d&268435455}return o}if(j_lm&&(navigator.appName==\"Microsoft Internet Explorer\")){BigInteger.prototype.am=am2;dbits=30}else{if(j_lm&&(navigator.appName!=\"Netscape\")){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=((1<<dbits)-1);BigInteger.prototype.DV=(1<<dbits);var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM=\"0123456789abcdefghijklmnopqrstuvwxyz\";var BI_RC=new Array();var rr,vv;rr=\"0\".charCodeAt(0);for(vv=0;vv<=9;++vv){BI_RC[rr++]=vv}rr=\"a\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}rr=\"A\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}function int2char(a){return BI_RM.charAt(a)}function intAt(b,a){var d=BI_RC[b.charCodeAt(a)];return(d==null)?-1:d}function bnpCopyTo(b){for(var a=this.t-1;a>=0;--a){b[a]=this[a]}b.t=this.t;b.s=this.s}function bnpFromInt(a){this.t=1;this.s=(a<0)?-1:0;if(a>0){this[0]=a}else{if(a<-1){this[0]=a+this.DV}else{this.t=0}}}function nbv(a){var b=nbi();b.fromInt(a);return b}function bnpFromString(h,c){var e;if(c==16){e=4}else{if(c==8){e=3}else{if(c==256){e=8}else{if(c==2){e=1}else{if(c==32){e=5}else{if(c==4){e=2}else{this.fromRadix(h,c);return}}}}}}this.t=0;this.s=0;var g=h.length,d=false,f=0;while(--g>=0){var a=(e==8)?h[g]&255:intAt(h,g);if(a<0){if(h.charAt(g)==\"-\"){d=true}continue}d=false;if(f==0){this[this.t++]=a}else{if(f+e>this.DB){this[this.t-1]|=(a&((1<<(this.DB-f))-1))<<f;this[this.t++]=(a>>(this.DB-f))}else{this[this.t-1]|=a<<f}}f+=e;if(f>=this.DB){f-=this.DB}}if(e==8&&(h[0]&128)!=0){this.s=-1;if(f>0){this[this.t-1]|=((1<<(this.DB-f))-1)<<f}}this.clamp();if(d){BigInteger.ZERO.subTo(this,this)}}function bnpClamp(){var a=this.s&this.DM;while(this.t>0&&this[this.t-1]==a){--this.t}}function bnToString(c){if(this.s<0){return\"-\"+this.negate().toString(c)}var e;if(c==16){e=4}else{if(c==8){e=3}else{if(c==2){e=1}else{if(c==32){e=5}else{if(c==4){e=2}else{return this.toRadix(c)}}}}}var g=(1<<e)-1,l,a=false,h=\"\",f=this.t;var j=this.DB-(f*this.DB)%e;if(f-->0){if(j<this.DB&&(l=this[f]>>j)>0){a=true;h=int2char(l)}while(f>=0){if(j<e){l=(this[f]&((1<<j)-1))<<(e-j);l|=this[--f]>>(j+=this.DB-e)}else{l=(this[f]>>(j-=e))&g;if(j<=0){j+=this.DB;--f}}if(l>0){a=true}if(a){h+=int2char(l)}}}return a?h:\"0\"}function bnNegate(){var a=nbi();BigInteger.ZERO.subTo(this,a);return a}function bnAbs(){return(this.s<0)?this.negate():this}function bnCompareTo(b){var d=this.s-b.s;if(d!=0){return d}var c=this.t;d=c-b.t;if(d!=0){return(this.s<0)?-d:d}while(--c>=0){if((d=this[c]-b[c])!=0){return d}}return 0}function nbits(a){var c=1,b;if((b=a>>>16)!=0){a=b;c+=16}if((b=a>>8)!=0){a=b;c+=8}if((b=a>>4)!=0){a=b;c+=4}if((b=a>>2)!=0){a=b;c+=2}if((b=a>>1)!=0){a=b;c+=1}return c}function bnBitLength(){if(this.t<=0){return 0}return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM))}function bnpDLShiftTo(c,b){var a;for(a=this.t-1;a>=0;--a){b[a+c]=this[a]}for(a=c-1;a>=0;--a){b[a]=0}b.t=this.t+c;b.s=this.s}function bnpDRShiftTo(c,b){for(var a=c;a<this.t;++a){b[a-c]=this[a]}b.t=Math.max(this.t-c,0);b.s=this.s}function bnpLShiftTo(j,e){var b=j%this.DB;var a=this.DB-b;var g=(1<<a)-1;var f=Math.floor(j/this.DB),h=(this.s<<b)&this.DM,d;for(d=this.t-1;d>=0;--d){e[d+f+1]=(this[d]>>a)|h;h=(this[d]&g)<<b}for(d=f-1;d>=0;--d){e[d]=0}e[f]=h;e.t=this.t+f+1;e.s=this.s;e.clamp()}function bnpRShiftTo(g,d){d.s=this.s;var e=Math.floor(g/this.DB);if(e>=this.t){d.t=0;return}var b=g%this.DB;var a=this.DB-b;var f=(1<<b)-1;d[0]=this[e]>>b;for(var c=e+1;c<this.t;++c){d[c-e-1]|=(this[c]&f)<<a;d[c-e]=this[c]>>b}if(b>0){d[this.t-e-1]|=(this.s&f)<<a}d.t=this.t-e;d.clamp()}function bnpSubTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]-d[e];f[e++]=g&this.DM;g>>=this.DB}if(d.t<this.t){g-=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB}g+=this.s}else{g+=this.s;while(e<d.t){g-=d[e];f[e++]=g&this.DM;g>>=this.DB}g-=d.s}f.s=(g<0)?-1:0;if(g<-1){f[e++]=this.DV+g}else{if(g>0){f[e++]=g}}f.t=e;f.clamp()}function bnpMultiplyTo(c,e){var b=this.abs(),f=c.abs();var d=b.t;e.t=d+f.t;while(--d>=0){e[d]=0}for(d=0;d<f.t;++d){e[d+b.t]=b.am(0,f[d],e,d,0,b.t)}e.s=0;e.clamp();if(this.s!=c.s){BigInteger.ZERO.subTo(e,e)}}function bnpSquareTo(d){var a=this.abs();var b=d.t=2*a.t;while(--b>=0){d[b]=0}for(b=0;b<a.t-1;++b){var e=a.am(b,a[b],d,2*b,0,1);if((d[b+a.t]+=a.am(b+1,2*a[b],d,2*b+1,e,a.t-b-1))>=a.DV){d[b+a.t]-=a.DV;d[b+a.t+1]=1}}if(d.t>0){d[d.t-1]+=a.am(b,a[b],d,2*b,0,1)}d.s=0;d.clamp()}function bnpDivRemTo(n,h,g){var w=n.abs();if(w.t<=0){return}var k=this.abs();if(k.t<w.t){if(h!=null){h.fromInt(0)}if(g!=null){this.copyTo(g)}return}if(g==null){g=nbi()}var d=nbi(),a=this.s,l=n.s;var v=this.DB-nbits(w[w.t-1]);if(v>0){w.lShiftTo(v,d);k.lShiftTo(v,g)}else{w.copyTo(d);k.copyTo(g)}var p=d.t;var b=d[p-1];if(b==0){return}var o=b*(1<<this.F1)+((p>1)?d[p-2]>>this.F2:0);var A=this.FV/o,z=(1<<this.F1)/o,x=1<<this.F2;var u=g.t,s=u-p,f=(h==null)?nbi():h;d.dlShiftTo(s,f);if(g.compareTo(f)>=0){g[g.t++]=1;g.subTo(f,g)}BigInteger.ONE.dlShiftTo(p,f);f.subTo(d,d);while(d.t<p){d[d.t++]=0}while(--s>=0){var c=(g[--u]==b)?this.DM:Math.floor(g[u]*A+(g[u-1]+x)*z);if((g[u]+=d.am(0,c,g,s,0,p))<c){d.dlShiftTo(s,f);g.subTo(f,g);while(g[u]<--c){g.subTo(f,g)}}}if(h!=null){g.drShiftTo(p,h);if(a!=l){BigInteger.ZERO.subTo(h,h)}}g.t=p;g.clamp();if(v>0){g.rShiftTo(v,g)}if(a<0){BigInteger.ZERO.subTo(g,g)}}function bnMod(b){var c=nbi();this.abs().divRemTo(b,null,c);if(this.s<0&&c.compareTo(BigInteger.ZERO)>0){b.subTo(c,c)}return c}function Classic(a){this.m=a}function cConvert(a){if(a.s<0||a.compareTo(this.m)>=0){return a.mod(this.m)}else{return a}}function cRevert(a){return a}function cReduce(a){a.divRemTo(this.m,null,a)}function cMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}function cSqrTo(a,b){a.squareTo(b);this.reduce(b)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1){return 0}var a=this[0];if((a&1)==0){return 0}var b=a&3;b=(b*(2-(a&15)*b))&15;b=(b*(2-(a&255)*b))&255;b=(b*(2-(((a&65535)*b)&65535)))&65535;b=(b*(2-a*b%this.DV))%this.DV;return(b>0)?this.DV-b:-b}function Montgomery(a){this.m=a;this.mp=a.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<(a.DB-15))-1;this.mt2=2*a.t}function montConvert(a){var b=nbi();a.abs().dlShiftTo(this.m.t,b);b.divRemTo(this.m,null,b);if(a.s<0&&b.compareTo(BigInteger.ZERO)>0){this.m.subTo(b,b)}return b}function montRevert(a){var b=nbi();a.copyTo(b);this.reduce(b);return b}function montReduce(a){while(a.t<=this.mt2){a[a.t++]=0}for(var c=0;c<this.m.t;++c){var b=a[c]&32767;var d=(b*this.mpl+(((b*this.mph+(a[c]>>15)*this.mpl)&this.um)<<15))&a.DM;b=c+this.m.t;a[b]+=this.m.am(0,d,a,c,0,this.m.t);while(a[b]>=a.DV){a[b]-=a.DV;a[++b]++}}a.clamp();a.drShiftTo(this.m.t,a);if(a.compareTo(this.m)>=0){a.subTo(this.m,a)}}function montSqrTo(a,b){a.squareTo(b);this.reduce(b)}function montMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return((this.t>0)?(this[0]&1):this.s)==0}function bnpExp(h,j){if(h>4294967295||h<1){return BigInteger.ONE}var f=nbi(),a=nbi(),d=j.convert(this),c=nbits(h)-1;d.copyTo(f);while(--c>=0){j.sqrTo(f,a);if((h&(1<<c))>0){j.mulTo(a,d,f)}else{var b=f;f=a;a=b}}return j.revert(f)}function bnModPowInt(b,a){var c;if(b<256||a.isEven()){c=new Classic(a)}else{c=new Montgomery(a)}return this.exp(b,c)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nfunction bnClone(){var a=nbi();this.copyTo(a);return a}function bnIntValue(){if(this.s<0){if(this.t==1){return this[0]-this.DV}else{if(this.t==0){return -1}}}else{if(this.t==1){return this[0]}else{if(this.t==0){return 0}}}return((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0]}function bnByteValue(){return(this.t==0)?this.s:(this[0]<<24)>>24}function bnShortValue(){return(this.t==0)?this.s:(this[0]<<16)>>16}function bnpChunkSize(a){return Math.floor(Math.LN2*this.DB/Math.log(a))}function bnSigNum(){if(this.s<0){return -1}else{if(this.t<=0||(this.t==1&&this[0]<=0)){return 0}else{return 1}}}function bnpToRadix(c){if(c==null){c=10}if(this.signum()==0||c<2||c>36){return\"0\"}var f=this.chunkSize(c);var e=Math.pow(c,f);var i=nbv(e),j=nbi(),h=nbi(),g=\"\";this.divRemTo(i,j,h);while(j.signum()>0){g=(e+h.intValue()).toString(c).substr(1)+g;j.divRemTo(i,j,h)}return h.intValue().toString(c)+g}function bnpFromRadix(m,h){this.fromInt(0);if(h==null){h=10}var f=this.chunkSize(h);var g=Math.pow(h,f),e=false,a=0,l=0;for(var c=0;c<m.length;++c){var k=intAt(m,c);if(k<0){if(m.charAt(c)==\"-\"&&this.signum()==0){e=true}continue}l=h*l+k;if(++a>=f){this.dMultiply(g);this.dAddOffset(l,0);a=0;l=0}}if(a>0){this.dMultiply(Math.pow(h,a));this.dAddOffset(l,0)}if(e){BigInteger.ZERO.subTo(this,this)}}function bnpFromNumber(f,e,h){if(\"number\"==typeof e){if(f<2){this.fromInt(1)}else{this.fromNumber(f,h);if(!this.testBit(f-1)){this.bitwiseTo(BigInteger.ONE.shiftLeft(f-1),op_or,this)}if(this.isEven()){this.dAddOffset(1,0)}while(!this.isProbablePrime(e)){this.dAddOffset(2,0);if(this.bitLength()>f){this.subTo(BigInteger.ONE.shiftLeft(f-1),this)}}}}else{var d=new Array(),g=f&7;d.length=(f>>3)+1;e.nextBytes(d);if(g>0){d[0]&=((1<<g)-1)}else{d[0]=0}this.fromString(d,256)}}function bnToByteArray(){var b=this.t,c=new Array();c[0]=this.s;var e=this.DB-(b*this.DB)%8,f,a=0;if(b-->0){if(e<this.DB&&(f=this[b]>>e)!=(this.s&this.DM)>>e){c[a++]=f|(this.s<<(this.DB-e))}while(b>=0){if(e<8){f=(this[b]&((1<<e)-1))<<(8-e);f|=this[--b]>>(e+=this.DB-8)}else{f=(this[b]>>(e-=8))&255;if(e<=0){e+=this.DB;--b}}if((f&128)!=0){f|=-256}if(a==0&&(this.s&128)!=(f&128)){++a}if(a>0||f!=this.s){c[a++]=f}}}return c}function bnEquals(b){return(this.compareTo(b)==0)}function bnMin(b){return(this.compareTo(b)<0)?this:b}function bnMax(b){return(this.compareTo(b)>0)?this:b}function bnpBitwiseTo(c,h,e){var d,g,b=Math.min(c.t,this.t);for(d=0;d<b;++d){e[d]=h(this[d],c[d])}if(c.t<this.t){g=c.s&this.DM;for(d=b;d<this.t;++d){e[d]=h(this[d],g)}e.t=this.t}else{g=this.s&this.DM;for(d=b;d<c.t;++d){e[d]=h(g,c[d])}e.t=c.t}e.s=h(this.s,c.s);e.clamp()}function op_and(a,b){return a&b}function bnAnd(b){var c=nbi();this.bitwiseTo(b,op_and,c);return c}function op_or(a,b){return a|b}function bnOr(b){var c=nbi();this.bitwiseTo(b,op_or,c);return c}function op_xor(a,b){return a^b}function bnXor(b){var c=nbi();this.bitwiseTo(b,op_xor,c);return c}function op_andnot(a,b){return a&~b}function bnAndNot(b){var c=nbi();this.bitwiseTo(b,op_andnot,c);return c}function bnNot(){var b=nbi();for(var a=0;a<this.t;++a){b[a]=this.DM&~this[a]}b.t=this.t;b.s=~this.s;return b}function bnShiftLeft(b){var a=nbi();if(b<0){this.rShiftTo(-b,a)}else{this.lShiftTo(b,a)}return a}function bnShiftRight(b){var a=nbi();if(b<0){this.lShiftTo(-b,a)}else{this.rShiftTo(b,a)}return a}function lbit(a){if(a==0){return -1}var b=0;if((a&65535)==0){a>>=16;b+=16}if((a&255)==0){a>>=8;b+=8}if((a&15)==0){a>>=4;b+=4}if((a&3)==0){a>>=2;b+=2}if((a&1)==0){++b}return b}function bnGetLowestSetBit(){for(var a=0;a<this.t;++a){if(this[a]!=0){return a*this.DB+lbit(this[a])}}if(this.s<0){return this.t*this.DB}return -1}function cbit(a){var b=0;while(a!=0){a&=a-1;++b}return b}function bnBitCount(){var c=0,a=this.s&this.DM;for(var b=0;b<this.t;++b){c+=cbit(this[b]^a)}return c}function bnTestBit(b){var a=Math.floor(b/this.DB);if(a>=this.t){return(this.s!=0)}return((this[a]&(1<<(b%this.DB)))!=0)}function bnpChangeBit(c,b){var a=BigInteger.ONE.shiftLeft(c);this.bitwiseTo(a,b,a);return a}function bnSetBit(a){return this.changeBit(a,op_or)}function bnClearBit(a){return this.changeBit(a,op_andnot)}function bnFlipBit(a){return this.changeBit(a,op_xor)}function bnpAddTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]+d[e];f[e++]=g&this.DM;g>>=this.DB}if(d.t<this.t){g+=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB}g+=this.s}else{g+=this.s;while(e<d.t){g+=d[e];f[e++]=g&this.DM;g>>=this.DB}g+=d.s}f.s=(g<0)?-1:0;if(g>0){f[e++]=g}else{if(g<-1){f[e++]=this.DV+g}}f.t=e;f.clamp()}function bnAdd(b){var c=nbi();this.addTo(b,c);return c}function bnSubtract(b){var c=nbi();this.subTo(b,c);return c}function bnMultiply(b){var c=nbi();this.multiplyTo(b,c);return c}function bnSquare(){var a=nbi();this.squareTo(a);return a}function bnDivide(b){var c=nbi();this.divRemTo(b,c,null);return c}function bnRemainder(b){var c=nbi();this.divRemTo(b,null,c);return c}function bnDivideAndRemainder(b){var d=nbi(),c=nbi();this.divRemTo(b,d,c);return new Array(d,c)}function bnpDMultiply(a){this[this.t]=this.am(0,a-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(b,a){if(b==0){return}while(this.t<=a){this[this.t++]=0}this[a]+=b;while(this[a]>=this.DV){this[a]-=this.DV;if(++a>=this.t){this[this.t++]=0}++this[a]}}function NullExp(){}function nNop(a){return a}function nMulTo(a,c,b){a.multiplyTo(c,b)}function nSqrTo(a,b){a.squareTo(b)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(a){return this.exp(a,new NullExp())}function bnpMultiplyLowerTo(b,f,e){var d=Math.min(this.t+b.t,f);e.s=0;e.t=d;while(d>0){e[--d]=0}var c;for(c=e.t-this.t;d<c;++d){e[d+this.t]=this.am(0,b[d],e,d,0,this.t)}for(c=Math.min(b.t,f);d<c;++d){this.am(0,b[d],e,d,0,f-d)}e.clamp()}function bnpMultiplyUpperTo(b,e,d){--e;var c=d.t=this.t+b.t-e;d.s=0;while(--c>=0){d[c]=0}for(c=Math.max(e-this.t,0);c<b.t;++c){d[this.t+c-e]=this.am(e-c,b[c],d,0,0,this.t+c-e)}d.clamp();d.drShiftTo(1,d)}function Barrett(a){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*a.t,this.r2);this.mu=this.r2.divide(a);this.m=a}function barrettConvert(a){if(a.s<0||a.t>2*this.m.t){return a.mod(this.m)}else{if(a.compareTo(this.m)<0){return a}else{var b=nbi();a.copyTo(b);this.reduce(b);return b}}}function barrettRevert(a){return a}function barrettReduce(a){a.drShiftTo(this.m.t-1,this.r2);if(a.t>this.m.t+1){a.t=this.m.t+1;a.clamp()}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(a.compareTo(this.r2)<0){a.dAddOffset(1,this.m.t+1)}a.subTo(this.r2,a);while(a.compareTo(this.m)>=0){a.subTo(this.m,a)}}function barrettSqrTo(a,b){a.squareTo(b);this.reduce(b)}function barrettMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(q,f){var o=q.bitLength(),h,b=nbv(1),v;if(o<=0){return b}else{if(o<18){h=1}else{if(o<48){h=3}else{if(o<144){h=4}else{if(o<768){h=5}else{h=6}}}}}if(o<8){v=new Classic(f)}else{if(f.isEven()){v=new Barrett(f)}else{v=new Montgomery(f)}}var p=new Array(),d=3,s=h-1,a=(1<<h)-1;p[1]=v.convert(this);if(h>1){var A=nbi();v.sqrTo(p[1],A);while(d<=a){p[d]=nbi();v.mulTo(A,p[d-2],p[d]);d+=2}}var l=q.t-1,x,u=true,c=nbi(),y;o=nbits(q[l])-1;while(l>=0){if(o>=s){x=(q[l]>>(o-s))&a}else{x=(q[l]&((1<<(o+1))-1))<<(s-o);if(l>0){x|=q[l-1]>>(this.DB+o-s)}}d=h;while((x&1)==0){x>>=1;--d}if((o-=d)<0){o+=this.DB;--l}if(u){p[x].copyTo(b);u=false}else{while(d>1){v.sqrTo(b,c);v.sqrTo(c,b);d-=2}if(d>0){v.sqrTo(b,c)}else{y=b;b=c;c=y}v.mulTo(c,p[x],b)}while(l>=0&&(q[l]&(1<<o))==0){v.sqrTo(b,c);y=b;b=c;c=y;if(--o<0){o=this.DB-1;--l}}}return v.revert(b)}function bnGCD(c){var b=(this.s<0)?this.negate():this.clone();var h=(c.s<0)?c.negate():c.clone();if(b.compareTo(h)<0){var e=b;b=h;h=e}var d=b.getLowestSetBit(),f=h.getLowestSetBit();if(f<0){return b}if(d<f){f=d}if(f>0){b.rShiftTo(f,b);h.rShiftTo(f,h)}while(b.signum()>0){if((d=b.getLowestSetBit())>0){b.rShiftTo(d,b)}if((d=h.getLowestSetBit())>0){h.rShiftTo(d,h)}if(b.compareTo(h)>=0){b.subTo(h,b);b.rShiftTo(1,b)}else{h.subTo(b,h);h.rShiftTo(1,h)}}if(f>0){h.lShiftTo(f,h)}return h}function bnpModInt(e){if(e<=0){return 0}var c=this.DV%e,b=(this.s<0)?e-1:0;if(this.t>0){if(c==0){b=this[0]%e}else{for(var a=this.t-1;a>=0;--a){b=(c*b+this[a])%e}}}return b}function bnModInverse(f){var j=f.isEven();if((this.isEven()&&j)||f.signum()==0){return BigInteger.ZERO}var i=f.clone(),h=this.clone();var g=nbv(1),e=nbv(0),l=nbv(0),k=nbv(1);while(i.signum()!=0){while(i.isEven()){i.rShiftTo(1,i);if(j){if(!g.isEven()||!e.isEven()){g.addTo(this,g);e.subTo(f,e)}g.rShiftTo(1,g)}else{if(!e.isEven()){e.subTo(f,e)}}e.rShiftTo(1,e)}while(h.isEven()){h.rShiftTo(1,h);if(j){if(!l.isEven()||!k.isEven()){l.addTo(this,l);k.subTo(f,k)}l.rShiftTo(1,l)}else{if(!k.isEven()){k.subTo(f,k)}}k.rShiftTo(1,k)}if(i.compareTo(h)>=0){i.subTo(h,i);if(j){g.subTo(l,g)}e.subTo(k,e)}else{h.subTo(i,h);if(j){l.subTo(g,l)}k.subTo(e,k)}}if(h.compareTo(BigInteger.ONE)!=0){return BigInteger.ZERO}if(k.compareTo(f)>=0){return k.subtract(f)}if(k.signum()<0){k.addTo(f,k)}else{return k}if(k.signum()<0){return k.add(f)}else{return k}}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(e){var d,b=this.abs();if(b.t==1&&b[0]<=lowprimes[lowprimes.length-1]){for(d=0;d<lowprimes.length;++d){if(b[0]==lowprimes[d]){return true}}return false}if(b.isEven()){return false}d=1;while(d<lowprimes.length){var a=lowprimes[d],c=d+1;while(c<lowprimes.length&&a<lplim){a*=lowprimes[c++]}a=b.modInt(a);while(d<c){if(a%lowprimes[d++]==0){return false}}}return b.millerRabin(e)}function bnpMillerRabin(f){var g=this.subtract(BigInteger.ONE);var c=g.getLowestSetBit();if(c<=0){return false}var h=g.shiftRight(c);f=(f+1)>>1;if(f>lowprimes.length){f=lowprimes.length}var b=nbi();for(var e=0;e<f;++e){b.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);var l=b.modPow(h,this);if(l.compareTo(BigInteger.ONE)!=0&&l.compareTo(g)!=0){var d=1;while(d++<c&&l.compareTo(g)!=0){l=l.modPowInt(2,this);if(l.compareTo(BigInteger.ONE)==0){return false}}if(l.compareTo(g)!=0){return false}}}return true}BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=bnIsProbablePrime;BigInteger.prototype.square=bnSquare;\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nfunction Arcfour(){this.i=0;this.j=0;this.S=new Array()}function ARC4init(d){var c,a,b;for(c=0;c<256;++c){this.S[c]=c}a=0;for(c=0;c<256;++c){a=(a+this.S[c]+d[c%d.length])&255;b=this.S[c];this.S[c]=this.S[a];this.S[a]=b}this.i=0;this.j=0}function ARC4next(){var a;this.i=(this.i+1)&255;this.j=(this.j+this.S[this.i])&255;a=this.S[this.i];this.S[this.i]=this.S[this.j];this.S[this.j]=a;return this.S[(a+this.S[this.i])&255]}Arcfour.prototype.init=ARC4init;Arcfour.prototype.next=ARC4next;function prng_newstate(){return new Arcfour()}var rng_psize=256;\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nvar rng_state;var rng_pool;var rng_pptr;function rng_seed_int(a){rng_pool[rng_pptr++]^=a&255;rng_pool[rng_pptr++]^=(a>>8)&255;rng_pool[rng_pptr++]^=(a>>16)&255;rng_pool[rng_pptr++]^=(a>>24)&255;if(rng_pptr>=rng_psize){rng_pptr-=rng_psize}}function rng_seed_time(){rng_seed_int(new Date().getTime())}if(rng_pool==null){rng_pool=new Array();rng_pptr=0;var t;if(navigator.appName==\"Netscape\"&&navigator.appVersion<\"5\"&&window.crypto){var z=window.crypto.random(32);for(t=0;t<z.length;++t){rng_pool[rng_pptr++]=z.charCodeAt(t)&255}}while(rng_pptr<rng_psize){t=Math.floor(65536*Math.random());rng_pool[rng_pptr++]=t>>>8;rng_pool[rng_pptr++]=t&255}rng_pptr=0;rng_seed_time()}function rng_get_byte(){if(rng_state==null){rng_seed_time();rng_state=prng_newstate();rng_state.init(rng_pool);for(rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr){rng_pool[rng_pptr]=0}rng_pptr=0}return rng_state.next()}function rng_get_bytes(b){var a;for(a=0;a<b.length;++a){b[a]=rng_get_byte()}}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes;\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nfunction parseBigInt(b,a){return new BigInteger(b,a)}function linebrk(c,d){var a=\"\";var b=0;while(b+d<c.length){a+=c.substring(b,b+d)+\"\\n\";b+=d}return a+c.substring(b,c.length)}function byte2Hex(a){if(a<16){return\"0\"+a.toString(16)}else{return a.toString(16)}}function pkcs1pad2(e,h){if(h<e.length+11){alert(\"Message too long for RSA\");return null}var g=new Array();var d=e.length-1;while(d>=0&&h>0){var f=e.charCodeAt(d--);if(f<128){g[--h]=f}else{if((f>127)&&(f<2048)){g[--h]=(f&63)|128;g[--h]=(f>>6)|192}else{g[--h]=(f&63)|128;g[--h]=((f>>6)&63)|128;g[--h]=(f>>12)|224}}}g[--h]=0;var b=new SecureRandom();var a=new Array();while(h>2){a[0]=0;while(a[0]==0){b.nextBytes(a)}g[--h]=a[0]}g[--h]=2;g[--h]=0;return new BigInteger(g)}function oaep_mgf1_arr(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(String.fromCharCode.apply(String,c.concat([(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255])));d+=1}return b}var SHA1_SIZE=20;function oaep_pad(l,a,c){if(l.length+2*SHA1_SIZE+2>a){throw\"Message too long for RSA\"}var h=\"\",d;for(d=0;d<a-l.length-2*SHA1_SIZE-2;d+=1){h+=\"\\x00\"}var e=rstr_sha1(\"\")+h+\"\\x01\"+l;var f=new Array(SHA1_SIZE);new SecureRandom().nextBytes(f);var g=oaep_mgf1_arr(f,e.length,c||rstr_sha1);var k=[];for(d=0;d<e.length;d+=1){k[d]=e.charCodeAt(d)^g.charCodeAt(d)}var j=oaep_mgf1_arr(k,f.length,rstr_sha1);var b=[0];for(d=0;d<f.length;d+=1){b[d+1]=f[d]^j.charCodeAt(d)}return new BigInteger(b.concat(k))}function RSAKey(){this.n=null;this.e=0;this.d=null;this.p=null;this.q=null;this.dmp1=null;this.dmq1=null;this.coeff=null}function RSASetPublic(b,a){this.isPublic=true;if(typeof b!==\"string\"){this.n=b;this.e=a}else{if(b!=null&&a!=null&&b.length>0&&a.length>0){this.n=parseBigInt(b,16);this.e=parseInt(a,16)}else{alert(\"Invalid RSA public key\")}}}function RSADoPublic(a){return a.modPowInt(this.e,this.n)}function RSAEncrypt(d){var a=pkcs1pad2(d,(this.n.bitLength()+7)>>3);if(a==null){return null}var e=this.doPublic(a);if(e==null){return null}var b=e.toString(16);if((b.length&1)==0){return b}else{return\"0\"+b}}function RSAEncryptOAEP(e,d){var a=oaep_pad(e,(this.n.bitLength()+7)>>3,d);if(a==null){return null}var f=this.doPublic(a);if(f==null){return null}var b=f.toString(16);if((b.length&1)==0){return b}else{return\"0\"+b}}RSAKey.prototype.doPublic=RSADoPublic;RSAKey.prototype.setPublic=RSASetPublic;RSAKey.prototype.encrypt=RSAEncrypt;RSAKey.prototype.encryptOAEP=RSAEncryptOAEP;RSAKey.prototype.type=\"RSA\";\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nfunction pkcs1unpad2(g,j){var a=g.toByteArray();var f=0;while(f<a.length&&a[f]==0){++f}if(a.length-f!=j-1||a[f]!=2){return null}++f;while(a[f]!=0){if(++f>=a.length){return null}}var e=\"\";while(++f<a.length){var h=a[f]&255;if(h<128){e+=String.fromCharCode(h)}else{if((h>191)&&(h<224)){e+=String.fromCharCode(((h&31)<<6)|(a[f+1]&63));++f}else{e+=String.fromCharCode(((h&15)<<12)|((a[f+1]&63)<<6)|(a[f+2]&63));f+=2}}}return e}function oaep_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]));d+=1}return b}var SHA1_SIZE=20;function oaep_unpad(l,b,e){l=l.toByteArray();var f;for(f=0;f<l.length;f+=1){l[f]&=255}while(l.length<b){l.unshift(0)}l=String.fromCharCode.apply(String,l);if(l.length<2*SHA1_SIZE+2){throw\"Cipher too short\"}var c=l.substr(1,SHA1_SIZE);var o=l.substr(SHA1_SIZE+1);var m=oaep_mgf1_str(o,SHA1_SIZE,e||rstr_sha1);var h=[],f;for(f=0;f<c.length;f+=1){h[f]=c.charCodeAt(f)^m.charCodeAt(f)}var j=oaep_mgf1_str(String.fromCharCode.apply(String,h),l.length-SHA1_SIZE,rstr_sha1);var g=[];for(f=0;f<o.length;f+=1){g[f]=o.charCodeAt(f)^j.charCodeAt(f)}g=String.fromCharCode.apply(String,g);if(g.substr(0,SHA1_SIZE)!==rstr_sha1(\"\")){throw\"Hash mismatch\"}g=g.substr(SHA1_SIZE);var a=g.indexOf(\"\\x01\");var k=(a!=-1)?g.substr(0,a).lastIndexOf(\"\\x00\"):-1;if(k+1!=a){throw\"Malformed data\"}return g.substr(a+1)}function RSASetPrivate(c,a,b){this.isPrivate=true;if(typeof c!==\"string\"){this.n=c;this.e=a;this.d=b}else{if(c!=null&&a!=null&&c.length>0&&a.length>0){this.n=parseBigInt(c,16);this.e=parseInt(a,16);this.d=parseBigInt(b,16)}else{alert(\"Invalid RSA private key\")}}}function RSASetPrivateEx(g,d,e,c,b,a,h,f){this.isPrivate=true;if(g==null){throw\"RSASetPrivateEx N == null\"}if(d==null){throw\"RSASetPrivateEx E == null\"}if(g.length==0){throw\"RSASetPrivateEx N.length == 0\"}if(d.length==0){throw\"RSASetPrivateEx E.length == 0\"}if(g!=null&&d!=null&&g.length>0&&d.length>0){this.n=parseBigInt(g,16);this.e=parseInt(d,16);this.d=parseBigInt(e,16);this.p=parseBigInt(c,16);this.q=parseBigInt(b,16);this.dmp1=parseBigInt(a,16);this.dmq1=parseBigInt(h,16);this.coeff=parseBigInt(f,16)}else{alert(\"Invalid RSA private key in RSASetPrivateEx\")}}function RSAGenerate(b,i){var a=new SecureRandom();var f=b>>1;this.e=parseInt(i,16);var c=new BigInteger(i,16);for(;;){for(;;){this.p=new BigInteger(b-f,1,a);if(this.p.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.p.isProbablePrime(10)){break}}for(;;){this.q=new BigInteger(f,1,a);if(this.q.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.q.isProbablePrime(10)){break}}if(this.p.compareTo(this.q)<=0){var h=this.p;this.p=this.q;this.q=h}var g=this.p.subtract(BigInteger.ONE);var d=this.q.subtract(BigInteger.ONE);var e=g.multiply(d);if(e.gcd(c).compareTo(BigInteger.ONE)==0){this.n=this.p.multiply(this.q);this.d=c.modInverse(e);this.dmp1=this.d.mod(g);this.dmq1=this.d.mod(d);this.coeff=this.q.modInverse(this.p);break}}}function RSADoPrivate(a){if(this.p==null||this.q==null){return a.modPow(this.d,this.n)}var c=a.mod(this.p).modPow(this.dmp1,this.p);var b=a.mod(this.q).modPow(this.dmq1,this.q);while(c.compareTo(b)<0){c=c.add(this.p)}return c.subtract(b).multiply(this.coeff).mod(this.p).multiply(this.q).add(b)}function RSADecrypt(b){var d=parseBigInt(b,16);var a=this.doPrivate(d);if(a==null){return null}return pkcs1unpad2(a,(this.n.bitLength()+7)>>3)}function RSADecryptOAEP(d,b){var e=parseBigInt(d,16);var a=this.doPrivate(e);if(a==null){return null}return oaep_unpad(a,(this.n.bitLength()+7)>>3,b)}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;RSAKey.prototype.decryptOAEP=RSADecryptOAEP;\r\n/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\r\n */\r\nfunction ECFieldElementFp(b,a){this.x=a;this.q=b}function feFpEquals(a){if(a==this){return true}return(this.q.equals(a.q)&&this.x.equals(a.x))}function feFpToBigInteger(){return this.x}function feFpNegate(){return new ECFieldElementFp(this.q,this.x.negate().mod(this.q))}function feFpAdd(a){return new ECFieldElementFp(this.q,this.x.add(a.toBigInteger()).mod(this.q))}function feFpSubtract(a){return new ECFieldElementFp(this.q,this.x.subtract(a.toBigInteger()).mod(this.q))}function feFpMultiply(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger()).mod(this.q))}function feFpSquare(){return new ECFieldElementFp(this.q,this.x.square().mod(this.q))}function feFpDivide(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger().modInverse(this.q)).mod(this.q))}ECFieldElementFp.prototype.equals=feFpEquals;ECFieldElementFp.prototype.toBigInteger=feFpToBigInteger;ECFieldElementFp.prototype.negate=feFpNegate;ECFieldElementFp.prototype.add=feFpAdd;ECFieldElementFp.prototype.subtract=feFpSubtract;ECFieldElementFp.prototype.multiply=feFpMultiply;ECFieldElementFp.prototype.square=feFpSquare;ECFieldElementFp.prototype.divide=feFpDivide;function ECPointFp(c,a,d,b){this.curve=c;this.x=a;this.y=d;if(b==null){this.z=BigInteger.ONE}else{this.z=b}this.zinv=null}function pointFpGetX(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q)}return this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q))}function pointFpGetY(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q)}return this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q))}function pointFpEquals(a){if(a==this){return true}if(this.isInfinity()){return a.isInfinity()}if(a.isInfinity()){return this.isInfinity()}var c,b;c=a.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(a.z)).mod(this.curve.q);if(!c.equals(BigInteger.ZERO)){return false}b=a.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(a.z)).mod(this.curve.q);return b.equals(BigInteger.ZERO)}function pointFpIsInfinity(){if((this.x==null)&&(this.y==null)){return true}return this.z.equals(BigInteger.ZERO)&&!this.y.toBigInteger().equals(BigInteger.ZERO)}function pointFpNegate(){return new ECPointFp(this.curve,this.x,this.y.negate(),this.z)}function pointFpAdd(l){if(this.isInfinity()){return l}if(l.isInfinity()){return this}var p=l.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(l.z)).mod(this.curve.q);var o=l.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(l.z)).mod(this.curve.q);if(BigInteger.ZERO.equals(o)){if(BigInteger.ZERO.equals(p)){return this.twice()}return this.curve.getInfinity()}var j=new BigInteger(\"3\");var e=this.x.toBigInteger();var n=this.y.toBigInteger();var c=l.x.toBigInteger();var k=l.y.toBigInteger();var m=o.square();var i=m.multiply(o);var d=e.multiply(m);var g=p.square().multiply(this.z);var a=g.subtract(d.shiftLeft(1)).multiply(l.z).subtract(i).multiply(o).mod(this.curve.q);var h=d.multiply(j).multiply(p).subtract(n.multiply(i)).subtract(g.multiply(p)).multiply(l.z).add(p.multiply(i)).mod(this.curve.q);var f=i.multiply(this.z).multiply(l.z).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(a),this.curve.fromBigInteger(h),f)}function pointFpTwice(){if(this.isInfinity()){return this}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity()}var g=new BigInteger(\"3\");var c=this.x.toBigInteger();var h=this.y.toBigInteger();var e=h.multiply(this.z);var j=e.multiply(h).mod(this.curve.q);var i=this.curve.a.toBigInteger();var k=c.square().multiply(g);if(!BigInteger.ZERO.equals(i)){k=k.add(this.z.square().multiply(i))}k=k.mod(this.curve.q);var b=k.square().subtract(c.shiftLeft(3).multiply(j)).shiftLeft(1).multiply(e).mod(this.curve.q);var f=k.multiply(g).multiply(c).subtract(j.shiftLeft(1)).shiftLeft(2).multiply(j).subtract(k.square().multiply(k)).mod(this.curve.q);var d=e.square().multiply(e).shiftLeft(3).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(b),this.curve.fromBigInteger(f),d)}function pointFpMultiply(b){if(this.isInfinity()){return this}if(b.signum()==0){return this.curve.getInfinity()}var g=b;var f=g.multiply(new BigInteger(\"3\"));var l=this.negate();var d=this;var c;for(c=f.bitLength()-2;c>0;--c){d=d.twice();var a=f.testBit(c);var j=g.testBit(c);if(a!=j){d=d.add(a?this:l)}}return d}function pointFpMultiplyTwo(c,a,b){var d;if(c.bitLength()>b.bitLength()){d=c.bitLength()-1}else{d=b.bitLength()-1}var f=this.curve.getInfinity();var e=this.add(a);while(d>=0){f=f.twice();if(c.testBit(d)){if(b.testBit(d)){f=f.add(e)}else{f=f.add(this)}}else{if(b.testBit(d)){f=f.add(a)}}--d}return f}ECPointFp.prototype.getX=pointFpGetX;ECPointFp.prototype.getY=pointFpGetY;ECPointFp.prototype.equals=pointFpEquals;ECPointFp.prototype.isInfinity=pointFpIsInfinity;ECPointFp.prototype.negate=pointFpNegate;ECPointFp.prototype.add=pointFpAdd;ECPointFp.prototype.twice=pointFpTwice;ECPointFp.prototype.multiply=pointFpMultiply;ECPointFp.prototype.multiplyTwo=pointFpMultiplyTwo;function ECCurveFp(e,d,c){this.q=e;this.a=this.fromBigInteger(d);this.b=this.fromBigInteger(c);this.infinity=new ECPointFp(this,null,null)}function curveFpGetQ(){return this.q}function curveFpGetA(){return this.a}function curveFpGetB(){return this.b}function curveFpEquals(a){if(a==this){return true}return(this.q.equals(a.q)&&this.a.equals(a.a)&&this.b.equals(a.b))}function curveFpGetInfinity(){return this.infinity}function curveFpFromBigInteger(a){return new ECFieldElementFp(this.q,a)}function curveFpDecodePointHex(d){switch(parseInt(d.substr(0,2),16)){case 0:return this.infinity;case 2:case 3:return null;case 4:case 6:case 7:var a=(d.length-2)/2;var c=d.substr(2,a);var b=d.substr(a+2,a);return new ECPointFp(this,this.fromBigInteger(new BigInteger(c,16)),this.fromBigInteger(new BigInteger(b,16)));default:return null}}ECCurveFp.prototype.getQ=curveFpGetQ;ECCurveFp.prototype.getA=curveFpGetA;ECCurveFp.prototype.getB=curveFpGetB;ECCurveFp.prototype.equals=curveFpEquals;ECCurveFp.prototype.getInfinity=curveFpGetInfinity;ECCurveFp.prototype.fromBigInteger=curveFpFromBigInteger;ECCurveFp.prototype.decodePointHex=curveFpDecodePointHex;\r\n/*! (c) Stefan Thomas | https://github.com/bitcoinjs/bitcoinjs-lib\r\n */\r\nECFieldElementFp.prototype.getByteLength=function(){return Math.floor((this.toBigInteger().bitLength()+7)/8)};ECPointFp.prototype.getEncoded=function(c){var d=function(h,f){var g=h.toByteArrayUnsigned();if(f<g.length){g=g.slice(g.length-f)}else{while(f>g.length){g.unshift(0)}}return g};var a=this.getX().toBigInteger();var e=this.getY().toBigInteger();var b=d(a,32);if(c){if(e.isEven()){b.unshift(2)}else{b.unshift(3)}}else{b.unshift(4);b=b.concat(d(e,32))}return b};ECPointFp.decodeFrom=function(g,c){var f=c[0];var e=c.length-1;var d=c.slice(1,1+e/2);var b=c.slice(1+e/2,1+e);d.unshift(0);b.unshift(0);var a=new BigInteger(d);var h=new BigInteger(b);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h))};ECPointFp.decodeFromHex=function(g,c){var f=c.substr(0,2);var e=c.length-2;var d=c.substr(2,e/2);var b=c.substr(2+e/2,e/2);var a=new BigInteger(d,16);var h=new BigInteger(b,16);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h))};ECPointFp.prototype.add2D=function(c){if(this.isInfinity()){return c}if(c.isInfinity()){return this}if(this.x.equals(c.x)){if(this.y.equals(c.y)){return this.twice()}return this.curve.getInfinity()}var g=c.x.subtract(this.x);var e=c.y.subtract(this.y);var a=e.divide(g);var d=a.square().subtract(this.x).subtract(c.x);var f=a.multiply(this.x.subtract(d)).subtract(this.y);return new ECPointFp(this.curve,d,f)};ECPointFp.prototype.twice2D=function(){if(this.isInfinity()){return this}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity()}var b=this.curve.fromBigInteger(BigInteger.valueOf(2));var e=this.curve.fromBigInteger(BigInteger.valueOf(3));var a=this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(b));var c=a.square().subtract(this.x.multiply(b));var d=a.multiply(this.x.subtract(c)).subtract(this.y);return new ECPointFp(this.curve,c,d)};ECPointFp.prototype.multiply2D=function(b){if(this.isInfinity()){return this}if(b.signum()==0){return this.curve.getInfinity()}var g=b;var f=g.multiply(new BigInteger(\"3\"));var l=this.negate();var d=this;var c;for(c=f.bitLength()-2;c>0;--c){d=d.twice();var a=f.testBit(c);var j=g.testBit(c);if(a!=j){d=d.add2D(a?this:l)}}return d};ECPointFp.prototype.isOnCurve=function(){var d=this.getX().toBigInteger();var i=this.getY().toBigInteger();var f=this.curve.getA().toBigInteger();var c=this.curve.getB().toBigInteger();var h=this.curve.getQ();var e=i.multiply(i).mod(h);var g=d.multiply(d).multiply(d).add(f.multiply(d)).add(c).mod(h);return e.equals(g)};ECPointFp.prototype.toString=function(){return\"(\"+this.getX().toBigInteger().toString()+\",\"+this.getY().toBigInteger().toString()+\")\"};ECPointFp.prototype.validate=function(){var c=this.curve.getQ();if(this.isInfinity()){throw new Error(\"Point is at infinity.\")}var a=this.getX().toBigInteger();var b=this.getY().toBigInteger();if(a.compareTo(BigInteger.ONE)<0||a.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"x coordinate out of bounds\")}if(b.compareTo(BigInteger.ONE)<0||b.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"y coordinate out of bounds\")}if(!this.isOnCurve()){throw new Error(\"Point is not on the curve.\")}if(this.multiply(c).isInfinity()){throw new Error(\"Point is not a scalar multiple of G.\")}return true};\r\n/*! asn1-1.0.4.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}KJUR.asn1.ASN1Util=new function(){this.integerToByteHex=function(a){var b=a.toString(16);if((b.length%2)==1){b=\"0\"+b}return b};this.bigIntToMinTwosComplementsHex=function(j){var f=j.toString(16);if(f.substr(0,1)!=\"-\"){if(f.length%2==1){f=\"0\"+f}else{if(!f.match(/^[0-7]/)){f=\"00\"+f}}}else{var a=f.substr(1);var e=a.length;if(e%2==1){e+=1}else{if(!f.match(/^[0-7]/)){e+=2}}var g=\"\";for(var d=0;d<e;d++){g+=\"f\"}var c=new BigInteger(g,16);var b=c.xor(j).add(BigInteger.ONE);f=b.toString(16).replace(/^-/,\"\")}return f};this.getPEMStringFromHex=function(a,b){var c=KJUR.asn1;var f=CryptoJS.enc.Hex.parse(a);var d=CryptoJS.enc.Base64.stringify(f);var e=d.replace(/(.{64})/g,\"$1\\r\\n\");e=e.replace(/\\r\\n$/,\"\");return\"-----BEGIN \"+b+\"-----\\r\\n\"+e+\"\\r\\n-----END \"+b+\"-----\\r\\n\"};this.newObject=function(b){var g=KJUR.asn1;var k=Object.keys(b);if(k.length!=1){throw\"key of param shall be only one.\"}var j=k[0];if(\":bool:int:bitstr:octstr:null:oid:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:\".indexOf(\":\"+j+\":\")==-1){throw\"undefined key: \"+j}if(j==\"bool\"){return new g.DERBoolean(b[j])}if(j==\"int\"){return new g.DERInteger(b[j])}if(j==\"bitstr\"){return new g.DERBitString(b[j])}if(j==\"octstr\"){return new g.DEROctetString(b[j])}if(j==\"null\"){return new g.DERNull(b[j])}if(j==\"oid\"){return new g.DERObjectIdentifier(b[j])}if(j==\"utf8str\"){return new g.DERUTF8String(b[j])}if(j==\"numstr\"){return new g.DERNumericString(b[j])}if(j==\"prnstr\"){return new g.DERPrintableString(b[j])}if(j==\"telstr\"){return new g.DERTeletexString(b[j])}if(j==\"ia5str\"){return new g.DERIA5String(b[j])}if(j==\"utctime\"){return new g.DERUTCTime(b[j])}if(j==\"gentime\"){return new g.DERGeneralizedTime(b[j])}if(j==\"seq\"){var m=b[j];var h=[];for(var e=0;e<m.length;e++){var l=g.ASN1Util.newObject(m[e]);h.push(l)}return new g.DERSequence({array:h})}if(j==\"set\"){var m=b[j];var h=[];for(var e=0;e<m.length;e++){var l=g.ASN1Util.newObject(m[e]);h.push(l)}return new g.DERSet({array:h})}if(j==\"tag\"){var c=b[j];if(Object.prototype.toString.call(c)===\"[object Array]\"&&c.length==3){var d=g.ASN1Util.newObject(c[2]);return new g.DERTaggedObject({tag:c[0],explicit:c[1],obj:d})}else{var f={};if(c.explicit!==undefined){f.explicit=c.explicit}if(c.tag!==undefined){f.tag=c.tag}if(c.obj===undefined){throw\"obj shall be specified for 'tag'.\"}f.obj=g.ASN1Util.newObject(c.obj);return new g.DERTaggedObject(f)}}};this.jsonToASN1HEX=function(b){var a=this.newObject(b);return a.getEncodedHex()}};KJUR.asn1.ASN1Object=function(){var c=true;var b=null;var d=\"00\";var e=\"00\";var a=\"\";this.getLengthHexFromValue=function(){if(typeof this.hV==\"undefined\"||this.hV==null){throw\"this.hV is null or undefined.\"}if(this.hV.length%2==1){throw\"value hex must be even length: n=\"+a.length+\",v=\"+this.hV}var i=this.hV.length/2;var h=i.toString(16);if(h.length%2==1){h=\"0\"+h}if(i<128){return h}else{var g=h.length/2;if(g>15){throw\"ASN.1 length too long to represent by 8x: n = \"+i.toString(16)}var f=128+g;return f.toString(16)+h}};this.getEncodedHex=function(){if(this.hTLV==null||this.isModified){this.hV=this.getFreshValueHex();this.hL=this.getLengthHexFromValue();this.hTLV=this.hT+this.hL+this.hV;this.isModified=false}return this.hTLV};this.getValueHex=function(){this.getEncodedHex();return this.hV};this.getFreshValueHex=function(){return\"\"}};KJUR.asn1.DERAbstractString=function(c){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var b=null;var a=null;this.getString=function(){return this.s};this.setString=function(d){this.hTLV=null;this.isModified=true;this.s=d;this.hV=stohex(this.s)};this.setStringHex=function(d){this.hTLV=null;this.isModified=true;this.s=null;this.hV=d};this.getFreshValueHex=function(){return this.hV};if(typeof c!=\"undefined\"){if(typeof c==\"string\"){this.setString(c)}else{if(typeof c.str!=\"undefined\"){this.setString(c.str)}else{if(typeof c.hex!=\"undefined\"){this.setStringHex(c.hex)}}}}};YAHOO.lang.extend(KJUR.asn1.DERAbstractString,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractTime=function(c){KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);var b=null;var a=null;this.localDateToUTC=function(f){utc=f.getTime()+(f.getTimezoneOffset()*60000);var e=new Date(utc);return e};this.formatDate=function(j,l){var e=this.zeroPadding;var k=this.localDateToUTC(j);var m=String(k.getFullYear());if(l==\"utc\"){m=m.substr(2,2)}var i=e(String(k.getMonth()+1),2);var n=e(String(k.getDate()),2);var f=e(String(k.getHours()),2);var g=e(String(k.getMinutes()),2);var h=e(String(k.getSeconds()),2);return m+i+n+f+g+h+\"Z\"};this.zeroPadding=function(e,d){if(e.length>=d){return e}return new Array(d-e.length+1).join(\"0\")+e};this.getString=function(){return this.s};this.setString=function(d){this.hTLV=null;this.isModified=true;this.s=d;this.hV=stohex(d)};this.setByDateValue=function(h,j,e,d,f,g){var i=new Date(Date.UTC(h,j-1,e,d,f,g,0));this.setByDate(i)};this.getFreshValueHex=function(){return this.hV}};YAHOO.lang.extend(KJUR.asn1.DERAbstractTime,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractStructured=function(b){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var a=null;this.setByASN1ObjectArray=function(c){this.hTLV=null;this.isModified=true;this.asn1Array=c};this.appendASN1Object=function(c){this.hTLV=null;this.isModified=true;this.asn1Array.push(c)};this.asn1Array=new Array();if(typeof b!=\"undefined\"){if(typeof b.array!=\"undefined\"){this.asn1Array=b.array}}};YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured,KJUR.asn1.ASN1Object);KJUR.asn1.DERBoolean=function(){KJUR.asn1.DERBoolean.superclass.constructor.call(this);this.hT=\"01\";this.hTLV=\"0101ff\"};YAHOO.lang.extend(KJUR.asn1.DERBoolean,KJUR.asn1.ASN1Object);KJUR.asn1.DERInteger=function(a){KJUR.asn1.DERInteger.superclass.constructor.call(this);this.hT=\"02\";this.setByBigInteger=function(b){this.hTLV=null;this.isModified=true;this.hV=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b)};this.setByInteger=function(c){var b=new BigInteger(String(c),10);this.setByBigInteger(b)};this.setValueHex=function(b){this.hV=b};this.getFreshValueHex=function(){return this.hV};if(typeof a!=\"undefined\"){if(typeof a.bigint!=\"undefined\"){this.setByBigInteger(a.bigint)}else{if(typeof a[\"int\"]!=\"undefined\"){this.setByInteger(a[\"int\"])}else{if(typeof a==\"number\"){this.setByInteger(a)}else{if(typeof a.hex!=\"undefined\"){this.setValueHex(a.hex)}}}}}};YAHOO.lang.extend(KJUR.asn1.DERInteger,KJUR.asn1.ASN1Object);KJUR.asn1.DERBitString=function(a){KJUR.asn1.DERBitString.superclass.constructor.call(this);this.hT=\"03\";this.setHexValueIncludingUnusedBits=function(b){this.hTLV=null;this.isModified=true;this.hV=b};this.setUnusedBitsAndHexValue=function(b,d){if(b<0||7<b){throw\"unused bits shall be from 0 to 7: u = \"+b}var c=\"0\"+b;this.hTLV=null;this.isModified=true;this.hV=c+d};this.setByBinaryString=function(e){e=e.replace(/0+$/,\"\");var f=8-e.length%8;if(f==8){f=0}for(var g=0;g<=f;g++){e+=\"0\"}var j=\"\";for(var g=0;g<e.length-1;g+=8){var d=e.substr(g,8);var c=parseInt(d,2).toString(16);if(c.length==1){c=\"0\"+c}j+=c}this.hTLV=null;this.isModified=true;this.hV=\"0\"+f+j};this.setByBooleanArray=function(d){var c=\"\";for(var b=0;b<d.length;b++){if(d[b]==true){c+=\"1\"}else{c+=\"0\"}}this.setByBinaryString(c)};this.newFalseArray=function(d){var b=new Array(d);for(var c=0;c<d;c++){b[c]=false}return b};this.getFreshValueHex=function(){return this.hV};if(typeof a!=\"undefined\"){if(typeof a==\"string\"&&a.toLowerCase().match(/^[0-9a-f]+$/)){this.setHexValueIncludingUnusedBits(a)}else{if(typeof a.hex!=\"undefined\"){this.setHexValueIncludingUnusedBits(a.hex)}else{if(typeof a.bin!=\"undefined\"){this.setByBinaryString(a.bin)}else{if(typeof a.array!=\"undefined\"){this.setByBooleanArray(a.array)}}}}}};YAHOO.lang.extend(KJUR.asn1.DERBitString,KJUR.asn1.ASN1Object);KJUR.asn1.DEROctetString=function(a){KJUR.asn1.DEROctetString.superclass.constructor.call(this,a);this.hT=\"04\"};YAHOO.lang.extend(KJUR.asn1.DEROctetString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNull=function(){KJUR.asn1.DERNull.superclass.constructor.call(this);this.hT=\"05\";this.hTLV=\"0500\"};YAHOO.lang.extend(KJUR.asn1.DERNull,KJUR.asn1.ASN1Object);KJUR.asn1.DERObjectIdentifier=function(c){var b=function(d){var e=d.toString(16);if(e.length==1){e=\"0\"+e}return e};var a=function(k){var j=\"\";var e=new BigInteger(k,10);var d=e.toString(2);var f=7-d.length%7;if(f==7){f=0}var m=\"\";for(var g=0;g<f;g++){m+=\"0\"}d=m+d;for(var g=0;g<d.length-1;g+=7){var l=d.substr(g,7);if(g!=d.length-7){l=\"1\"+l}j+=b(parseInt(l,2))}return j};KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);this.hT=\"06\";this.setValueHex=function(d){this.hTLV=null;this.isModified=true;this.s=null;this.hV=d};this.setValueOidString=function(f){if(!f.match(/^[0-9.]+$/)){throw\"malformed oid string: \"+f}var g=\"\";var d=f.split(\".\");var j=parseInt(d[0])*40+parseInt(d[1]);g+=b(j);d.splice(0,2);for(var e=0;e<d.length;e++){g+=a(d[e])}this.hTLV=null;this.isModified=true;this.s=null;this.hV=g};this.setValueName=function(e){if(typeof KJUR.asn1.x509.OID.name2oidList[e]!=\"undefined\"){var d=KJUR.asn1.x509.OID.name2oidList[e];this.setValueOidString(d)}else{throw\"DERObjectIdentifier oidName undefined: \"+e}};this.getFreshValueHex=function(){return this.hV};if(typeof c!=\"undefined\"){if(typeof c==\"string\"&&c.match(/^[0-2].[0-9.]+$/)){this.setValueOidString(c)}else{if(KJUR.asn1.x509.OID.name2oidList[c]!==undefined){this.setValueOidString(KJUR.asn1.x509.OID.name2oidList[c])}else{if(typeof c.oid!=\"undefined\"){this.setValueOidString(c.oid)}else{if(typeof c.hex!=\"undefined\"){this.setValueHex(c.hex)}else{if(typeof c.name!=\"undefined\"){this.setValueName(c.name)}}}}}}};YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.DERUTF8String=function(a){KJUR.asn1.DERUTF8String.superclass.constructor.call(this,a);this.hT=\"0c\"};YAHOO.lang.extend(KJUR.asn1.DERUTF8String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNumericString=function(a){KJUR.asn1.DERNumericString.superclass.constructor.call(this,a);this.hT=\"12\"};YAHOO.lang.extend(KJUR.asn1.DERNumericString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERPrintableString=function(a){KJUR.asn1.DERPrintableString.superclass.constructor.call(this,a);this.hT=\"13\"};YAHOO.lang.extend(KJUR.asn1.DERPrintableString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERTeletexString=function(a){KJUR.asn1.DERTeletexString.superclass.constructor.call(this,a);this.hT=\"14\"};YAHOO.lang.extend(KJUR.asn1.DERTeletexString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERIA5String=function(a){KJUR.asn1.DERIA5String.superclass.constructor.call(this,a);this.hT=\"16\"};YAHOO.lang.extend(KJUR.asn1.DERIA5String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERUTCTime=function(a){KJUR.asn1.DERUTCTime.superclass.constructor.call(this,a);this.hT=\"17\";this.setByDate=function(b){this.hTLV=null;this.isModified=true;this.date=b;this.s=this.formatDate(this.date,\"utc\");this.hV=stohex(this.s)};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.setString(a.str)}else{if(typeof a==\"string\"&&a.match(/^[0-9]{12}Z$/)){this.setString(a)}else{if(typeof a.hex!=\"undefined\"){this.setStringHex(a.hex)}else{if(typeof a.date!=\"undefined\"){this.setByDate(a.date)}}}}}};YAHOO.lang.extend(KJUR.asn1.DERUTCTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERGeneralizedTime=function(a){KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this,a);this.hT=\"18\";this.setByDate=function(b){this.hTLV=null;this.isModified=true;this.date=b;this.s=this.formatDate(this.date,\"gen\");this.hV=stohex(this.s)};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.setString(a.str)}else{if(typeof a==\"string\"&&a.match(/^[0-9]{14}Z$/)){this.setString(a)}else{if(typeof a.hex!=\"undefined\"){this.setStringHex(a.hex)}else{if(typeof a.date!=\"undefined\"){this.setByDate(a.date)}}}}}};YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERSequence=function(a){KJUR.asn1.DERSequence.superclass.constructor.call(this,a);this.hT=\"30\";this.getFreshValueHex=function(){var c=\"\";for(var b=0;b<this.asn1Array.length;b++){var d=this.asn1Array[b];c+=d.getEncodedHex()}this.hV=c;return this.hV}};YAHOO.lang.extend(KJUR.asn1.DERSequence,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERSet=function(a){KJUR.asn1.DERSet.superclass.constructor.call(this,a);this.hT=\"31\";this.getFreshValueHex=function(){var b=new Array();for(var c=0;c<this.asn1Array.length;c++){var d=this.asn1Array[c];b.push(d.getEncodedHex())}b.sort();this.hV=b.join(\"\");return this.hV}};YAHOO.lang.extend(KJUR.asn1.DERSet,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERTaggedObject=function(a){KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);this.hT=\"a0\";this.hV=\"\";this.isExplicit=true;this.asn1Object=null;this.setASN1Object=function(b,c,d){this.hT=c;this.isExplicit=b;this.asn1Object=d;if(this.isExplicit){this.hV=this.asn1Object.getEncodedHex();this.hTLV=null;this.isModified=true}else{this.hV=null;this.hTLV=d.getEncodedHex();this.hTLV=this.hTLV.replace(/^../,c);this.isModified=false}};this.getFreshValueHex=function(){return this.hV};if(typeof a!=\"undefined\"){if(typeof a.tag!=\"undefined\"){this.hT=a.tag}if(typeof a.explicit!=\"undefined\"){this.isExplicit=a.explicit}if(typeof a.obj!=\"undefined\"){this.asn1Object=a.obj;this.setASN1Object(this.isExplicit,this.hT,this.asn1Object)}}};YAHOO.lang.extend(KJUR.asn1.DERTaggedObject,KJUR.asn1.ASN1Object);\r\n/*! asn1hex-1.1.4.js (c) 2012-2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nvar ASN1HEX=new function(){this.getByteLengthOfL_AtObj=function(b,c){if(b.substring(c+2,c+3)!=\"8\"){return 1}var a=parseInt(b.substring(c+3,c+4));if(a==0){return -1}if(0<a&&a<10){return a+1}return -2};this.getHexOfL_AtObj=function(b,c){var a=this.getByteLengthOfL_AtObj(b,c);if(a<1){return\"\"}return b.substring(c+2,c+2+a*2)};this.getIntOfL_AtObj=function(c,d){var b=this.getHexOfL_AtObj(c,d);if(b==\"\"){return -1}var a;if(parseInt(b.substring(0,1))<8){a=new BigInteger(b,16)}else{a=new BigInteger(b.substring(2),16)}return a.intValue()};this.getStartPosOfV_AtObj=function(b,c){var a=this.getByteLengthOfL_AtObj(b,c);if(a<0){return a}return c+(a+1)*2};this.getHexOfV_AtObj=function(c,d){var b=this.getStartPosOfV_AtObj(c,d);var a=this.getIntOfL_AtObj(c,d);return c.substring(b,b+a*2)};this.getHexOfTLV_AtObj=function(c,e){var b=c.substr(e,2);var d=this.getHexOfL_AtObj(c,e);var a=this.getHexOfV_AtObj(c,e);return b+d+a};this.getPosOfNextSibling_AtObj=function(c,d){var b=this.getStartPosOfV_AtObj(c,d);var a=this.getIntOfL_AtObj(c,d);return b+a*2};this.getPosArrayOfChildren_AtObj=function(f,j){var c=new Array();var i=this.getStartPosOfV_AtObj(f,j);c.push(i);var b=this.getIntOfL_AtObj(f,j);var g=i;var d=0;while(1){var e=this.getPosOfNextSibling_AtObj(f,g);if(e==null||(e-i>=(b*2))){break}if(d>=200){break}c.push(e);g=e;d++}return c};this.getNthChildIndex_AtObj=function(d,b,e){var c=this.getPosArrayOfChildren_AtObj(d,b);return c[e]};this.getDecendantIndexByNthList=function(e,d,c){if(c.length==0){return d}var f=c.shift();var b=this.getPosArrayOfChildren_AtObj(e,d);return this.getDecendantIndexByNthList(e,b[f],c)};this.getDecendantHexTLVByNthList=function(d,c,b){var a=this.getDecendantIndexByNthList(d,c,b);return this.getHexOfTLV_AtObj(d,a)};this.getDecendantHexVByNthList=function(d,c,b){var a=this.getDecendantIndexByNthList(d,c,b);return this.getHexOfV_AtObj(d,a)}};ASN1HEX.getVbyList=function(d,c,b,e){var a=this.getDecendantIndexByNthList(d,c,b);if(a===undefined){throw\"can't find nthList object\"}if(e!==undefined){if(d.substr(a,2)!=e){throw\"checking tag doesn't match: \"+d.substr(a,2)+\"!=\"+e}}return this.getHexOfV_AtObj(d,a)};\r\n/*! asn1x509-1.0.7.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={}}if(typeof KJUR.asn1.x509==\"undefined\"||!KJUR.asn1.x509){KJUR.asn1.x509={}}KJUR.asn1.x509.Certificate=function(g){KJUR.asn1.x509.Certificate.superclass.constructor.call(this);var b=null;var d=null;var f=null;var c=null;var a=null;var e=null;this.setRsaPrvKeyByPEMandPass=function(i,k){var h=PKCS5PKEY.getDecryptedKeyHex(i,k);var j=new RSAKey();j.readPrivateKeyFromASN1HexString(h);this.prvKey=j};this.sign=function(){this.asn1SignatureAlg=this.asn1TBSCert.asn1SignatureAlg;sig=new KJUR.crypto.Signature({alg:\"SHA1withRSA\"});sig.init(this.prvKey);sig.updateHex(this.asn1TBSCert.getEncodedHex());this.hexSig=sig.sign();this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var h=new KJUR.asn1.DERSequence({array:[this.asn1TBSCert,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=h.getEncodedHex();this.isModified=false};this.getEncodedHex=function(){if(this.isModified==false&&this.hTLV!=null){return this.hTLV}throw\"not signed yet\"};this.getPEMString=function(){var j=this.getEncodedHex();var h=CryptoJS.enc.Hex.parse(j);var i=CryptoJS.enc.Base64.stringify(h);var k=i.replace(/(.{64})/g,\"$1\\r\\n\");return\"-----BEGIN CERTIFICATE-----\\r\\n\"+k+\"\\r\\n-----END CERTIFICATE-----\\r\\n\"};if(typeof g!=\"undefined\"){if(typeof g.tbscertobj!=\"undefined\"){this.asn1TBSCert=g.tbscertobj}if(typeof g.prvkeyobj!=\"undefined\"){this.prvKey=g.prvkeyobj}else{if(typeof g.rsaprvkey!=\"undefined\"){this.prvKey=g.rsaprvkey}else{if((typeof g.rsaprvpem!=\"undefined\")&&(typeof g.rsaprvpas!=\"undefined\")){this.setRsaPrvKeyByPEMandPass(g.rsaprvpem,g.rsaprvpas)}}}}};YAHOO.lang.extend(KJUR.asn1.x509.Certificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertificate=function(a){KJUR.asn1.x509.TBSCertificate.superclass.constructor.call(this);this._initialize=function(){this.asn1Array=new Array();this.asn1Version=new KJUR.asn1.DERTaggedObject({obj:new KJUR.asn1.DERInteger({\"int\":2})});this.asn1SerialNumber=null;this.asn1SignatureAlg=null;this.asn1Issuer=null;this.asn1NotBefore=null;this.asn1NotAfter=null;this.asn1Subject=null;this.asn1SubjPKey=null;this.extensionsArray=new Array()};this.setSerialNumberByParam=function(b){this.asn1SerialNumber=new KJUR.asn1.DERInteger(b)};this.setSignatureAlgByParam=function(b){this.asn1SignatureAlg=new KJUR.asn1.x509.AlgorithmIdentifier(b)};this.setIssuerByParam=function(b){this.asn1Issuer=new KJUR.asn1.x509.X500Name(b)};this.setNotBeforeByParam=function(b){this.asn1NotBefore=new KJUR.asn1.x509.Time(b)};this.setNotAfterByParam=function(b){this.asn1NotAfter=new KJUR.asn1.x509.Time(b)};this.setSubjectByParam=function(b){this.asn1Subject=new KJUR.asn1.x509.X500Name(b)};this.setSubjectPublicKeyByParam=function(b){this.asn1SubjPKey=new KJUR.asn1.x509.SubjectPublicKeyInfo(b)};this.setSubjectPublicKeyByGetKey=function(c){var b=KEYUTIL.getKey(c);this.asn1SubjPKey=new KJUR.asn1.x509.SubjectPublicKeyInfo(b)};this.appendExtension=function(b){this.extensionsArray.push(b)};this.appendExtensionByName=function(d,b){if(d.toLowerCase()==\"basicconstraints\"){var c=new KJUR.asn1.x509.BasicConstraints(b);this.appendExtension(c)}else{if(d.toLowerCase()==\"keyusage\"){var c=new KJUR.asn1.x509.KeyUsage(b);this.appendExtension(c)}else{if(d.toLowerCase()==\"crldistributionpoints\"){var c=new KJUR.asn1.x509.CRLDistributionPoints(b);this.appendExtension(c)}else{if(d.toLowerCase()==\"extkeyusage\"){var c=new KJUR.asn1.x509.ExtKeyUsage(b);this.appendExtension(c)}else{throw\"unsupported extension name: \"+d}}}}};this.getEncodedHex=function(){if(this.asn1NotBefore==null||this.asn1NotAfter==null){throw\"notBefore and/or notAfter not set\"}var c=new KJUR.asn1.DERSequence({array:[this.asn1NotBefore,this.asn1NotAfter]});this.asn1Array=new Array();this.asn1Array.push(this.asn1Version);this.asn1Array.push(this.asn1SerialNumber);this.asn1Array.push(this.asn1SignatureAlg);this.asn1Array.push(this.asn1Issuer);this.asn1Array.push(c);this.asn1Array.push(this.asn1Subject);this.asn1Array.push(this.asn1SubjPKey);if(this.extensionsArray.length>0){var d=new KJUR.asn1.DERSequence({array:this.extensionsArray});var b=new KJUR.asn1.DERTaggedObject({explicit:true,tag:\"a3\",obj:d});this.asn1Array.push(b)}var e=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=e.getEncodedHex();this.isModified=false;return this.hTLV};this._initialize()};YAHOO.lang.extend(KJUR.asn1.x509.TBSCertificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extension=function(b){KJUR.asn1.x509.Extension.superclass.constructor.call(this);var a=null;this.getEncodedHex=function(){var f=new KJUR.asn1.DERObjectIdentifier({oid:this.oid});var e=new KJUR.asn1.DEROctetString({hex:this.getExtnValueHex()});var d=new Array();d.push(f);if(this.critical){d.push(new KJUR.asn1.DERBoolean())}d.push(e);var c=new KJUR.asn1.DERSequence({array:d});return c.getEncodedHex()};this.critical=false;if(typeof b!=\"undefined\"){if(typeof b.critical!=\"undefined\"){this.critical=b.critical}}};YAHOO.lang.extend(KJUR.asn1.x509.Extension,KJUR.asn1.ASN1Object);KJUR.asn1.x509.KeyUsage=function(a){KJUR.asn1.x509.KeyUsage.superclass.constructor.call(this,a);this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex()};this.oid=\"2.5.29.15\";if(typeof a!=\"undefined\"){if(typeof a.bin!=\"undefined\"){this.asn1ExtnValue=new KJUR.asn1.DERBitString(a)}}};YAHOO.lang.extend(KJUR.asn1.x509.KeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.BasicConstraints=function(c){KJUR.asn1.x509.BasicConstraints.superclass.constructor.call(this,c);var a=false;var b=-1;this.getExtnValueHex=function(){var e=new Array();if(this.cA){e.push(new KJUR.asn1.DERBoolean())}if(this.pathLen>-1){e.push(new KJUR.asn1.DERInteger({\"int\":this.pathLen}))}var d=new KJUR.asn1.DERSequence({array:e});this.asn1ExtnValue=d;return this.asn1ExtnValue.getEncodedHex()};this.oid=\"2.5.29.19\";this.cA=false;this.pathLen=-1;if(typeof c!=\"undefined\"){if(typeof c.cA!=\"undefined\"){this.cA=c.cA}if(typeof c.pathLen!=\"undefined\"){this.pathLen=c.pathLen}}};YAHOO.lang.extend(KJUR.asn1.x509.BasicConstraints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLDistributionPoints=function(a){KJUR.asn1.x509.CRLDistributionPoints.superclass.constructor.call(this,a);this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex()};this.setByDPArray=function(b){this.asn1ExtnValue=new KJUR.asn1.DERSequence({array:b})};this.setByOneURI=function(e){var b=new KJUR.asn1.x509.GeneralNames([{uri:e}]);var d=new KJUR.asn1.x509.DistributionPointName(b);var c=new KJUR.asn1.x509.DistributionPoint({dpobj:d});this.setByDPArray([c])};this.oid=\"2.5.29.31\";if(typeof a!=\"undefined\"){if(typeof a.array!=\"undefined\"){this.setByDPArray(a.array)}else{if(typeof a.uri!=\"undefined\"){this.setByOneURI(a.uri)}}}};YAHOO.lang.extend(KJUR.asn1.x509.CRLDistributionPoints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.ExtKeyUsage=function(a){KJUR.asn1.x509.ExtKeyUsage.superclass.constructor.call(this,a);this.setPurposeArray=function(b){this.asn1ExtnValue=new KJUR.asn1.DERSequence();for(var c=0;c<b.length;c++){var d=new KJUR.asn1.DERObjectIdentifier(b[c]);this.asn1ExtnValue.appendASN1Object(d)}};this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex()};this.oid=\"2.5.29.37\";if(typeof a!=\"undefined\"){if(typeof a.array!=\"undefined\"){this.setPurposeArray(a.array)}}};YAHOO.lang.extend(KJUR.asn1.x509.ExtKeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRL=function(f){KJUR.asn1.x509.CRL.superclass.constructor.call(this);var a=null;var c=null;var e=null;var b=null;var d=null;this.setRsaPrvKeyByPEMandPass=function(h,j){var g=PKCS5PKEY.getDecryptedKeyHex(h,j);var i=new RSAKey();i.readPrivateKeyFromASN1HexString(g);this.rsaPrvKey=i};this.sign=function(){this.asn1SignatureAlg=this.asn1TBSCertList.asn1SignatureAlg;sig=new KJUR.crypto.Signature({alg:\"SHA1withRSA\",prov:\"cryptojs/jsrsa\"});sig.initSign(this.rsaPrvKey);sig.updateHex(this.asn1TBSCertList.getEncodedHex());this.hexSig=sig.sign();this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var g=new KJUR.asn1.DERSequence({array:[this.asn1TBSCertList,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=g.getEncodedHex();this.isModified=false};this.getEncodedHex=function(){if(this.isModified==false&&this.hTLV!=null){return this.hTLV}throw\"not signed yet\"};this.getPEMString=function(){var i=this.getEncodedHex();var g=CryptoJS.enc.Hex.parse(i);var h=CryptoJS.enc.Base64.stringify(g);var j=h.replace(/(.{64})/g,\"$1\\r\\n\");return\"-----BEGIN X509 CRL-----\\r\\n\"+j+\"\\r\\n-----END X509 CRL-----\\r\\n\"};if(typeof f!=\"undefined\"){if(typeof f.tbsobj!=\"undefined\"){this.asn1TBSCertList=f.tbsobj}if(typeof f.rsaprvkey!=\"undefined\"){this.rsaPrvKey=f.rsaprvkey}if((typeof f.rsaprvpem!=\"undefined\")&&(typeof f.rsaprvpas!=\"undefined\")){this.setRsaPrvKeyByPEMandPass(f.rsaprvpem,f.rsaprvpas)}}};YAHOO.lang.extend(KJUR.asn1.x509.CRL,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertList=function(b){KJUR.asn1.x509.TBSCertList.superclass.constructor.call(this);var a=null;this.setSignatureAlgByParam=function(c){this.asn1SignatureAlg=new KJUR.asn1.x509.AlgorithmIdentifier(c)};this.setIssuerByParam=function(c){this.asn1Issuer=new KJUR.asn1.x509.X500Name(c)};this.setThisUpdateByParam=function(c){this.asn1ThisUpdate=new KJUR.asn1.x509.Time(c)};this.setNextUpdateByParam=function(c){this.asn1NextUpdate=new KJUR.asn1.x509.Time(c)};this.addRevokedCert=function(c,d){var f={};if(c!=undefined&&c!=null){f.sn=c}if(d!=undefined&&d!=null){f.time=d}var e=new KJUR.asn1.x509.CRLEntry(f);this.aRevokedCert.push(e)};this.getEncodedHex=function(){this.asn1Array=new Array();if(this.asn1Version!=null){this.asn1Array.push(this.asn1Version)}this.asn1Array.push(this.asn1SignatureAlg);this.asn1Array.push(this.asn1Issuer);this.asn1Array.push(this.asn1ThisUpdate);if(this.asn1NextUpdate!=null){this.asn1Array.push(this.asn1NextUpdate)}if(this.aRevokedCert.length>0){var c=new KJUR.asn1.DERSequence({array:this.aRevokedCert});this.asn1Array.push(c)}var d=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=d.getEncodedHex();this.isModified=false;return this.hTLV};this._initialize=function(){this.asn1Version=null;this.asn1SignatureAlg=null;this.asn1Issuer=null;this.asn1ThisUpdate=null;this.asn1NextUpdate=null;this.aRevokedCert=new Array()};this._initialize()};YAHOO.lang.extend(KJUR.asn1.x509.TBSCertList,KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLEntry=function(c){KJUR.asn1.x509.CRLEntry.superclass.constructor.call(this);var b=null;var a=null;this.setCertSerial=function(d){this.sn=new KJUR.asn1.DERInteger(d)};this.setRevocationDate=function(d){this.time=new KJUR.asn1.x509.Time(d)};this.getEncodedHex=function(){var d=new KJUR.asn1.DERSequence({array:[this.sn,this.time]});this.TLV=d.getEncodedHex();return this.TLV};if(typeof c!=\"undefined\"){if(typeof c.time!=\"undefined\"){this.setRevocationDate(c.time)}if(typeof c.sn!=\"undefined\"){this.setCertSerial(c.sn)}}};YAHOO.lang.extend(KJUR.asn1.x509.CRLEntry,KJUR.asn1.ASN1Object);KJUR.asn1.x509.X500Name=function(a){KJUR.asn1.x509.X500Name.superclass.constructor.call(this);this.asn1Array=new Array();this.setByString=function(b){var c=b.split(\"/\");c.shift();for(var d=0;d<c.length;d++){this.asn1Array.push(new KJUR.asn1.x509.RDN({str:c[d]}))}};this.getEncodedHex=function(){var b=new KJUR.asn1.DERSequence({array:this.asn1Array});this.TLV=b.getEncodedHex();return this.TLV};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.setByString(a.str)}}};YAHOO.lang.extend(KJUR.asn1.x509.X500Name,KJUR.asn1.ASN1Object);KJUR.asn1.x509.RDN=function(a){KJUR.asn1.x509.RDN.superclass.constructor.call(this);this.asn1Array=new Array();this.addByString=function(b){this.asn1Array.push(new KJUR.asn1.x509.AttributeTypeAndValue({str:b}))};this.getEncodedHex=function(){var b=new KJUR.asn1.DERSet({array:this.asn1Array});this.TLV=b.getEncodedHex();return this.TLV};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.addByString(a.str)}}};YAHOO.lang.extend(KJUR.asn1.x509.RDN,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AttributeTypeAndValue=function(b){KJUR.asn1.x509.AttributeTypeAndValue.superclass.constructor.call(this);var d=null;var c=null;var a=\"utf8\";this.setByString=function(e){if(e.match(/^([^=]+)=(.+)$/)){this.setByAttrTypeAndValueStr(RegExp.$1,RegExp.$2)}else{throw\"malformed attrTypeAndValueStr: \"+e}};this.setByAttrTypeAndValueStr=function(g,f){this.typeObj=KJUR.asn1.x509.OID.atype2obj(g);var e=a;if(g==\"C\"){e=\"prn\"}this.valueObj=this.getValueObj(e,f)};this.getValueObj=function(f,e){if(f==\"utf8\"){return new KJUR.asn1.DERUTF8String({str:e})}if(f==\"prn\"){return new KJUR.asn1.DERPrintableString({str:e})}if(f==\"tel\"){return new KJUR.asn1.DERTeletexString({str:e})}if(f==\"ia5\"){return new KJUR.asn1.DERIA5String({str:e})}throw\"unsupported directory string type: type=\"+f+\" value=\"+e};this.getEncodedHex=function(){var e=new KJUR.asn1.DERSequence({array:[this.typeObj,this.valueObj]});this.TLV=e.getEncodedHex();return this.TLV};if(typeof b!=\"undefined\"){if(typeof b.str!=\"undefined\"){this.setByString(b.str)}}};YAHOO.lang.extend(KJUR.asn1.x509.AttributeTypeAndValue,KJUR.asn1.ASN1Object);KJUR.asn1.x509.SubjectPublicKeyInfo=function(d){KJUR.asn1.x509.SubjectPublicKeyInfo.superclass.constructor.call(this);var b=null;var c=null;var a=null;this.setRSAKey=function(e){if(!RSAKey.prototype.isPrototypeOf(e)){throw\"argument is not RSAKey instance\"}this.rsaKey=e;var g=new KJUR.asn1.DERInteger({bigint:e.n});var f=new KJUR.asn1.DERInteger({\"int\":e.e});var i=new KJUR.asn1.DERSequence({array:[g,f]});var h=i.getEncodedHex();this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+h})};this.setRSAPEM=function(g){if(g.match(/-----BEGIN PUBLIC KEY-----/)){var n=g;n=n.replace(/^-----[^-]+-----/,\"\");n=n.replace(/-----[^-]+-----\\s*$/,\"\");var m=n.replace(/\\s+/g,\"\");var f=CryptoJS.enc.Base64.parse(m);var i=CryptoJS.enc.Hex.stringify(f);var k=_rsapem_getHexValueArrayOfChildrenFromHex(i);var h=k[1];var l=h.substr(2);var e=_rsapem_getHexValueArrayOfChildrenFromHex(l);var j=new RSAKey();j.setPublic(e[0],e[1]);this.setRSAKey(j)}else{throw\"key not supported\"}};this.getASN1Object=function(){if(this.asn1AlgId==null||this.asn1SubjPKey==null){throw\"algId and/or subjPubKey not set\"}var e=new KJUR.asn1.DERSequence({array:[this.asn1AlgId,this.asn1SubjPKey]});return e};this.getEncodedHex=function(){var e=this.getASN1Object();this.hTLV=e.getEncodedHex();return this.hTLV};this._setRSAKey=function(e){var g=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":{bigint:e.n}},{\"int\":{\"int\":e.e}}]});var f=g.getEncodedHex();this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+f})};this._setEC=function(e){var f=new KJUR.asn1.DERObjectIdentifier({name:e.curveName});this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"ecPublicKey\",asn1params:f});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+e.pubKeyHex})};this._setDSA=function(e){var f=new KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":{bigint:e.p}},{\"int\":{bigint:e.q}},{\"int\":{bigint:e.g}}]});this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"dsa\",asn1params:f});var g=new KJUR.asn1.DERInteger({bigint:e.y});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+g.getEncodedHex()})};if(typeof d!=\"undefined\"){if(typeof RSAKey!=\"undefined\"&&d instanceof RSAKey){this._setRSAKey(d)}else{if(typeof KJUR.crypto.ECDSA!=\"undefined\"&&d instanceof KJUR.crypto.ECDSA){this._setEC(d)}else{if(typeof KJUR.crypto.DSA!=\"undefined\"&&d instanceof KJUR.crypto.DSA){this._setDSA(d)}else{if(typeof d.rsakey!=\"undefined\"){this.setRSAKey(d.rsakey)}else{if(typeof d.rsapem!=\"undefined\"){this.setRSAPEM(d.rsapem)}}}}}}};YAHOO.lang.extend(KJUR.asn1.x509.SubjectPublicKeyInfo,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Time=function(c){KJUR.asn1.x509.Time.superclass.constructor.call(this);var b=null;var a=null;this.setTimeParams=function(d){this.timeParams=d};this.getEncodedHex=function(){if(this.timeParams==null){throw\"timeParams shall be specified. ({'str':'130403235959Z'}}\"}var d=null;if(this.type==\"utc\"){d=new KJUR.asn1.DERUTCTime(this.timeParams)}else{d=new KJUR.asn1.DERGeneralizedTime(this.timeParams)}this.TLV=d.getEncodedHex();return this.TLV};this.type=\"utc\";if(typeof c!=\"undefined\"){if(typeof c.type!=\"undefined\"){this.type=c.type}this.timeParams=c}};YAHOO.lang.extend(KJUR.asn1.x509.Time,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier=function(e){KJUR.asn1.x509.AlgorithmIdentifier.superclass.constructor.call(this);var a=null;var d=null;var b=null;var c=false;this.getEncodedHex=function(){if(this.nameAlg==null&&this.asn1Alg==null){throw\"algorithm not specified\"}if(this.nameAlg!=null&&this.asn1Alg==null){this.asn1Alg=KJUR.asn1.x509.OID.name2obj(this.nameAlg)}var f=[this.asn1Alg];if(!this.paramEmpty){f.push(this.asn1Params)}var g=new KJUR.asn1.DERSequence({array:f});this.hTLV=g.getEncodedHex();return this.hTLV};if(typeof e!=\"undefined\"){if(typeof e.name!=\"undefined\"){this.nameAlg=e.name}if(typeof e.asn1params!=\"undefined\"){this.asn1Params=e.asn1params}if(typeof e.paramempty!=\"undefined\"){this.paramEmpty=e.paramempty}}if(this.asn1Params==null){this.asn1Params=new KJUR.asn1.DERNull()}};YAHOO.lang.extend(KJUR.asn1.x509.AlgorithmIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralName=function(d){KJUR.asn1.x509.GeneralName.superclass.constructor.call(this);var c=null;var b=null;var a={rfc822:\"81\",dns:\"82\",uri:\"86\"};this.setByParam=function(g){var f=null;var e=null;if(typeof g.rfc822!=\"undefined\"){this.type=\"rfc822\";e=new KJUR.asn1.DERIA5String({str:g[this.type]})}if(typeof g.dns!=\"undefined\"){this.type=\"dns\";e=new KJUR.asn1.DERIA5String({str:g[this.type]})}if(typeof g.uri!=\"undefined\"){this.type=\"uri\";e=new KJUR.asn1.DERIA5String({str:g[this.type]})}if(this.type==null){throw\"unsupported type in params=\"+g}this.asn1Obj=new KJUR.asn1.DERTaggedObject({explicit:false,tag:a[this.type],obj:e})};this.getEncodedHex=function(){return this.asn1Obj.getEncodedHex()};if(typeof d!=\"undefined\"){this.setByParam(d)}};YAHOO.lang.extend(KJUR.asn1.x509.GeneralName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralNames=function(b){KJUR.asn1.x509.GeneralNames.superclass.constructor.call(this);var a=null;this.setByParamArray=function(e){for(var c=0;c<e.length;c++){var d=new KJUR.asn1.x509.GeneralName(e[c]);this.asn1Array.push(d)}};this.getEncodedHex=function(){var c=new KJUR.asn1.DERSequence({array:this.asn1Array});return c.getEncodedHex()};this.asn1Array=new Array();if(typeof b!=\"undefined\"){this.setByParamArray(b)}};YAHOO.lang.extend(KJUR.asn1.x509.GeneralNames,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPointName=function(b){KJUR.asn1.x509.DistributionPointName.superclass.constructor.call(this);var e=null;var c=null;var a=null;var d=null;this.getEncodedHex=function(){if(this.type!=\"full\"){throw\"currently type shall be 'full': \"+this.type}this.asn1Obj=new KJUR.asn1.DERTaggedObject({explicit:false,tag:this.tag,obj:this.asn1V});this.hTLV=this.asn1Obj.getEncodedHex();return this.hTLV};if(typeof b!=\"undefined\"){if(KJUR.asn1.x509.GeneralNames.prototype.isPrototypeOf(b)){this.type=\"full\";this.tag=\"a0\";this.asn1V=b}else{throw\"This class supports GeneralNames only as argument\"}}};YAHOO.lang.extend(KJUR.asn1.x509.DistributionPointName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPoint=function(b){KJUR.asn1.x509.DistributionPoint.superclass.constructor.call(this);var a=null;this.getEncodedHex=function(){var c=new KJUR.asn1.DERSequence();if(this.asn1DP!=null){var d=new KJUR.asn1.DERTaggedObject({explicit:true,tag:\"a0\",obj:this.asn1DP});c.appendASN1Object(d)}this.hTLV=c.getEncodedHex();return this.hTLV};if(typeof b!=\"undefined\"){if(typeof b.dpobj!=\"undefined\"){this.asn1DP=b.dpobj}}};YAHOO.lang.extend(KJUR.asn1.x509.DistributionPoint,KJUR.asn1.ASN1Object);KJUR.asn1.x509.OID=new function(a){this.atype2oidList={C:\"2.5.4.6\",O:\"2.5.4.10\",OU:\"2.5.4.11\",ST:\"2.5.4.8\",L:\"2.5.4.7\",CN:\"2.5.4.3\",};this.name2oidList={sha384:\"2.16.840.1.101.3.4.2.2\",sha224:\"2.16.840.1.101.3.4.2.4\",MD2withRSA:\"1.2.840.113549.1.1.2\",MD4withRSA:\"1.2.840.113549.1.1.3\",MD5withRSA:\"1.2.840.113549.1.1.4\",SHA1withRSA:\"1.2.840.113549.1.1.5\",SHA224withRSA:\"1.2.840.113549.1.1.14\",SHA256withRSA:\"1.2.840.113549.1.1.11\",SHA384withRSA:\"1.2.840.113549.1.1.12\",SHA512withRSA:\"1.2.840.113549.1.1.13\",SHA1withECDSA:\"1.2.840.10045.4.1\",SHA224withECDSA:\"1.2.840.10045.4.3.1\",SHA256withECDSA:\"1.2.840.10045.4.3.2\",SHA384withECDSA:\"1.2.840.10045.4.3.3\",SHA512withECDSA:\"1.2.840.10045.4.3.4\",dsa:\"1.2.840.10040.4.1\",SHA1withDSA:\"1.2.840.10040.4.3\",SHA224withDSA:\"2.16.840.1.101.3.4.3.1\",SHA256withDSA:\"2.16.840.1.101.3.4.3.2\",rsaEncryption:\"1.2.840.113549.1.1.1\",subjectKeyIdentifier:\"2.5.29.14\",countryName:\"2.5.4.6\",organization:\"2.5.4.10\",organizationalUnit:\"2.5.4.11\",stateOrProvinceName:\"2.5.4.8\",locality:\"2.5.4.7\",commonName:\"2.5.4.3\",keyUsage:\"2.5.29.15\",basicConstraints:\"2.5.29.19\",cRLDistributionPoints:\"2.5.29.31\",certificatePolicies:\"2.5.29.32\",authorityKeyIdentifier:\"2.5.29.35\",extKeyUsage:\"2.5.29.37\",anyExtendedKeyUsage:\"2.5.29.37.0\",serverAuth:\"1.3.6.1.5.5.7.3.1\",clientAuth:\"1.3.6.1.5.5.7.3.2\",codeSigning:\"1.3.6.1.5.5.7.3.3\",emailProtection:\"1.3.6.1.5.5.7.3.4\",timeStamping:\"1.3.6.1.5.5.7.3.8\",ocspSigning:\"1.3.6.1.5.5.7.3.9\",ecPublicKey:\"1.2.840.10045.2.1\",secp256r1:\"1.2.840.10045.3.1.7\",secp256k1:\"1.3.132.0.10\",secp384r1:\"1.3.132.0.34\",pkcs5PBES2:\"1.2.840.113549.1.5.13\",pkcs5PBKDF2:\"1.2.840.113549.1.5.12\",\"des-EDE3-CBC\":\"1.2.840.113549.3.7\",};this.objCache={};this.name2obj=function(b){if(typeof this.objCache[b]!=\"undefined\"){return this.objCache[b]}if(typeof this.name2oidList[b]==\"undefined\"){throw\"Name of ObjectIdentifier not defined: \"+b}var c=this.name2oidList[b];var d=new KJUR.asn1.DERObjectIdentifier({oid:c});this.objCache[b]=d;return d};this.atype2obj=function(b){if(typeof this.objCache[b]!=\"undefined\"){return this.objCache[b]}if(typeof this.atype2oidList[b]==\"undefined\"){throw\"AttributeType name undefined: \"+b}var c=this.atype2oidList[b];var d=new KJUR.asn1.DERObjectIdentifier({oid:c});this.objCache[b]=d;return d}};KJUR.asn1.x509.X509Util=new function(){this.getPKCS8PubKeyPEMfromRSAKey=function(i){var h=null;var f=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(i.n);var j=KJUR.asn1.ASN1Util.integerToByteHex(i.e);var a=new KJUR.asn1.DERInteger({hex:f});var g=new KJUR.asn1.DERInteger({hex:j});var l=new KJUR.asn1.DERSequence({array:[a,g]});var c=l.getEncodedHex();var d=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});var b=new KJUR.asn1.DERBitString({hex:\"00\"+c});var k=new KJUR.asn1.DERSequence({array:[d,b]});var e=k.getEncodedHex();var h=KJUR.asn1.ASN1Util.getPEMStringFromHex(e,\"PUBLIC KEY\");return h}};KJUR.asn1.x509.X509Util.newCertPEM=function(f){var c=KJUR.asn1.x509;var e=new c.TBSCertificate();if(f.serial!==undefined){e.setSerialNumberByParam(f.serial)}else{throw\"serial number undefined.\"}if(typeof f.sigalg.name==\"string\"){e.setSignatureAlgByParam(f.sigalg)}else{throw\"unproper signature algorithm name\"}if(f.issuer!==undefined){e.setIssuerByParam(f.issuer)}else{throw\"issuer name undefined.\"}if(f.notbefore!==undefined){e.setNotBeforeByParam(f.notbefore)}else{throw\"notbefore undefined.\"}if(f.notafter!==undefined){e.setNotAfterByParam(f.notafter)}else{throw\"notafter undefined.\"}if(f.subject!==undefined){e.setSubjectByParam(f.subject)}else{throw\"subject name undefined.\"}if(f.sbjpubkey!==undefined){e.setSubjectPublicKeyByGetKey(f.sbjpubkey)}else{throw\"subject public key undefined.\"}if(f.ext.length!==undefined){for(var b=0;b<f.ext.length;b++){for(key in f.ext[b]){e.appendExtensionByName(key,f.ext[b][key])}}}var d=null;if(f.cakey){d=KEYUTIL.getKey.apply(null,f.cakey)}else{throw\"ca key undefined\"}var a=new c.Certificate({tbscertobj:e,prvkeyobj:d});a.sign();return a.getPEMString()};\r\n/*! base64x-1.1.2 (c) 2013 Kenji Urushima | kjur.github.com/jsjws/license\r\n */\r\nfunction Base64x(){}function stoBA(d){var b=new Array();for(var c=0;c<d.length;c++){b[c]=d.charCodeAt(c)}return b}function BAtos(b){var d=\"\";for(var c=0;c<b.length;c++){d=d+String.fromCharCode(b[c])}return d}function BAtohex(b){var e=\"\";for(var d=0;d<b.length;d++){var c=b[d].toString(16);if(c.length==1){c=\"0\"+c}e=e+c}return e}function stohex(a){return BAtohex(stoBA(a))}function stob64(a){return hex2b64(stohex(a))}function stob64u(a){return b64tob64u(hex2b64(stohex(a)))}function b64utos(a){return BAtos(b64toBA(b64utob64(a)))}function b64tob64u(a){a=a.replace(/\\=/g,\"\");a=a.replace(/\\+/g,\"-\");a=a.replace(/\\//g,\"_\");return a}function b64utob64(a){if(a.length%4==2){a=a+\"==\"}else{if(a.length%4==3){a=a+\"=\"}}a=a.replace(/-/g,\"+\");a=a.replace(/_/g,\"/\");return a}function hextob64u(a){return b64tob64u(hex2b64(a))}function b64utohex(a){return b64tohex(b64utob64(a))}var utf8tob64u,b64utoutf8;if(typeof Buffer===\"function\"){utf8tob64u=function(a){return b64tob64u(new Buffer(a,\"utf8\").toString(\"base64\"))};b64utoutf8=function(a){return new Buffer(b64utob64(a),\"base64\").toString(\"utf8\")}}else{utf8tob64u=function(a){return hextob64u(uricmptohex(encodeURIComponentAll(a)))};b64utoutf8=function(a){return decodeURIComponent(hextouricmp(b64utohex(a)))}}function utf8tob64(a){return hex2b64(uricmptohex(encodeURIComponentAll(a)))}function b64toutf8(a){return decodeURIComponent(hextouricmp(b64tohex(a)))}function utf8tohex(a){return uricmptohex(encodeURIComponentAll(a))}function hextoutf8(a){return decodeURIComponent(hextouricmp(a))}function hextorstr(c){var b=\"\";for(var a=0;a<c.length-1;a+=2){b+=String.fromCharCode(parseInt(c.substr(a,2),16))}return b}function rstrtohex(c){var a=\"\";for(var b=0;b<c.length;b++){a+=(\"0\"+c.charCodeAt(b).toString(16)).slice(-2)}return a}function uricmptohex(a){return a.replace(/%/g,\"\")}function hextouricmp(a){return a.replace(/(..)/g,\"%$1\")}function encodeURIComponentAll(a){var d=encodeURIComponent(a);var b=\"\";for(var c=0;c<d.length;c++){if(d[c]==\"%\"){b=b+d.substr(c,3);c=c+2}else{b=b+\"%\"+stohex(d[c])}}return b}function newline_toUnix(a){a=a.replace(/\\r\\n/mg,\"\\n\");return a}function newline_toDos(a){a=a.replace(/\\r\\n/mg,\"\\n\");a=a.replace(/\\n/mg,\"\\r\\n\");return a};\r\n/*! crypto-1.1.5.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:\"3021300906052b0e03021a05000414\",sha224:\"302d300d06096086480165030402040500041c\",sha256:\"3031300d060960864801650304020105000420\",sha384:\"3041300d060960864801650304020205000430\",sha512:\"3051300d060960864801650304020305000440\",md2:\"3020300c06082a864886f70d020205000410\",md5:\"3020300c06082a864886f70d020505000410\",ripemd160:\"3021300906052b2403020105000414\",};this.DEFAULTPROVIDER={md5:\"cryptojs\",sha1:\"cryptojs\",sha224:\"cryptojs\",sha256:\"cryptojs\",sha384:\"cryptojs\",sha512:\"cryptojs\",ripemd160:\"cryptojs\",hmacmd5:\"cryptojs\",hmacsha1:\"cryptojs\",hmacsha224:\"cryptojs\",hmacsha256:\"cryptojs\",hmacsha384:\"cryptojs\",hmacsha512:\"cryptojs\",hmacripemd160:\"cryptojs\",MD5withRSA:\"cryptojs/jsrsa\",SHA1withRSA:\"cryptojs/jsrsa\",SHA224withRSA:\"cryptojs/jsrsa\",SHA256withRSA:\"cryptojs/jsrsa\",SHA384withRSA:\"cryptojs/jsrsa\",SHA512withRSA:\"cryptojs/jsrsa\",RIPEMD160withRSA:\"cryptojs/jsrsa\",MD5withECDSA:\"cryptojs/jsrsa\",SHA1withECDSA:\"cryptojs/jsrsa\",SHA224withECDSA:\"cryptojs/jsrsa\",SHA256withECDSA:\"cryptojs/jsrsa\",SHA384withECDSA:\"cryptojs/jsrsa\",SHA512withECDSA:\"cryptojs/jsrsa\",RIPEMD160withECDSA:\"cryptojs/jsrsa\",SHA1withDSA:\"cryptojs/jsrsa\",SHA224withDSA:\"cryptojs/jsrsa\",SHA256withDSA:\"cryptojs/jsrsa\",MD5withRSAandMGF1:\"cryptojs/jsrsa\",SHA1withRSAandMGF1:\"cryptojs/jsrsa\",SHA224withRSAandMGF1:\"cryptojs/jsrsa\",SHA256withRSAandMGF1:\"cryptojs/jsrsa\",SHA384withRSAandMGF1:\"cryptojs/jsrsa\",SHA512withRSAandMGF1:\"cryptojs/jsrsa\",RIPEMD160withRSAandMGF1:\"cryptojs/jsrsa\",};this.CRYPTOJSMESSAGEDIGESTNAME={md5:\"CryptoJS.algo.MD5\",sha1:\"CryptoJS.algo.SHA1\",sha224:\"CryptoJS.algo.SHA224\",sha256:\"CryptoJS.algo.SHA256\",sha384:\"CryptoJS.algo.SHA384\",sha512:\"CryptoJS.algo.SHA512\",ripemd160:\"CryptoJS.algo.RIPEMD160\"};this.getDigestInfoHex=function(a,b){if(typeof this.DIGESTINFOHEAD[b]==\"undefined\"){throw\"alg not supported in Util.DIGESTINFOHEAD: \"+b}return this.DIGESTINFOHEAD[b]+a};this.getPaddedDigestInfoHex=function(h,a,j){var c=this.getDigestInfoHex(h,a);var d=j/4;if(c.length+22>d){throw\"key is too short for SigAlg: keylen=\"+j+\",\"+a}var b=\"0001\";var k=\"00\"+c;var g=\"\";var l=d-b.length-k.length;for(var f=0;f<l;f+=2){g+=\"ff\"}var e=b+g+k;return e};this.hashString=function(a,c){var b=new KJUR.crypto.MessageDigest({alg:c});return b.digestString(a)};this.hashHex=function(b,c){var a=new KJUR.crypto.MessageDigest({alg:c});return a.digestHex(b)};this.sha1=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha1\",prov:\"cryptojs\"});return b.digestString(a)};this.sha256=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha256\",prov:\"cryptojs\"});return b.digestString(a)};this.sha256Hex=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha256\",prov:\"cryptojs\"});return b.digestHex(a)};this.sha512=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha512\",prov:\"cryptojs\"});return b.digestString(a)};this.sha512Hex=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha512\",prov:\"cryptojs\"});return b.digestHex(a)};this.md5=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"md5\",prov:\"cryptojs\"});return b.digestString(a)};this.ripemd160=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"ripemd160\",prov:\"cryptojs\"});return b.digestString(a)};this.getCryptoJSMDByName=function(a){}};KJUR.crypto.MessageDigest=function(params){var md=null;var algName=null;var provName=null;this.setAlgAndProvider=function(alg,prov){if(alg!=null&&prov===undefined){prov=KJUR.crypto.Util.DEFAULTPROVIDER[alg]}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(alg)!=-1&&prov==\"cryptojs\"){try{this.md=eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[alg]).create()}catch(ex){throw\"setAlgAndProvider hash alg set fail alg=\"+alg+\"/\"+ex}this.updateString=function(str){this.md.update(str)};this.updateHex=function(hex){var wHex=CryptoJS.enc.Hex.parse(hex);this.md.update(wHex)};this.digest=function(){var hash=this.md.finalize();return hash.toString(CryptoJS.enc.Hex)};this.digestString=function(str){this.updateString(str);return this.digest()};this.digestHex=function(hex){this.updateHex(hex);return this.digest()}}if(\":sha256:\".indexOf(alg)!=-1&&prov==\"sjcl\"){try{this.md=new sjcl.hash.sha256()}catch(ex){throw\"setAlgAndProvider hash alg set fail alg=\"+alg+\"/\"+ex}this.updateString=function(str){this.md.update(str)};this.updateHex=function(hex){var baHex=sjcl.codec.hex.toBits(hex);this.md.update(baHex)};this.digest=function(){var hash=this.md.finalize();return sjcl.codec.hex.fromBits(hash)};this.digestString=function(str){this.updateString(str);return this.digest()};this.digestHex=function(hex){this.updateHex(hex);return this.digest()}}};this.updateString=function(str){throw\"updateString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.updateHex=function(hex){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digest=function(){throw\"digest() not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digestString=function(str){throw\"digestString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};this.digestHex=function(hex){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName};if(params!==undefined){if(params.alg!==undefined){this.algName=params.alg;if(params.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}this.setAlgAndProvider(this.algName,this.provName)}}};KJUR.crypto.Mac=function(params){var mac=null;var pass=null;var algName=null;var provName=null;var algProv=null;this.setAlgAndProvider=function(alg,prov){if(alg==null){alg=\"hmacsha1\"}alg=alg.toLowerCase();if(alg.substr(0,4)!=\"hmac\"){throw\"setAlgAndProvider unsupported HMAC alg: \"+alg}if(prov===undefined){prov=KJUR.crypto.Util.DEFAULTPROVIDER[alg]}this.algProv=alg+\"/\"+prov;var hashAlg=alg.substr(4);if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(hashAlg)!=-1&&prov==\"cryptojs\"){try{var mdObj=eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[hashAlg]);this.mac=CryptoJS.algo.HMAC.create(mdObj,this.pass)}catch(ex){throw\"setAlgAndProvider hash alg set fail hashAlg=\"+hashAlg+\"/\"+ex}this.updateString=function(str){this.mac.update(str)};this.updateHex=function(hex){var wHex=CryptoJS.enc.Hex.parse(hex);this.mac.update(wHex)};this.doFinal=function(){var hash=this.mac.finalize();return hash.toString(CryptoJS.enc.Hex)};this.doFinalString=function(str){this.updateString(str);return this.doFinal()};this.doFinalHex=function(hex){this.updateHex(hex);return this.doFinal()}}};this.updateString=function(str){throw\"updateString(str) not supported for this alg/prov: \"+this.algProv};this.updateHex=function(hex){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algProv};this.doFinal=function(){throw\"digest() not supported for this alg/prov: \"+this.algProv};this.doFinalString=function(str){throw\"digestString(str) not supported for this alg/prov: \"+this.algProv};this.doFinalHex=function(hex){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algProv};if(params!==undefined){if(params.pass!==undefined){this.pass=params.pass}if(params.alg!==undefined){this.algName=params.alg;if(params.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}this.setAlgAndProvider(this.algName,this.provName)}}};KJUR.crypto.Signature=function(o){var q=null;var n=null;var r=null;var c=null;var l=null;var d=null;var k=null;var h=null;var p=null;var e=null;var b=-1;var g=null;var j=null;var a=null;var i=null;var f=null;this._setAlgNames=function(){if(this.algName.match(/^(.+)with(.+)$/)){this.mdAlgName=RegExp.$1.toLowerCase();this.pubkeyAlgName=RegExp.$2.toLowerCase()}};this._zeroPaddingOfSignature=function(x,w){var v=\"\";var t=w/4-x.length;for(var u=0;u<t;u++){v=v+\"0\"}return v+x};this.setAlgAndProvider=function(u,t){this._setAlgNames();if(t!=\"cryptojs/jsrsa\"){throw\"provider not supported: \"+t}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(this.mdAlgName)!=-1){try{this.md=new KJUR.crypto.MessageDigest({alg:this.mdAlgName})}catch(s){throw\"setAlgAndProvider hash alg set fail alg=\"+this.mdAlgName+\"/\"+s}this.init=function(w,x){var y=null;try{if(x===undefined){y=KEYUTIL.getKey(w)}else{y=KEYUTIL.getKey(w,x)}}catch(v){throw\"init failed:\"+v}if(y.isPrivate===true){this.prvKey=y;this.state=\"SIGN\"}else{if(y.isPublic===true){this.pubKey=y;this.state=\"VERIFY\"}else{throw\"init failed.:\"+y}}};this.initSign=function(v){if(typeof v.ecprvhex==\"string\"&&typeof v.eccurvename==\"string\"){this.ecprvhex=v.ecprvhex;this.eccurvename=v.eccurvename}else{this.prvKey=v}this.state=\"SIGN\"};this.initVerifyByPublicKey=function(v){if(typeof v.ecpubhex==\"string\"&&typeof v.eccurvename==\"string\"){this.ecpubhex=v.ecpubhex;this.eccurvename=v.eccurvename}else{if(v instanceof KJUR.crypto.ECDSA){this.pubKey=v}else{if(v instanceof RSAKey){this.pubKey=v}}}this.state=\"VERIFY\"};this.initVerifyByCertificatePEM=function(v){var w=new X509();w.readCertPEM(v);this.pubKey=w.subjectPublicKeyRSA;this.state=\"VERIFY\"};this.updateString=function(v){this.md.updateString(v)};this.updateHex=function(v){this.md.updateHex(v)};this.sign=function(){this.sHashHex=this.md.digest();if(typeof this.ecprvhex!=\"undefined\"&&typeof this.eccurvename!=\"undefined\"){var v=new KJUR.crypto.ECDSA({curve:this.eccurvename});this.hSign=v.signHex(this.sHashHex,this.ecprvhex)}else{if(this.pubkeyAlgName==\"rsaandmgf1\"){this.hSign=this.prvKey.signWithMessageHashPSS(this.sHashHex,this.mdAlgName,this.pssSaltLen)}else{if(this.pubkeyAlgName==\"rsa\"){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex,this.mdAlgName)}else{if(this.prvKey instanceof KJUR.crypto.ECDSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex)}else{if(this.prvKey instanceof KJUR.crypto.DSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex)}else{throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName}}}}}return this.hSign};this.signString=function(v){this.updateString(v);this.sign()};this.signHex=function(v){this.updateHex(v);this.sign()};this.verify=function(v){this.sHashHex=this.md.digest();if(typeof this.ecpubhex!=\"undefined\"&&typeof this.eccurvename!=\"undefined\"){var w=new KJUR.crypto.ECDSA({curve:this.eccurvename});return w.verifyHex(this.sHashHex,v,this.ecpubhex)}else{if(this.pubkeyAlgName==\"rsaandmgf1\"){return this.pubKey.verifyWithMessageHashPSS(this.sHashHex,v,this.mdAlgName,this.pssSaltLen)}else{if(this.pubkeyAlgName==\"rsa\"){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{if(this.pubKey instanceof KJUR.crypto.ECDSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{if(this.pubKey instanceof KJUR.crypto.DSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v)}else{throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName}}}}}}}};this.init=function(s,t){throw\"init(key, pass) not supported for this alg:prov=\"+this.algProvName};this.initVerifyByPublicKey=function(s){throw\"initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov=\"+this.algProvName};this.initVerifyByCertificatePEM=function(s){throw\"initVerifyByCertificatePEM(certPEM) not supported for this alg:prov=\"+this.algProvName};this.initSign=function(s){throw\"initSign(prvKey) not supported for this alg:prov=\"+this.algProvName};this.updateString=function(s){throw\"updateString(str) not supported for this alg:prov=\"+this.algProvName};this.updateHex=function(s){throw\"updateHex(hex) not supported for this alg:prov=\"+this.algProvName};this.sign=function(){throw\"sign() not supported for this alg:prov=\"+this.algProvName};this.signString=function(s){throw\"digestString(str) not supported for this alg:prov=\"+this.algProvName};this.signHex=function(s){throw\"digestHex(hex) not supported for this alg:prov=\"+this.algProvName};this.verify=function(s){throw\"verify(hSigVal) not supported for this alg:prov=\"+this.algProvName};this.initParams=o;if(o!==undefined){if(o.alg!==undefined){this.algName=o.alg;if(o.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]}else{this.provName=o.prov}this.algProvName=this.algName+\":\"+this.provName;this.setAlgAndProvider(this.algName,this.provName);this._setAlgNames()}if(o.psssaltlen!==undefined){this.pssSaltLen=o.psssaltlen}if(o.prvkeypem!==undefined){if(o.prvkeypas!==undefined){throw\"both prvkeypem and prvkeypas parameters not supported\"}else{try{var q=new RSAKey();q.readPrivateKeyFromPEMString(o.prvkeypem);this.initSign(q)}catch(m){throw\"fatal error to load pem private key: \"+m}}}}};KJUR.crypto.OID=new function(){this.oidhex2name={\"2a864886f70d010101\":\"rsaEncryption\",\"2a8648ce3d0201\":\"ecPublicKey\",\"2a8648ce380401\":\"dsa\",\"2a8648ce3d030107\":\"secp256r1\",\"2b8104001f\":\"secp192k1\",\"2b81040021\":\"secp224r1\",\"2b8104000a\":\"secp256k1\",\"2b81040023\":\"secp521r1\",\"2b81040022\":\"secp384r1\",\"2a8648ce380403\":\"SHA1withDSA\",\"608648016503040301\":\"SHA224withDSA\",\"608648016503040302\":\"SHA256withDSA\",}};\r\n/*! ecdsa-modified-1.0.4.js (c) Stephan Thomas, Kenji Urushima | github.com/bitcoinjs/bitcoinjs-lib/blob/master/LICENSE\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.ECDSA=function(h){var e=\"secp256r1\";var g=null;var b=null;var f=null;var a=new SecureRandom();var d=null;this.type=\"EC\";function c(s,o,r,n){var j=Math.max(o.bitLength(),n.bitLength());var t=s.add2D(r);var q=s.curve.getInfinity();for(var p=j-1;p>=0;--p){q=q.twice2D();q.z=BigInteger.ONE;if(o.testBit(p)){if(n.testBit(p)){q=q.add2D(t)}else{q=q.add2D(s)}}else{if(n.testBit(p)){q=q.add2D(r)}}}return q}this.getBigRandom=function(i){return new BigInteger(i.bitLength(),a).mod(i.subtract(BigInteger.ONE)).add(BigInteger.ONE)};this.setNamedCurve=function(i){this.ecparams=KJUR.crypto.ECParameterDB.getByName(i);this.prvKeyHex=null;this.pubKeyHex=null;this.curveName=i};this.setPrivateKeyHex=function(i){this.isPrivate=true;this.prvKeyHex=i};this.setPublicKeyHex=function(i){this.isPublic=true;this.pubKeyHex=i};this.generateKeyPairHex=function(){var k=this.ecparams.n;var n=this.getBigRandom(k);var l=this.ecparams.G.multiply(n);var q=l.getX().toBigInteger();var o=l.getY().toBigInteger();var i=this.ecparams.keylen/4;var m=(\"0000000000\"+n.toString(16)).slice(-i);var r=(\"0000000000\"+q.toString(16)).slice(-i);var p=(\"0000000000\"+o.toString(16)).slice(-i);var j=\"04\"+r+p;this.setPrivateKeyHex(m);this.setPublicKeyHex(j);return{ecprvhex:m,ecpubhex:j}};this.signWithMessageHash=function(i){return this.signHex(i,this.prvKeyHex)};this.signHex=function(o,j){var t=new BigInteger(j,16);var l=this.ecparams.n;var q=new BigInteger(o,16);do{var m=this.getBigRandom(l);var u=this.ecparams.G;var p=u.multiply(m);var i=p.getX().toBigInteger().mod(l)}while(i.compareTo(BigInteger.ZERO)<=0);var v=m.modInverse(l).multiply(q.add(t.multiply(i))).mod(l);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(i,v)};this.sign=function(m,u){var q=u;var j=this.ecparams.n;var p=BigInteger.fromByteArrayUnsigned(m);do{var l=this.getBigRandom(j);var t=this.ecparams.G;var o=t.multiply(l);var i=o.getX().toBigInteger().mod(j)}while(i.compareTo(BigInteger.ZERO)<=0);var v=l.modInverse(j).multiply(p.add(q.multiply(i))).mod(j);return this.serializeSig(i,v)};this.verifyWithMessageHash=function(j,i){return this.verifyHex(j,i,this.pubKeyHex)};this.verifyHex=function(m,i,p){var l,j;var o=KJUR.crypto.ECDSA.parseSigHex(i);l=o.r;j=o.s;var k;k=ECPointFp.decodeFromHex(this.ecparams.curve,p);var n=new BigInteger(m,16);return this.verifyRaw(n,l,j,k)};this.verify=function(o,p,j){var l,i;if(Bitcoin.Util.isArray(p)){var n=this.parseSig(p);l=n.r;i=n.s}else{if(\"object\"===typeof p&&p.r&&p.s){l=p.r;i=p.s}else{throw\"Invalid value for signature\"}}var k;if(j instanceof ECPointFp){k=j}else{if(Bitcoin.Util.isArray(j)){k=ECPointFp.decodeFrom(this.ecparams.curve,j)}else{throw\"Invalid format for pubkey value, must be byte array or ECPointFp\"}}var m=BigInteger.fromByteArrayUnsigned(o);return this.verifyRaw(m,l,i,k)};this.verifyRaw=function(o,i,w,m){var l=this.ecparams.n;var u=this.ecparams.G;if(i.compareTo(BigInteger.ONE)<0||i.compareTo(l)>=0){return false}if(w.compareTo(BigInteger.ONE)<0||w.compareTo(l)>=0){return false}var p=w.modInverse(l);var k=o.multiply(p).mod(l);var j=i.multiply(p).mod(l);var q=u.multiply(k).add(m.multiply(j));var t=q.getX().toBigInteger().mod(l);return t.equals(i)};this.serializeSig=function(k,j){var l=k.toByteArraySigned();var i=j.toByteArraySigned();var m=[];m.push(2);m.push(l.length);m=m.concat(l);m.push(2);m.push(i.length);m=m.concat(i);m.unshift(m.length);m.unshift(48);return m};this.parseSig=function(n){var m;if(n[0]!=48){throw new Error(\"Signature not a valid DERSequence\")}m=2;if(n[m]!=2){throw new Error(\"First element in signature must be a DERInteger\")}var l=n.slice(m+2,m+2+n[m+1]);m+=2+n[m+1];if(n[m]!=2){throw new Error(\"Second element in signature must be a DERInteger\")}var i=n.slice(m+2,m+2+n[m+1]);m+=2+n[m+1];var k=BigInteger.fromByteArrayUnsigned(l);var j=BigInteger.fromByteArrayUnsigned(i);return{r:k,s:j}};this.parseSigCompact=function(m){if(m.length!==65){throw\"Signature has the wrong length\"}var j=m[0]-27;if(j<0||j>7){throw\"Invalid signature type\"}var o=this.ecparams.n;var l=BigInteger.fromByteArrayUnsigned(m.slice(1,33)).mod(o);var k=BigInteger.fromByteArrayUnsigned(m.slice(33,65)).mod(o);return{r:l,s:k,i:j}};if(h!==undefined){if(h.curve!==undefined){this.curveName=h.curve}}if(this.curveName===undefined){this.curveName=e}this.setNamedCurve(this.curveName);if(h!==undefined){if(h.prv!==undefined){this.setPrivateKeyHex(h.prv)}if(h.pub!==undefined){this.setPublicKeyHex(h.pub)}}};KJUR.crypto.ECDSA.parseSigHex=function(a){var b=KJUR.crypto.ECDSA.parseSigHexInHexRS(a);var d=new BigInteger(b.r,16);var c=new BigInteger(b.s,16);return{r:d,s:c}};KJUR.crypto.ECDSA.parseSigHexInHexRS=function(c){if(c.substr(0,2)!=\"30\"){throw\"signature is not a ASN.1 sequence\"}var b=ASN1HEX.getPosArrayOfChildren_AtObj(c,0);if(b.length!=2){throw\"number of signature ASN.1 sequence elements seem wrong\"}var g=b[0];var f=b[1];if(c.substr(g,2)!=\"02\"){throw\"1st item of sequene of signature is not ASN.1 integer\"}if(c.substr(f,2)!=\"02\"){throw\"2nd item of sequene of signature is not ASN.1 integer\"}var e=ASN1HEX.getHexOfV_AtObj(c,g);var d=ASN1HEX.getHexOfV_AtObj(c,f);return{r:e,s:d}};KJUR.crypto.ECDSA.asn1SigToConcatSig=function(c){var d=KJUR.crypto.ECDSA.parseSigHexInHexRS(c);var b=d.r;var a=d.s;if(b.substr(0,2)==\"00\"&&(((b.length/2)*8)%(16*8))==8){b=b.substr(2)}if(a.substr(0,2)==\"00\"&&(((a.length/2)*8)%(16*8))==8){a=a.substr(2)}if((((b.length/2)*8)%(16*8))!=0){throw\"unknown ECDSA sig r length error\"}if((((a.length/2)*8)%(16*8))!=0){throw\"unknown ECDSA sig s length error\"}return b+a};KJUR.crypto.ECDSA.concatSigToASN1Sig=function(a){if((((a.length/2)*8)%(16*8))!=0){throw\"unknown ECDSA concatinated r-s sig  length error\"}var c=a.substr(0,a.length/2);var b=a.substr(a.length/2);return KJUR.crypto.ECDSA.hexRSSigToASN1Sig(c,b)};KJUR.crypto.ECDSA.hexRSSigToASN1Sig=function(b,a){var d=new BigInteger(b,16);var c=new BigInteger(a,16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(d,c)};KJUR.crypto.ECDSA.biRSSigToASN1Sig=function(e,c){var b=new KJUR.asn1.DERInteger({bigint:e});var a=new KJUR.asn1.DERInteger({bigint:c});var d=new KJUR.asn1.DERSequence({array:[b,a]});return d.getEncodedHex()};\r\n/*! ecparam-1.0.0.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.ECParameterDB=new function(){var b={};var c={};function a(d){return new BigInteger(d,16)}this.getByName=function(e){var d=e;if(typeof c[d]!=\"undefined\"){d=c[e]}if(typeof b[d]!=\"undefined\"){return b[d]}throw\"unregistered EC curve name: \"+d};this.regist=function(A,l,o,g,m,e,j,f,k,u,d,x){b[A]={};var s=a(o);var z=a(g);var y=a(m);var t=a(e);var w=a(j);var r=new ECCurveFp(s,z,y);var q=r.decodePointHex(\"04\"+f+k);b[A][\"name\"]=A;b[A][\"keylen\"]=l;b[A][\"curve\"]=r;b[A][\"G\"]=q;b[A][\"n\"]=t;b[A][\"h\"]=w;b[A][\"oid\"]=d;b[A][\"info\"]=x;for(var v=0;v<u.length;v++){c[u[v]]=A}}};KJUR.crypto.ECParameterDB.regist(\"secp128r1\",128,\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\",\"E87579C11079F43DD824993C2CEE5ED3\",\"FFFFFFFE0000000075A30D1B9038A115\",\"1\",\"161FF7528B899B2D0C28607CA52C5B86\",\"CF5AC8395BAFEB13C02DA292DDED7A83\",[],\"\",\"secp128r1 : SECG curve over a 128 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160k1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\",\"0\",\"7\",\"0100000000000000000001B8FA16DFAB9ACA16B6B3\",\"1\",\"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\",\"938CF935318FDCED6BC28286531733C3F03C4FEE\",[],\"\",\"secp160k1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160r1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\",\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\",\"0100000000000000000001F4C8F927AED3CA752257\",\"1\",\"4A96B5688EF573284664698968C38BB913CBFC82\",\"23A628553168947D59DCC912042351377AC5FB32\",[],\"\",\"secp160r1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp192k1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\",\"0\",\"3\",\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\",\"1\",\"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\",\"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\",[]);KJUR.crypto.ECParameterDB.regist(\"secp192r1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\",\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\",\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\",\"1\",\"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\",\"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\",[]);KJUR.crypto.ECParameterDB.regist(\"secp224r1\",224,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\",\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\",\"1\",\"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\",\"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256k1\",256,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\",\"0\",\"7\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\",\"1\",\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\",\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256r1\",256,\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\",\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\",\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\",\"1\",\"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\",\"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\",[\"NIST P-256\",\"P-256\",\"prime256v1\"]);KJUR.crypto.ECParameterDB.regist(\"secp384r1\",384,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC\",\"B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973\",\"1\",\"AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7\",\"3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\",[\"NIST P-384\",\"P-384\"]);KJUR.crypto.ECParameterDB.regist(\"secp521r1\",521,\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC\",\"051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\",\"1\",\"C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\",\"011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\",[\"NIST P-521\",\"P-521\"]);\r\n/*! dsa-modified-1.0.1.js (c) Recurity Labs GmbH, Kenji Urushimma | github.com/openpgpjs/openpgpjs/blob/master/LICENSE\r\n */\r\nif(typeof KJUR==\"undefined\"||!KJUR){KJUR={}}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.DSA=function(){this.p=null;this.q=null;this.g=null;this.y=null;this.x=null;this.type=\"DSA\";this.setPrivate=function(z,w,v,A,u){this.isPrivate=true;this.p=z;this.q=w;this.g=v;this.y=A;this.x=u};this.setPublic=function(w,v,u,z){this.isPublic=true;this.p=w;this.q=v;this.g=u;this.y=z;this.x=null};this.signWithMessageHash=function(z){var v=this.p;var u=this.q;var C=this.g;var D=this.y;var E=this.x;var A=z.substr(0,u.bitLength()/4);var B=new BigInteger(z,16);var w=n(BigInteger.ONE.add(BigInteger.ONE),u.subtract(BigInteger.ONE));var G=(C.modPow(w,v)).mod(u);var F=(w.modInverse(u).multiply(B.add(E.multiply(G)))).mod(u);var H=KJUR.asn1.ASN1Util.jsonToASN1HEX({seq:[{\"int\":{bigint:G}},{\"int\":{bigint:F}}]});return H};this.verifyWithMessageHash=function(C,B){var z=this.p;var u=this.q;var G=this.g;var H=this.y;var E=this.parseASN1Signature(B);var K=E[0];var J=E[1];var C=C.substr(0,u.bitLength()/4);var D=new BigInteger(C,16);if(BigInteger.ZERO.compareTo(K)>0||K.compareTo(u)>0||BigInteger.ZERO.compareTo(J)>0||J.compareTo(u)>0){throw\"invalid DSA signature\"}var I=J.modInverse(u);var A=D.multiply(I).mod(u);var v=K.multiply(I).mod(u);var F=G.modPow(A,z).multiply(H.modPow(v,z)).mod(z).mod(u);return F.compareTo(K)==0};this.parseASN1Signature=function(u){try{var y=new BigInteger(ASN1HEX.getVbyList(u,0,[0],\"02\"),16);var v=new BigInteger(ASN1HEX.getVbyList(u,0,[1],\"02\"),16);return[y,v]}catch(w){throw\"malformed DSA signature\"}};function d(E,w,B,v,u,C){var z=KJUR.crypto.Util.hashString(w,E.toLowerCase());var z=z.substr(0,u.bitLength()/4);var A=new BigInteger(z,16);var y=n(BigInteger.ONE.add(BigInteger.ONE),u.subtract(BigInteger.ONE));var F=(B.modPow(y,v)).mod(u);var D=(y.modInverse(u).multiply(A.add(C.multiply(F)))).mod(u);var G=new Array();G[0]=F;G[1]=D;return G}function r(v){var u=openpgp.config.config.prefer_hash_algorithm;switch(Math.round(v.bitLength()/8)){case 20:if(u!=2&&u>11&&u!=10&&u<8){return 2}return u;case 28:if(u>11&&u<8){return 11}return u;case 32:if(u>10&&u<8){return 8}return u;default:util.print_debug(\"DSA select hash algorithm: returning null for an unknown length of q\");return null}}this.select_hash_algorithm=r;function m(I,K,J,B,z,u,F,G){var C=KJUR.crypto.Util.hashString(B,I.toLowerCase());var C=C.substr(0,u.bitLength()/4);var D=new BigInteger(C,16);if(BigInteger.ZERO.compareTo(K)>0||K.compareTo(u)>0||BigInteger.ZERO.compareTo(J)>0||J.compareTo(u)>0){util.print_error(\"invalid DSA Signature\");return null}var H=J.modInverse(u);var A=D.multiply(H).mod(u);var v=K.multiply(H).mod(u);var E=F.modPow(A,z).multiply(G.modPow(v,z)).mod(z).mod(u);return E.compareTo(K)==0}function a(z){var A=new BigInteger(z,primeCenterie);var y=j(q,512);var u=t(p,q,z);var v;do{v=new BigInteger(q.bitCount(),rand)}while(x.compareTo(BigInteger.ZERO)!=1&&x.compareTo(q)!=-1);var w=g.modPow(x,p);return{x:v,q:A,p:y,g:u,y:w}}function j(y,z,w){if(z%64!=0){return false}var u;var v;do{u=w(bitcount,true);v=u.subtract(BigInteger.ONE);u=u.subtract(v.remainder(y))}while(!u.isProbablePrime(primeCenterie)||u.bitLength()!=l);return u}function t(B,z,A,w){var u=B.subtract(BigInteger.ONE);var y=u.divide(z);var v;do{v=w(A)}while(v.compareTo(u)!=-1&&v.compareTo(BigInteger.ONE)!=1);return v.modPow(y,B)}function o(w,y,u){var v;do{v=u(y,false)}while(v.compareTo(w)!=-1&&v.compareTo(BigInteger.ZERO)!=1);return v}function i(v,w){k=o(v);var u=g.modPow(k,w).mod(v);return u}function h(B,w,y,v,z,u){var A=B(v);s=(w.modInverse(z).multiply(A.add(u.multiply(y)))).mod(z);return s}this.sign=d;this.verify=m;function n(w,u){if(u.compareTo(w)<=0){return}var v=u.subtract(w);var y=e(v.bitLength());while(y>v){y=e(v.bitLength())}return w.add(y)}function e(w){if(w<0){return null}var u=Math.floor((w+7)/8);var v=c(u);if(w%8>0){v=String.fromCharCode((Math.pow(2,w%8)-1)&v.charCodeAt(0))+v.substring(1)}return new BigInteger(f(v),16)}function c(w){var u=\"\";for(var v=0;v<w;v++){u+=String.fromCharCode(b())}return u}function b(){var u=new Uint32Array(1);window.crypto.getRandomValues(u);return u[0]&255}function f(y){if(y==null){return\"\"}var v=[];var w=y.length;var z=0;var u;while(z<w){u=y[z++].charCodeAt().toString(16);while(u.length<2){u=\"0\"+u}v.push(\"\"+u)}return v.join(\"\")}this.getRandomBigIntegerInRange=n;this.getRandomBigInteger=e;this.getRandomBytes=c};\r\n/*! pkcs5pkey-1.0.5.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nvar PKCS5PKEY=function(){var c=function(n,p,o){return i(CryptoJS.AES,n,p,o)};var d=function(n,p,o){return i(CryptoJS.TripleDES,n,p,o)};var i=function(q,v,s,o){var p=CryptoJS.enc.Hex.parse(v);var u=CryptoJS.enc.Hex.parse(s);var n=CryptoJS.enc.Hex.parse(o);var r={};r.key=u;r.iv=n;r.ciphertext=p;var t=q.decrypt(r,u,{iv:n});return CryptoJS.enc.Hex.stringify(t)};var j=function(n,p,o){return e(CryptoJS.AES,n,p,o)};var m=function(n,p,o){return e(CryptoJS.TripleDES,n,p,o)};var e=function(s,x,v,p){var r=CryptoJS.enc.Hex.parse(x);var w=CryptoJS.enc.Hex.parse(v);var o=CryptoJS.enc.Hex.parse(p);var n={};var u=s.encrypt(r,w,{iv:o});var q=CryptoJS.enc.Hex.parse(u.toString());var t=CryptoJS.enc.Base64.stringify(q);return t};var g={\"AES-256-CBC\":{proc:c,eproc:j,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:c,eproc:j,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:c,eproc:j,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:d,eproc:m,keylen:24,ivlen:8}};var b=function(n){return g[n][\"proc\"]};var k=function(n){var p=CryptoJS.lib.WordArray.random(n);var o=CryptoJS.enc.Hex.stringify(p);return o};var l=function(q){var r={};if(q.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"))){r.cipher=RegExp.$1;r.ivsalt=RegExp.$2}if(q.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"))){r.type=RegExp.$1}var p=-1;var t=0;if(q.indexOf(\"\\r\\n\\r\\n\")!=-1){p=q.indexOf(\"\\r\\n\\r\\n\");t=2}if(q.indexOf(\"\\n\\n\")!=-1){p=q.indexOf(\"\\n\\n\");t=1}var o=q.indexOf(\"-----END\");if(p!=-1&&o!=-1){var n=q.substring(p+t*2,o-t);n=n.replace(/\\s+/g,\"\");r.data=n}return r};var h=function(o,w,n){var t=n.substring(0,16);var r=CryptoJS.enc.Hex.parse(t);var p=CryptoJS.enc.Utf8.parse(w);var s=g[o][\"keylen\"]+g[o][\"ivlen\"];var v=\"\";var u=null;for(;;){var q=CryptoJS.algo.MD5.create();if(u!=null){q.update(u)}q.update(p);q.update(r);u=q.finalize();v=v+CryptoJS.enc.Hex.stringify(u);if(v.length>=s*2){break}}var x={};x.keyhex=v.substr(0,g[o][\"keylen\"]*2);x.ivhex=v.substr(g[o][\"keylen\"]*2,g[o][\"ivlen\"]*2);return x};var a=function(n,t,p,u){var q=CryptoJS.enc.Base64.parse(n);var o=CryptoJS.enc.Hex.stringify(q);var s=g[t][\"proc\"];var r=s(o,p,u);return r};var f=function(n,q,o,s){var p=g[q][\"eproc\"];var r=p(n,o,s);return r};return{version:\"1.0.5\",getHexFromPEM:function(o,r){var p=o;if(p.indexOf(\"BEGIN \"+r)==-1){throw\"can't find PEM header: \"+r}p=p.replace(\"-----BEGIN \"+r+\"-----\",\"\");p=p.replace(\"-----END \"+r+\"-----\",\"\");var q=p.replace(/\\s+/g,\"\");var n=b64tohex(q);return n},getDecryptedKeyHexByKeyIV:function(o,r,q,p){var n=b(r);return n(o,q,p)},parsePKCS5PEM:function(n){return l(n)},getKeyAndUnusedIvByPasscodeAndIvsalt:function(o,n,p){return h(o,n,p)},decryptKeyB64:function(n,p,o,q){return a(n,p,o,q)},getDecryptedKeyHex:function(w,v){var o=l(w);var r=o.type;var p=o.cipher;var n=o.ivsalt;var q=o.data;var u=h(p,v,n);var t=u.keyhex;var s=a(q,p,t,n);return s},getRSAKeyFromEncryptedPKCS5PEM:function(p,o){var q=this.getDecryptedKeyHex(p,o);var n=new RSAKey();n.readPrivateKeyFromASN1HexString(q);return n},getEryptedPKCS5PEMFromPrvKeyHex:function(q,x,r,p){var n=\"\";if(typeof r==\"undefined\"||r==null){r=\"AES-256-CBC\"}if(typeof g[r]==\"undefined\"){throw\"PKCS5PKEY unsupported algorithm: \"+r}if(typeof p==\"undefined\"||p==null){var t=g[r][\"ivlen\"];var s=k(t);p=s.toUpperCase()}var w=h(r,x,p);var v=w.keyhex;var u=f(q,r,v,p);var o=u.replace(/(.{64})/g,\"$1\\r\\n\");var n=\"-----BEGIN RSA PRIVATE KEY-----\\r\\n\";n+=\"Proc-Type: 4,ENCRYPTED\\r\\n\";n+=\"DEK-Info: \"+r+\",\"+p+\"\\r\\n\";n+=\"\\r\\n\";n+=o;n+=\"\\r\\n-----END RSA PRIVATE KEY-----\\r\\n\";return n},getEryptedPKCS5PEMFromRSAKey:function(C,D,o,s){var A=new KJUR.asn1.DERInteger({\"int\":0});var v=new KJUR.asn1.DERInteger({bigint:C.n});var z=new KJUR.asn1.DERInteger({\"int\":C.e});var B=new KJUR.asn1.DERInteger({bigint:C.d});var t=new KJUR.asn1.DERInteger({bigint:C.p});var r=new KJUR.asn1.DERInteger({bigint:C.q});var y=new KJUR.asn1.DERInteger({bigint:C.dmp1});var u=new KJUR.asn1.DERInteger({bigint:C.dmq1});var x=new KJUR.asn1.DERInteger({bigint:C.coeff});var E=new KJUR.asn1.DERSequence({array:[A,v,z,B,t,r,y,u,x]});var w=E.getEncodedHex();return this.getEryptedPKCS5PEMFromPrvKeyHex(w,D,o,s)},newEncryptedPKCS5PEM:function(n,o,r,s){if(typeof o==\"undefined\"||o==null){o=1024}if(typeof r==\"undefined\"||r==null){r=\"10001\"}var p=new RSAKey();p.generate(o,r);var q=null;if(typeof s==\"undefined\"||s==null){q=this.getEncryptedPKCS5PEMFromRSAKey(pkey,n)}else{q=this.getEncryptedPKCS5PEMFromRSAKey(pkey,n,s)}return q},getRSAKeyFromPlainPKCS8PEM:function(p){if(p.match(/ENCRYPTED/)){throw\"pem shall be not ENCRYPTED\"}var o=this.getHexFromPEM(p,\"PRIVATE KEY\");var n=this.getRSAKeyFromPlainPKCS8Hex(o);return n},getRSAKeyFromPlainPKCS8Hex:function(q){var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=3){throw\"outer DERSequence shall have 3 elements: \"+p.length}var o=ASN1HEX.getHexOfTLV_AtObj(q,p[1]);if(o!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmIdentifier is not rsaEnc: \"+o}var o=ASN1HEX.getHexOfTLV_AtObj(q,p[1]);var r=ASN1HEX.getHexOfTLV_AtObj(q,p[2]);var s=ASN1HEX.getHexOfV_AtObj(r,0);var n=new RSAKey();n.readPrivateKeyFromASN1HexString(s);return n},parseHexOfEncryptedPKCS8:function(u){var q={};var p=ASN1HEX.getPosArrayOfChildren_AtObj(u,0);if(p.length!=2){throw\"malformed format: SEQUENCE(0).items != 2: \"+p.length}q.ciphertext=ASN1HEX.getHexOfV_AtObj(u,p[1]);var w=ASN1HEX.getPosArrayOfChildren_AtObj(u,p[0]);if(w.length!=2){throw\"malformed format: SEQUENCE(0.0).items != 2: \"+w.length}if(ASN1HEX.getHexOfV_AtObj(u,w[0])!=\"2a864886f70d01050d\"){throw\"this only supports pkcs5PBES2\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(u,w[1]);if(w.length!=2){throw\"malformed format: SEQUENCE(0.0.1).items != 2: \"+n.length}var o=ASN1HEX.getPosArrayOfChildren_AtObj(u,n[1]);if(o.length!=2){throw\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+o.length}if(ASN1HEX.getHexOfV_AtObj(u,o[0])!=\"2a864886f70d0307\"){throw\"this only supports TripleDES\"}q.encryptionSchemeAlg=\"TripleDES\";q.encryptionSchemeIV=ASN1HEX.getHexOfV_AtObj(u,o[1]);var r=ASN1HEX.getPosArrayOfChildren_AtObj(u,n[0]);if(r.length!=2){throw\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+r.length}if(ASN1HEX.getHexOfV_AtObj(u,r[0])!=\"2a864886f70d01050c\"){throw\"this only supports pkcs5PBKDF2\"}var v=ASN1HEX.getPosArrayOfChildren_AtObj(u,r[1]);if(v.length<2){throw\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+v.length}q.pbkdf2Salt=ASN1HEX.getHexOfV_AtObj(u,v[0]);var s=ASN1HEX.getHexOfV_AtObj(u,v[1]);try{q.pbkdf2Iter=parseInt(s,16)}catch(t){throw\"malformed format pbkdf2Iter: \"+s}return q},getPBKDF2KeyHexFromParam:function(s,n){var r=CryptoJS.enc.Hex.parse(s.pbkdf2Salt);var o=s.pbkdf2Iter;var q=CryptoJS.PBKDF2(n,r,{keySize:192/32,iterations:o});var p=CryptoJS.enc.Hex.stringify(q);return p},getPlainPKCS8HexFromEncryptedPKCS8PEM:function(v,w){var p=this.getHexFromPEM(v,\"ENCRYPTED PRIVATE KEY\");var n=this.parseHexOfEncryptedPKCS8(p);var s=PKCS5PKEY.getPBKDF2KeyHexFromParam(n,w);var t={};t.ciphertext=CryptoJS.enc.Hex.parse(n.ciphertext);var r=CryptoJS.enc.Hex.parse(s);var q=CryptoJS.enc.Hex.parse(n.encryptionSchemeIV);var u=CryptoJS.TripleDES.decrypt(t,r,{iv:q});var o=CryptoJS.enc.Hex.stringify(u);return o},getRSAKeyFromEncryptedPKCS8PEM:function(q,p){var o=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(q,p);var n=this.getRSAKeyFromPlainPKCS8Hex(o);return n},getKeyFromEncryptedPKCS8PEM:function(q,o){var n=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(q,o);var p=this.getKeyFromPlainPrivatePKCS8Hex(n);return p},parsePlainPrivatePKCS8Hex:function(q){var o={};o.algparam=null;if(q.substr(0,2)!=\"30\"){throw\"malformed plain PKCS8 private key(code:001)\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=3){throw\"malformed plain PKCS8 private key(code:002)\"}if(q.substr(p[1],2)!=\"30\"){throw\"malformed PKCS8 private key(code:003)\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(q,p[1]);if(n.length!=2){throw\"malformed PKCS8 private key(code:004)\"}if(q.substr(n[0],2)!=\"06\"){throw\"malformed PKCS8 private key(code:005)\"}o.algoid=ASN1HEX.getHexOfV_AtObj(q,n[0]);if(q.substr(n[1],2)==\"06\"){o.algparam=ASN1HEX.getHexOfV_AtObj(q,n[1])}if(q.substr(p[2],2)!=\"04\"){throw\"malformed PKCS8 private key(code:006)\"}o.keyidx=ASN1HEX.getStartPosOfV_AtObj(q,p[2]);return o},getKeyFromPlainPrivatePKCS8PEM:function(o){var n=this.getHexFromPEM(o,\"PRIVATE KEY\");var p=this.getKeyFromPlainPrivatePKCS8Hex(n);return p},getKeyFromPlainPrivatePKCS8Hex:function(n){var p=this.parsePlainPrivatePKCS8Hex(n);if(p.algoid==\"2a864886f70d010101\"){this.parsePrivateRawRSAKeyHexAtObj(n,p);var o=p.key;var q=new RSAKey();q.setPrivateEx(o.n,o.e,o.d,o.p,o.q,o.dp,o.dq,o.co);return q}else{if(p.algoid==\"2a8648ce3d0201\"){this.parsePrivateRawECKeyHexAtObj(n,p);if(KJUR.crypto.OID.oidhex2name[p.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+p.algparam}var r=KJUR.crypto.OID.oidhex2name[p.algparam];var q=new KJUR.crypto.ECDSA({curve:r,prv:p.key});return q}else{throw\"unsupported private key algorithm\"}}},getRSAKeyFromPublicPKCS8PEM:function(o){var p=this.getHexFromPEM(o,\"PUBLIC KEY\");var n=this.getRSAKeyFromPublicPKCS8Hex(p);return n},getKeyFromPublicPKCS8PEM:function(o){var p=this.getHexFromPEM(o,\"PUBLIC KEY\");var n=this.getKeyFromPublicPKCS8Hex(p);return n},getKeyFromPublicPKCS8Hex:function(o){var n=this.parsePublicPKCS8Hex(o);if(n.algoid==\"2a864886f70d010101\"){var r=this.parsePublicRawRSAKeyHex(n.key);var p=new RSAKey();p.setPublic(r.n,r.e);return p}else{if(n.algoid==\"2a8648ce3d0201\"){if(KJUR.crypto.OID.oidhex2name[n.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+n.algparam}var q=KJUR.crypto.OID.oidhex2name[n.algparam];var p=new KJUR.crypto.ECDSA({curve:q,pub:n.key});return p}else{throw\"unsupported public key algorithm\"}}},parsePublicRawRSAKeyHex:function(p){var n={};if(p.substr(0,2)!=\"30\"){throw\"malformed RSA key(code:001)\"}var o=ASN1HEX.getPosArrayOfChildren_AtObj(p,0);if(o.length!=2){throw\"malformed RSA key(code:002)\"}if(p.substr(o[0],2)!=\"02\"){throw\"malformed RSA key(code:003)\"}n.n=ASN1HEX.getHexOfV_AtObj(p,o[0]);if(p.substr(o[1],2)!=\"02\"){throw\"malformed RSA key(code:004)\"}n.e=ASN1HEX.getHexOfV_AtObj(p,o[1]);return n},parsePrivateRawRSAKeyHexAtObj:function(o,q){var p=q.keyidx;if(o.substr(p,2)!=\"30\"){throw\"malformed RSA private key(code:001)\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(o,p);if(n.length!=9){throw\"malformed RSA private key(code:002)\"}q.key={};q.key.n=ASN1HEX.getHexOfV_AtObj(o,n[1]);q.key.e=ASN1HEX.getHexOfV_AtObj(o,n[2]);q.key.d=ASN1HEX.getHexOfV_AtObj(o,n[3]);q.key.p=ASN1HEX.getHexOfV_AtObj(o,n[4]);q.key.q=ASN1HEX.getHexOfV_AtObj(o,n[5]);q.key.dp=ASN1HEX.getHexOfV_AtObj(o,n[6]);q.key.dq=ASN1HEX.getHexOfV_AtObj(o,n[7]);q.key.co=ASN1HEX.getHexOfV_AtObj(o,n[8])},parsePrivateRawECKeyHexAtObj:function(o,q){var p=q.keyidx;if(o.substr(p,2)!=\"30\"){throw\"malformed ECC private key(code:001)\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(o,p);if(n.length!=3){throw\"malformed ECC private key(code:002)\"}if(o.substr(n[1],2)!=\"04\"){throw\"malformed ECC private key(code:003)\"}q.key=ASN1HEX.getHexOfV_AtObj(o,n[1])},parsePublicPKCS8Hex:function(q){var o={};o.algparam=null;var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=2){throw\"outer DERSequence shall have 2 elements: \"+p.length}var r=p[0];if(q.substr(r,2)!=\"30\"){throw\"malformed PKCS8 public key(code:001)\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(q,r);if(n.length!=2){throw\"malformed PKCS8 public key(code:002)\"}if(q.substr(n[0],2)!=\"06\"){throw\"malformed PKCS8 public key(code:003)\"}o.algoid=ASN1HEX.getHexOfV_AtObj(q,n[0]);if(q.substr(n[1],2)==\"06\"){o.algparam=ASN1HEX.getHexOfV_AtObj(q,n[1])}if(q.substr(p[1],2)!=\"03\"){throw\"malformed PKCS8 public key(code:004)\"}o.key=ASN1HEX.getHexOfV_AtObj(q,p[1]).substr(2);return o},getRSAKeyFromPublicPKCS8Hex:function(r){var q=ASN1HEX.getPosArrayOfChildren_AtObj(r,0);if(q.length!=2){throw\"outer DERSequence shall have 2 elements: \"+q.length}var p=ASN1HEX.getHexOfTLV_AtObj(r,q[0]);if(p!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmId is not rsaEncryption\"}if(r.substr(q[1],2)!=\"03\"){throw\"PKCS8 Public Key is not BITSTRING encapslated.\"}var t=ASN1HEX.getStartPosOfV_AtObj(r,q[1])+2;if(r.substr(t,2)!=\"30\"){throw\"PKCS8 Public Key is not SEQUENCE.\"}var n=ASN1HEX.getPosArrayOfChildren_AtObj(r,t);if(n.length!=2){throw\"inner DERSequence shall have 2 elements: \"+n.length}if(r.substr(n[0],2)!=\"02\"){throw\"N is not ASN.1 INTEGER\"}if(r.substr(n[1],2)!=\"02\"){throw\"E is not ASN.1 INTEGER\"}var u=ASN1HEX.getHexOfV_AtObj(r,n[0]);var s=ASN1HEX.getHexOfV_AtObj(r,n[1]);var o=new RSAKey();o.setPublic(u,s);return o},}}();\r\n/*! keyutil-1.0.4.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nvar KEYUTIL=function(){var d=function(p,r,q){return k(CryptoJS.AES,p,r,q)};var e=function(p,r,q){return k(CryptoJS.TripleDES,p,r,q)};var a=function(p,r,q){return k(CryptoJS.DES,p,r,q)};var k=function(s,x,u,q){var r=CryptoJS.enc.Hex.parse(x);var w=CryptoJS.enc.Hex.parse(u);var p=CryptoJS.enc.Hex.parse(q);var t={};t.key=w;t.iv=p;t.ciphertext=r;var v=s.decrypt(t,w,{iv:p});return CryptoJS.enc.Hex.stringify(v)};var l=function(p,r,q){return g(CryptoJS.AES,p,r,q)};var o=function(p,r,q){return g(CryptoJS.TripleDES,p,r,q)};var f=function(p,r,q){return g(CryptoJS.DES,p,r,q)};var g=function(t,y,v,q){var s=CryptoJS.enc.Hex.parse(y);var x=CryptoJS.enc.Hex.parse(v);var p=CryptoJS.enc.Hex.parse(q);var w=t.encrypt(s,x,{iv:p});var r=CryptoJS.enc.Hex.parse(w.toString());var u=CryptoJS.enc.Base64.stringify(r);return u};var i={\"AES-256-CBC\":{proc:d,eproc:l,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:d,eproc:l,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:d,eproc:l,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:e,eproc:o,keylen:24,ivlen:8},\"DES-CBC\":{proc:a,eproc:f,keylen:8,ivlen:8}};var c=function(p){return i[p][\"proc\"]};var m=function(p){var r=CryptoJS.lib.WordArray.random(p);var q=CryptoJS.enc.Hex.stringify(r);return q};var n=function(t){var u={};if(t.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"))){u.cipher=RegExp.$1;u.ivsalt=RegExp.$2}if(t.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"))){u.type=RegExp.$1}var r=-1;var v=0;if(t.indexOf(\"\\r\\n\\r\\n\")!=-1){r=t.indexOf(\"\\r\\n\\r\\n\");v=2}if(t.indexOf(\"\\n\\n\")!=-1){r=t.indexOf(\"\\n\\n\");v=1}var q=t.indexOf(\"-----END\");if(r!=-1&&q!=-1){var p=t.substring(r+v*2,q-v);p=p.replace(/\\s+/g,\"\");u.data=p}return u};var j=function(q,y,p){var v=p.substring(0,16);var t=CryptoJS.enc.Hex.parse(v);var r=CryptoJS.enc.Utf8.parse(y);var u=i[q][\"keylen\"]+i[q][\"ivlen\"];var x=\"\";var w=null;for(;;){var s=CryptoJS.algo.MD5.create();if(w!=null){s.update(w)}s.update(r);s.update(t);w=s.finalize();x=x+CryptoJS.enc.Hex.stringify(w);if(x.length>=u*2){break}}var z={};z.keyhex=x.substr(0,i[q][\"keylen\"]*2);z.ivhex=x.substr(i[q][\"keylen\"]*2,i[q][\"ivlen\"]*2);return z};var b=function(p,v,r,w){var s=CryptoJS.enc.Base64.parse(p);var q=CryptoJS.enc.Hex.stringify(s);var u=i[v][\"proc\"];var t=u(q,r,w);return t};var h=function(p,s,q,u){var r=i[s][\"eproc\"];var t=r(p,q,u);return t};return{version:\"1.0.0\",getHexFromPEM:function(q,u){var r=q;if(r.indexOf(\"BEGIN \"+u)==-1){throw\"can't find PEM header: \"+u}r=r.replace(\"-----BEGIN \"+u+\"-----\",\"\");r=r.replace(\"-----END \"+u+\"-----\",\"\");var t=r.replace(/\\s+/g,\"\");var p=b64tohex(t);return p},getDecryptedKeyHexByKeyIV:function(q,t,s,r){var p=c(t);return p(q,s,r)},parsePKCS5PEM:function(p){return n(p)},getKeyAndUnusedIvByPasscodeAndIvsalt:function(q,p,r){return j(q,p,r)},decryptKeyB64:function(p,r,q,s){return b(p,r,q,s)},getDecryptedKeyHex:function(y,x){var q=n(y);var t=q.type;var r=q.cipher;var p=q.ivsalt;var s=q.data;var w=j(r,x,p);var v=w.keyhex;var u=b(s,r,v,p);return u},getRSAKeyFromEncryptedPKCS5PEM:function(r,q){var s=this.getDecryptedKeyHex(r,q);var p=new RSAKey();p.readPrivateKeyFromASN1HexString(s);return p},getEncryptedPKCS5PEMFromPrvKeyHex:function(x,s,A,t,r){var p=\"\";if(typeof t==\"undefined\"||t==null){t=\"AES-256-CBC\"}if(typeof i[t]==\"undefined\"){throw\"KEYUTIL unsupported algorithm: \"+t}if(typeof r==\"undefined\"||r==null){var v=i[t][\"ivlen\"];var u=m(v);r=u.toUpperCase()}var z=j(t,A,r);var y=z.keyhex;var w=h(s,t,y,r);var q=w.replace(/(.{64})/g,\"$1\\r\\n\");var p=\"-----BEGIN \"+x+\" PRIVATE KEY-----\\r\\n\";p+=\"Proc-Type: 4,ENCRYPTED\\r\\n\";p+=\"DEK-Info: \"+t+\",\"+r+\"\\r\\n\";p+=\"\\r\\n\";p+=q;p+=\"\\r\\n-----END \"+x+\" PRIVATE KEY-----\\r\\n\";return p},getEncryptedPKCS5PEMFromRSAKey:function(D,E,r,t){var B=new KJUR.asn1.DERInteger({\"int\":0});var w=new KJUR.asn1.DERInteger({bigint:D.n});var A=new KJUR.asn1.DERInteger({\"int\":D.e});var C=new KJUR.asn1.DERInteger({bigint:D.d});var u=new KJUR.asn1.DERInteger({bigint:D.p});var s=new KJUR.asn1.DERInteger({bigint:D.q});var z=new KJUR.asn1.DERInteger({bigint:D.dmp1});var v=new KJUR.asn1.DERInteger({bigint:D.dmq1});var y=new KJUR.asn1.DERInteger({bigint:D.coeff});var F=new KJUR.asn1.DERSequence({array:[B,w,A,C,u,s,z,v,y]});var x=F.getEncodedHex();return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",x,E,r,t)},newEncryptedPKCS5PEM:function(p,q,t,u){if(typeof q==\"undefined\"||q==null){q=1024}if(typeof t==\"undefined\"||t==null){t=\"10001\"}var r=new RSAKey();r.generate(q,t);var s=null;if(typeof u==\"undefined\"||u==null){s=this.getEncryptedPKCS5PEMFromRSAKey(r,p)}else{s=this.getEncryptedPKCS5PEMFromRSAKey(r,p,u)}return s},getRSAKeyFromPlainPKCS8PEM:function(r){if(r.match(/ENCRYPTED/)){throw\"pem shall be not ENCRYPTED\"}var q=this.getHexFromPEM(r,\"PRIVATE KEY\");var p=this.getRSAKeyFromPlainPKCS8Hex(q);return p},getRSAKeyFromPlainPKCS8Hex:function(s){var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=3){throw\"outer DERSequence shall have 3 elements: \"+r.length}var q=ASN1HEX.getHexOfTLV_AtObj(s,r[1]);if(q!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmIdentifier is not rsaEnc: \"+q}var q=ASN1HEX.getHexOfTLV_AtObj(s,r[1]);var t=ASN1HEX.getHexOfTLV_AtObj(s,r[2]);var u=ASN1HEX.getHexOfV_AtObj(t,0);var p=new RSAKey();p.readPrivateKeyFromASN1HexString(u);return p},parseHexOfEncryptedPKCS8:function(w){var s={};var r=ASN1HEX.getPosArrayOfChildren_AtObj(w,0);if(r.length!=2){throw\"malformed format: SEQUENCE(0).items != 2: \"+r.length}s.ciphertext=ASN1HEX.getHexOfV_AtObj(w,r[1]);var y=ASN1HEX.getPosArrayOfChildren_AtObj(w,r[0]);if(y.length!=2){throw\"malformed format: SEQUENCE(0.0).items != 2: \"+y.length}if(ASN1HEX.getHexOfV_AtObj(w,y[0])!=\"2a864886f70d01050d\"){throw\"this only supports pkcs5PBES2\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(w,y[1]);if(y.length!=2){throw\"malformed format: SEQUENCE(0.0.1).items != 2: \"+p.length}var q=ASN1HEX.getPosArrayOfChildren_AtObj(w,p[1]);if(q.length!=2){throw\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+q.length}if(ASN1HEX.getHexOfV_AtObj(w,q[0])!=\"2a864886f70d0307\"){throw\"this only supports TripleDES\"}s.encryptionSchemeAlg=\"TripleDES\";s.encryptionSchemeIV=ASN1HEX.getHexOfV_AtObj(w,q[1]);var t=ASN1HEX.getPosArrayOfChildren_AtObj(w,p[0]);if(t.length!=2){throw\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+t.length}if(ASN1HEX.getHexOfV_AtObj(w,t[0])!=\"2a864886f70d01050c\"){throw\"this only supports pkcs5PBKDF2\"}var x=ASN1HEX.getPosArrayOfChildren_AtObj(w,t[1]);if(x.length<2){throw\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+x.length}s.pbkdf2Salt=ASN1HEX.getHexOfV_AtObj(w,x[0]);var u=ASN1HEX.getHexOfV_AtObj(w,x[1]);try{s.pbkdf2Iter=parseInt(u,16)}catch(v){throw\"malformed format pbkdf2Iter: \"+u}return s},getPBKDF2KeyHexFromParam:function(u,p){var t=CryptoJS.enc.Hex.parse(u.pbkdf2Salt);var q=u.pbkdf2Iter;var s=CryptoJS.PBKDF2(p,t,{keySize:192/32,iterations:q});var r=CryptoJS.enc.Hex.stringify(s);return r},getPlainPKCS8HexFromEncryptedPKCS8PEM:function(x,y){var r=this.getHexFromPEM(x,\"ENCRYPTED PRIVATE KEY\");var p=this.parseHexOfEncryptedPKCS8(r);var u=KEYUTIL.getPBKDF2KeyHexFromParam(p,y);var v={};v.ciphertext=CryptoJS.enc.Hex.parse(p.ciphertext);var t=CryptoJS.enc.Hex.parse(u);var s=CryptoJS.enc.Hex.parse(p.encryptionSchemeIV);var w=CryptoJS.TripleDES.decrypt(v,t,{iv:s});var q=CryptoJS.enc.Hex.stringify(w);return q},getRSAKeyFromEncryptedPKCS8PEM:function(s,r){var q=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(s,r);var p=this.getRSAKeyFromPlainPKCS8Hex(q);return p},getKeyFromEncryptedPKCS8PEM:function(s,q){var p=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(s,q);var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r},parsePlainPrivatePKCS8Hex:function(s){var q={};q.algparam=null;if(s.substr(0,2)!=\"30\"){throw\"malformed plain PKCS8 private key(code:001)\"}var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=3){throw\"malformed plain PKCS8 private key(code:002)\"}if(s.substr(r[1],2)!=\"30\"){throw\"malformed PKCS8 private key(code:003)\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(s,r[1]);if(p.length!=2){throw\"malformed PKCS8 private key(code:004)\"}if(s.substr(p[0],2)!=\"06\"){throw\"malformed PKCS8 private key(code:005)\"}q.algoid=ASN1HEX.getHexOfV_AtObj(s,p[0]);if(s.substr(p[1],2)==\"06\"){q.algparam=ASN1HEX.getHexOfV_AtObj(s,p[1])}if(s.substr(r[2],2)!=\"04\"){throw\"malformed PKCS8 private key(code:006)\"}q.keyidx=ASN1HEX.getStartPosOfV_AtObj(s,r[2]);return q},getKeyFromPlainPrivatePKCS8PEM:function(q){var p=this.getHexFromPEM(q,\"PRIVATE KEY\");var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r},getKeyFromPlainPrivatePKCS8Hex:function(p){var w=this.parsePlainPrivatePKCS8Hex(p);if(w.algoid==\"2a864886f70d010101\"){this.parsePrivateRawRSAKeyHexAtObj(p,w);var u=w.key;var z=new RSAKey();z.setPrivateEx(u.n,u.e,u.d,u.p,u.q,u.dp,u.dq,u.co);return z}else{if(w.algoid==\"2a8648ce3d0201\"){this.parsePrivateRawECKeyHexAtObj(p,w);if(KJUR.crypto.OID.oidhex2name[w.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+w.algparam}var v=KJUR.crypto.OID.oidhex2name[w.algparam];var z=new KJUR.crypto.ECDSA({curve:v});z.setPublicKeyHex(w.pubkey);z.setPrivateKeyHex(w.key);z.isPublic=false;return z}else{if(w.algoid==\"2a8648ce380401\"){var t=ASN1HEX.getVbyList(p,0,[1,1,0],\"02\");var s=ASN1HEX.getVbyList(p,0,[1,1,1],\"02\");var y=ASN1HEX.getVbyList(p,0,[1,1,2],\"02\");var B=ASN1HEX.getVbyList(p,0,[2,0],\"02\");var r=new BigInteger(t,16);var q=new BigInteger(s,16);var x=new BigInteger(y,16);var A=new BigInteger(B,16);var z=new KJUR.crypto.DSA();z.setPrivate(r,q,x,null,A);return z}else{throw\"unsupported private key algorithm\"}}}},getRSAKeyFromPublicPKCS8PEM:function(q){var r=this.getHexFromPEM(q,\"PUBLIC KEY\");var p=this.getRSAKeyFromPublicPKCS8Hex(r);return p},getKeyFromPublicPKCS8PEM:function(q){var r=this.getHexFromPEM(q,\"PUBLIC KEY\");var p=this.getKeyFromPublicPKCS8Hex(r);return p},getKeyFromPublicPKCS8Hex:function(q){var p=this.parsePublicPKCS8Hex(q);if(p.algoid==\"2a864886f70d010101\"){var u=this.parsePublicRawRSAKeyHex(p.key);var r=new RSAKey();r.setPublic(u.n,u.e);return r}else{if(p.algoid==\"2a8648ce3d0201\"){if(KJUR.crypto.OID.oidhex2name[p.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+p.algparam}var s=KJUR.crypto.OID.oidhex2name[p.algparam];var r=new KJUR.crypto.ECDSA({curve:s,pub:p.key});return r}else{if(p.algoid==\"2a8648ce380401\"){var t=p.algparam;var v=ASN1HEX.getHexOfV_AtObj(p.key,0);var r=new KJUR.crypto.DSA();r.setPublic(new BigInteger(t.p,16),new BigInteger(t.q,16),new BigInteger(t.g,16),new BigInteger(v,16));return r}else{throw\"unsupported public key algorithm\"}}}},parsePublicRawRSAKeyHex:function(r){var p={};if(r.substr(0,2)!=\"30\"){throw\"malformed RSA key(code:001)\"}var q=ASN1HEX.getPosArrayOfChildren_AtObj(r,0);if(q.length!=2){throw\"malformed RSA key(code:002)\"}if(r.substr(q[0],2)!=\"02\"){throw\"malformed RSA key(code:003)\"}p.n=ASN1HEX.getHexOfV_AtObj(r,q[0]);if(r.substr(q[1],2)!=\"02\"){throw\"malformed RSA key(code:004)\"}p.e=ASN1HEX.getHexOfV_AtObj(r,q[1]);return p},parsePrivateRawRSAKeyHexAtObj:function(q,s){var r=s.keyidx;if(q.substr(r,2)!=\"30\"){throw\"malformed RSA private key(code:001)\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,r);if(p.length!=9){throw\"malformed RSA private key(code:002)\"}s.key={};s.key.n=ASN1HEX.getHexOfV_AtObj(q,p[1]);s.key.e=ASN1HEX.getHexOfV_AtObj(q,p[2]);s.key.d=ASN1HEX.getHexOfV_AtObj(q,p[3]);s.key.p=ASN1HEX.getHexOfV_AtObj(q,p[4]);s.key.q=ASN1HEX.getHexOfV_AtObj(q,p[5]);s.key.dp=ASN1HEX.getHexOfV_AtObj(q,p[6]);s.key.dq=ASN1HEX.getHexOfV_AtObj(q,p[7]);s.key.co=ASN1HEX.getHexOfV_AtObj(q,p[8])},parsePrivateRawECKeyHexAtObj:function(p,t){var q=t.keyidx;var r=ASN1HEX.getVbyList(p,q,[1],\"04\");var s=ASN1HEX.getVbyList(p,q,[2,0],\"03\").substr(2);t.key=r;t.pubkey=s},parsePublicPKCS8Hex:function(s){var q={};q.algparam=null;var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=2){throw\"outer DERSequence shall have 2 elements: \"+r.length}var t=r[0];if(s.substr(t,2)!=\"30\"){throw\"malformed PKCS8 public key(code:001)\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(s,t);if(p.length!=2){throw\"malformed PKCS8 public key(code:002)\"}if(s.substr(p[0],2)!=\"06\"){throw\"malformed PKCS8 public key(code:003)\"}q.algoid=ASN1HEX.getHexOfV_AtObj(s,p[0]);if(s.substr(p[1],2)==\"06\"){q.algparam=ASN1HEX.getHexOfV_AtObj(s,p[1])}else{if(s.substr(p[1],2)==\"30\"){q.algparam={};q.algparam.p=ASN1HEX.getVbyList(s,p[1],[0],\"02\");q.algparam.q=ASN1HEX.getVbyList(s,p[1],[1],\"02\");q.algparam.g=ASN1HEX.getVbyList(s,p[1],[2],\"02\")}}if(s.substr(r[1],2)!=\"03\"){throw\"malformed PKCS8 public key(code:004)\"}q.key=ASN1HEX.getHexOfV_AtObj(s,r[1]).substr(2);return q},getRSAKeyFromPublicPKCS8Hex:function(t){var s=ASN1HEX.getPosArrayOfChildren_AtObj(t,0);if(s.length!=2){throw\"outer DERSequence shall have 2 elements: \"+s.length}var r=ASN1HEX.getHexOfTLV_AtObj(t,s[0]);if(r!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmId is not rsaEncryption\"}if(t.substr(s[1],2)!=\"03\"){throw\"PKCS8 Public Key is not BITSTRING encapslated.\"}var v=ASN1HEX.getStartPosOfV_AtObj(t,s[1])+2;if(t.substr(v,2)!=\"30\"){throw\"PKCS8 Public Key is not SEQUENCE.\"}var p=ASN1HEX.getPosArrayOfChildren_AtObj(t,v);if(p.length!=2){throw\"inner DERSequence shall have 2 elements: \"+p.length}if(t.substr(p[0],2)!=\"02\"){throw\"N is not ASN.1 INTEGER\"}if(t.substr(p[1],2)!=\"02\"){throw\"E is not ASN.1 INTEGER\"}var w=ASN1HEX.getHexOfV_AtObj(t,p[0]);var u=ASN1HEX.getHexOfV_AtObj(t,p[1]);var q=new RSAKey();q.setPublic(w,u);return q},}}();KEYUTIL.getKey=function(c,o,i){if(typeof RSAKey!=\"undefined\"&&c instanceof RSAKey){return c}if(typeof KJUR.crypto.ECDSA!=\"undefined\"&&c instanceof KJUR.crypto.ECDSA){return c}if(typeof KJUR.crypto.DSA!=\"undefined\"&&c instanceof KJUR.crypto.DSA){return c}if(c.xy!==undefined&&c.curve!==undefined){return new KJUR.crypto.ECDSA({prv:c.xy,curve:c.curve})}if(c.n!==undefined&&c.e!==undefined&&c.d!==undefined&&c.p!==undefined&&c.q!==undefined&&c.dp!==undefined&&c.dq!==undefined&&c.co!==undefined){var n=new RSAKey();n.setPrivateEx(c.n,c.e,c.d,c.p,c.q,c.dp,c.dq,c.co);return n}if(c.p!==undefined&&c.q!==undefined&&c.g!==undefined&&c.y!==undefined&&c.x!==undefined){var n=new KJUR.crypto.DSA();n.setPrivate(c.p,c.q,c.g,c.y,c.x);return n}if(c.d!==undefined&&c.curve!==undefined){return new KJUR.crypto.ECDSA({pub:c.d,curve:c.curve})}if(c.n!==undefined&&c.e){var n=new RSAKey();n.setPublic(c.n,c.e);return n}if(c.p!==undefined&&c.q!==undefined&&c.g!==undefined&&c.y!==undefined&&c.x===undefined){var n=new KJUR.crypto.DSA();n.setPublic(c.p,c.q,c.g,c.y);return n}if(c.indexOf(\"-END CERTIFICATE-\",0)!=-1||c.indexOf(\"-END X509 CERTIFICATE-\",0)!=-1||c.indexOf(\"-END TRUSTED CERTIFICATE-\",0)!=-1){return X509.getPublicKeyFromCertPEM(c)}if(i===\"pkcs8pub\"){return KEYUTIL.getKeyFromPublicPKCS8Hex(c)}if(c.indexOf(\"-END PUBLIC KEY-\")!=-1){return KEYUTIL.getKeyFromPublicPKCS8PEM(c)}if(i===\"pkcs5prv\"){var n=new RSAKey();n.readPrivateKeyFromASN1HexString(c);return n}if(i===\"pkcs5prv\"){var n=new RSAKey();n.readPrivateKeyFromASN1HexString(c);return n}if(c.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&c.indexOf(\"4,ENCRYPTED\")==-1){var n=new RSAKey();n.readPrivateKeyFromPEMString(c);return n}if(c.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&c.indexOf(\"4,ENCRYPTED\")==-1){var m=this.getHexFromPEM(c,\"DSA PRIVATE KEY\");var b=ASN1HEX.getVbyList(m,0,[1],\"02\");var a=ASN1HEX.getVbyList(m,0,[2],\"02\");var e=ASN1HEX.getVbyList(m,0,[3],\"02\");var k=ASN1HEX.getVbyList(m,0,[4],\"02\");var l=ASN1HEX.getVbyList(m,0,[5],\"02\");var n=new KJUR.crypto.DSA();n.setPrivate(new BigInteger(b,16),new BigInteger(a,16),new BigInteger(e,16),new BigInteger(k,16),new BigInteger(l,16));return n}if(c.indexOf(\"-END PRIVATE KEY-\")!=-1){return KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(c)}if(c.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&c.indexOf(\"4,ENCRYPTED\")!=-1){return KEYUTIL.getRSAKeyFromEncryptedPKCS5PEM(c,o)}if(c.indexOf(\"-END EC PRIVATE KEY-\")!=-1&&c.indexOf(\"4,ENCRYPTED\")!=-1){var m=KEYUTIL.getDecryptedKeyHex(c,o);var n=ASN1HEX.getVbyList(m,0,[1],\"04\");var j=ASN1HEX.getVbyList(m,0,[2,0],\"06\");var d=ASN1HEX.getVbyList(m,0,[3,0],\"03\").substr(2);var h=\"\";if(KJUR.crypto.OID.oidhex2name[j]!==undefined){h=KJUR.crypto.OID.oidhex2name[j]}else{throw\"undefined OID(hex) in KJUR.crypto.OID: \"+j}var f=new KJUR.crypto.ECDSA({name:h});f.setPublicKeyHex(d);f.setPrivateKeyHex(n);f.isPublic=false;return f}if(c.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&c.indexOf(\"4,ENCRYPTED\")!=-1){var m=KEYUTIL.getDecryptedKeyHex(c,o);var b=ASN1HEX.getVbyList(m,0,[1],\"02\");var a=ASN1HEX.getVbyList(m,0,[2],\"02\");var e=ASN1HEX.getVbyList(m,0,[3],\"02\");var k=ASN1HEX.getVbyList(m,0,[4],\"02\");var l=ASN1HEX.getVbyList(m,0,[5],\"02\");var n=new KJUR.crypto.DSA();n.setPrivate(new BigInteger(b,16),new BigInteger(a,16),new BigInteger(e,16),new BigInteger(k,16),new BigInteger(l,16));return n}if(c.indexOf(\"-END ENCRYPTED PRIVATE KEY-\")!=-1){return KEYUTIL.getKeyFromEncryptedPKCS8PEM(c,o)}throw\"not supported argument\"};KEYUTIL.generateKeypair=function(a,c){if(a==\"RSA\"){var b=c;var h=new RSAKey();h.generate(b,\"10001\");var f=new RSAKey();var e=h.n.toString(16);var i=h.e.toString(16);f.setPublic(e,i);var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k}else{if(a==\"EC\"){var d=c;var g=new KJUR.crypto.ECDSA({curve:d});var j=g.generateKeyPairHex();var h=new KJUR.crypto.ECDSA({curve:d});h.setPrivateKeyHex(j.ecprvhex);var f=new KJUR.crypto.ECDSA({curve:d});f.setPublicKeyHex(j.ecpubhex);var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k}else{throw\"unknown algorithm: \"+a}}};KEYUTIL.getPEM=function(a,r,o,g,j){var v=KJUR.asn1;var u=KJUR.crypto;function p(s){var w=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{\"int\":{bigint:s.n}},{\"int\":s.e},{\"int\":{bigint:s.d}},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.dmp1}},{\"int\":{bigint:s.dmq1}},{\"int\":{bigint:s.coeff}}]});return w}function q(w){var s=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":1},{octstr:{hex:w.prvKeyHex}},{tag:[\"a0\",true,{oid:{name:w.curveName}}]},{tag:[\"a1\",true,{bitstr:{hex:\"00\"+w.pubKeyHex}}]}]});return s}function n(s){var w=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.g}},{\"int\":{bigint:s.y}},{\"int\":{bigint:s.x}}]});return w}if(((typeof RSAKey!=\"undefined\"&&a instanceof RSAKey)||(typeof u.DSA!=\"undefined\"&&a instanceof u.DSA)||(typeof u.ECDSA!=\"undefined\"&&a instanceof u.ECDSA))&&a.isPublic==true&&(r===undefined||r==\"PKCS8PUB\")){var t=new KJUR.asn1.x509.SubjectPublicKeyInfo(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"PUBLIC KEY\")}if(r==\"PKCS1PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&(o===undefined||o==null)&&a.isPrivate==true){var t=p(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"RSA PRIVATE KEY\")}if(r==\"PKCS1PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&(o===undefined||o==null)&&a.isPrivate==true){var f=new KJUR.asn1.DERObjectIdentifier({name:a.curveName});var l=f.getEncodedHex();var e=q(a);var k=e.getEncodedHex();var i=\"\";i+=v.ASN1Util.getPEMStringFromHex(l,\"EC PARAMETERS\");i+=v.ASN1Util.getPEMStringFromHex(k,\"EC PRIVATE KEY\");return i}if(r==\"PKCS1PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&(o===undefined||o==null)&&a.isPrivate==true){var t=n(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"DSA PRIVATE KEY\")}if(r==\"PKCS5PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&(o!==undefined&&o!=null)&&a.isPrivate==true){var t=p(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",m,o,g)}if(r==\"PKCS5PRV\"&&typeof KJUR.crypto.ECDSA!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&(o!==undefined&&o!=null)&&a.isPrivate==true){var t=q(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"EC\",m,o,g)}if(r==\"PKCS5PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&(o!==undefined&&o!=null)&&a.isPrivate==true){var t=n(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\"}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"DSA\",m,o,g)}var h=function(w,s){var y=b(w,s);var x=new KJUR.asn1.ASN1Util.newObject({seq:[{seq:[{oid:{name:\"pkcs5PBES2\"}},{seq:[{seq:[{oid:{name:\"pkcs5PBKDF2\"}},{seq:[{octstr:{hex:y.pbkdf2Salt}},{\"int\":y.pbkdf2Iter}]}]},{seq:[{oid:{name:\"des-EDE3-CBC\"}},{octstr:{hex:y.encryptionSchemeIV}}]}]}]},{octstr:{hex:y.ciphertext}}]});return x.getEncodedHex()};var b=function(D,E){var x=100;var C=CryptoJS.lib.WordArray.random(8);var B=\"DES-EDE3-CBC\";var s=CryptoJS.lib.WordArray.random(8);var y=CryptoJS.PBKDF2(E,C,{keySize:192/32,iterations:x});var z=CryptoJS.enc.Hex.parse(D);var A=CryptoJS.TripleDES.encrypt(z,y,{iv:s})+\"\";var w={};w.ciphertext=A;w.pbkdf2Salt=CryptoJS.enc.Hex.stringify(C);w.pbkdf2Iter=x;w.encryptionSchemeAlg=B;w.encryptionSchemeIV=CryptoJS.enc.Hex.stringify(s);return w};if(r==\"PKCS8PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&a.isPrivate==true){var d=p(a);var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"rsaEncryption\"}},{\"null\":true}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\")}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\")}}if(r==\"PKCS8PRV\"&&typeof KJUR.crypto.ECDSA!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&a.isPrivate==true){var d=new KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":1},{octstr:{hex:a.prvKeyHex}},{tag:[\"a1\",true,{bitstr:{hex:\"00\"+a.pubKeyHex}}]}]});var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"ecPublicKey\"}},{oid:{name:a.curveName}}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\")}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\")}}if(r==\"PKCS8PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&a.isPrivate==true){var d=new KJUR.asn1.DERInteger({bigint:a.x});var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"dsa\"}},{seq:[{\"int\":{bigint:a.p}},{\"int\":{bigint:a.q}},{\"int\":{bigint:a.g}}]}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\")}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\")}}throw\"unsupported object nor format\"};\r\n/*! rsapem-1.1.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nfunction _rsapem_pemToBase64(b){var a=b;a=a.replace(\"-----BEGIN RSA PRIVATE KEY-----\",\"\");a=a.replace(\"-----END RSA PRIVATE KEY-----\",\"\");a=a.replace(/[ \\n]+/g,\"\");return a}function _rsapem_getPosArrayOfChildrenFromHex(d){var j=new Array();var k=ASN1HEX.getStartPosOfV_AtObj(d,0);var f=ASN1HEX.getPosOfNextSibling_AtObj(d,k);var h=ASN1HEX.getPosOfNextSibling_AtObj(d,f);var b=ASN1HEX.getPosOfNextSibling_AtObj(d,h);var l=ASN1HEX.getPosOfNextSibling_AtObj(d,b);var e=ASN1HEX.getPosOfNextSibling_AtObj(d,l);var g=ASN1HEX.getPosOfNextSibling_AtObj(d,e);var c=ASN1HEX.getPosOfNextSibling_AtObj(d,g);var i=ASN1HEX.getPosOfNextSibling_AtObj(d,c);j.push(k,f,h,b,l,e,g,c,i);return j}function _rsapem_getHexValueArrayOfChildrenFromHex(i){var o=_rsapem_getPosArrayOfChildrenFromHex(i);var r=ASN1HEX.getHexOfV_AtObj(i,o[0]);var f=ASN1HEX.getHexOfV_AtObj(i,o[1]);var j=ASN1HEX.getHexOfV_AtObj(i,o[2]);var k=ASN1HEX.getHexOfV_AtObj(i,o[3]);var c=ASN1HEX.getHexOfV_AtObj(i,o[4]);var b=ASN1HEX.getHexOfV_AtObj(i,o[5]);var h=ASN1HEX.getHexOfV_AtObj(i,o[6]);var g=ASN1HEX.getHexOfV_AtObj(i,o[7]);var l=ASN1HEX.getHexOfV_AtObj(i,o[8]);var m=new Array();m.push(r,f,j,k,c,b,h,g,l);return m}function _rsapem_readPrivateKeyFromASN1HexString(c){var b=_rsapem_getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8])}function _rsapem_readPrivateKeyFromPEMString(e){var c=_rsapem_pemToBase64(e);var d=b64tohex(c);var b=_rsapem_getHexValueArrayOfChildrenFromHex(d);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8])}RSAKey.prototype.readPrivateKeyFromPEMString=_rsapem_readPrivateKeyFromPEMString;RSAKey.prototype.readPrivateKeyFromASN1HexString=_rsapem_readPrivateKeyFromASN1HexString;\r\n/*! rsasign-1.2.7.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nvar _RE_HEXDECONLY=new RegExp(\"\");_RE_HEXDECONLY.compile(\"[^0-9a-f]\",\"gi\");function _rsasign_getHexPaddedDigestInfoForString(d,e,a){var b=function(f){return KJUR.crypto.Util.hashString(f,a)};var c=b(d);return KJUR.crypto.Util.getPaddedDigestInfoHex(c,a,e)}function _zeroPaddingOfSignature(e,d){var c=\"\";var a=d/4-e.length;for(var b=0;b<a;b++){c=c+\"0\"}return c+e}function _rsasign_signString(d,a){var b=function(e){return KJUR.crypto.Util.hashString(e,a)};var c=b(d);return this.signWithMessageHash(c,a)}function _rsasign_signWithMessageHash(e,c){var f=KJUR.crypto.Util.getPaddedDigestInfoHex(e,c,this.n.bitLength());var b=parseBigInt(f,16);var d=this.doPrivate(b);var a=d.toString(16);return _zeroPaddingOfSignature(a,this.n.bitLength())}function _rsasign_signStringWithSHA1(a){return _rsasign_signString.call(this,a,\"sha1\")}function _rsasign_signStringWithSHA256(a){return _rsasign_signString.call(this,a,\"sha256\")}function pss_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=hextorstr(e(rstrtohex(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]))));d+=1}return b}function _rsasign_signStringPSS(e,a,d){var c=function(f){return KJUR.crypto.Util.hashHex(f,a)};var b=c(rstrtohex(e));if(d===undefined){d=-1}return this.signWithMessageHashPSS(b,a,d)}function _rsasign_signWithMessageHashPSS(l,a,k){var b=hextorstr(l);var g=b.length;var m=this.n.bitLength()-1;var c=Math.ceil(m/8);var d;var o=function(i){return KJUR.crypto.Util.hashHex(i,a)};if(k===-1||k===undefined){k=g}else{if(k===-2){k=c-g-2}else{if(k<-2){throw\"invalid salt length\"}}}if(c<(g+k+2)){throw\"data too long\"}var f=\"\";if(k>0){f=new Array(k);new SecureRandom().nextBytes(f);f=String.fromCharCode.apply(String,f)}var n=hextorstr(o(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+b+f)));var j=[];for(d=0;d<c-k-g-2;d+=1){j[d]=0}var e=String.fromCharCode.apply(String,j)+\"\\x01\"+f;var h=pss_mgf1_str(n,e.length,o);var q=[];for(d=0;d<e.length;d+=1){q[d]=e.charCodeAt(d)^h.charCodeAt(d)}var p=(65280>>(8*c-m))&255;q[0]&=~p;for(d=0;d<g;d++){q.push(n.charCodeAt(d))}q.push(188);return _zeroPaddingOfSignature(this.doPrivate(new BigInteger(q)).toString(16),this.n.bitLength())}function _rsasign_getDecryptSignatureBI(a,d,c){var b=new RSAKey();b.setPublic(d,c);var e=b.doPublic(a);return e}function _rsasign_getHexDigestInfoFromSig(a,c,b){var e=_rsasign_getDecryptSignatureBI(a,c,b);var d=e.toString(16).replace(/^1f+00/,\"\");return d}function _rsasign_getAlgNameAndHashFromHexDisgestInfo(f){for(var e in KJUR.crypto.Util.DIGESTINFOHEAD){var d=KJUR.crypto.Util.DIGESTINFOHEAD[e];var b=d.length;if(f.substring(0,b)==d){var c=[e,f.substring(b)];return c}}return[]}function _rsasign_verifySignatureWithArgs(f,b,g,j){var e=_rsasign_getHexDigestInfoFromSig(b,g,j);var h=_rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if(h.length==0){return false}var d=h[0];var i=h[1];var a=function(k){return KJUR.crypto.Util.hashString(k,d)};var c=a(f);return(i==c)}function _rsasign_verifyHexSignatureForMessage(c,b){var d=parseBigInt(c,16);var a=_rsasign_verifySignatureWithArgs(b,d,this.n.toString(16),this.e.toString(16));return a}function _rsasign_verifyString(f,j){j=j.replace(_RE_HEXDECONLY,\"\");j=j.replace(/[ \\n]+/g,\"\");var b=parseBigInt(j,16);if(b.bitLength()>this.n.bitLength()){return 0}var i=this.doPublic(b);var e=i.toString(16).replace(/^1f+00/,\"\");var g=_rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if(g.length==0){return false}var d=g[0];var h=g[1];var a=function(k){return KJUR.crypto.Util.hashString(k,d)};var c=a(f);return(h==c)}function _rsasign_verifyWithMessageHash(e,a){a=a.replace(_RE_HEXDECONLY,\"\");a=a.replace(/[ \\n]+/g,\"\");var b=parseBigInt(a,16);if(b.bitLength()>this.n.bitLength()){return 0}var h=this.doPublic(b);var g=h.toString(16).replace(/^1f+00/,\"\");var c=_rsasign_getAlgNameAndHashFromHexDisgestInfo(g);if(c.length==0){return false}var d=c[0];var f=c[1];return(f==e)}function _rsasign_verifyStringPSS(c,b,a,f){var e=function(g){return KJUR.crypto.Util.hashHex(g,a)};var d=e(rstrtohex(c));if(f===undefined){f=-1}return this.verifyWithMessageHashPSS(d,b,a,f)}function _rsasign_verifyWithMessageHashPSS(f,s,l,c){var k=new BigInteger(s,16);if(k.bitLength()>this.n.bitLength()){return false}var r=function(i){return KJUR.crypto.Util.hashHex(i,l)};var j=hextorstr(f);var h=j.length;var g=this.n.bitLength()-1;var m=Math.ceil(g/8);var q;if(c===-1||c===undefined){c=h}else{if(c===-2){c=m-h-2}else{if(c<-2){throw\"invalid salt length\"}}}if(m<(h+c+2)){throw\"data too long\"}var a=this.doPublic(k).toByteArray();for(q=0;q<a.length;q+=1){a[q]&=255}while(a.length<m){a.unshift(0)}if(a[m-1]!==188){throw\"encoded message does not end in 0xbc\"}a=String.fromCharCode.apply(String,a);var d=a.substr(0,m-h-1);var e=a.substr(d.length,h);var p=(65280>>(8*m-g))&255;if((d.charCodeAt(0)&p)!==0){throw\"bits beyond keysize not zero\"}var n=pss_mgf1_str(e,d.length,r);var o=[];for(q=0;q<d.length;q+=1){o[q]=d.charCodeAt(q)^n.charCodeAt(q)}o[0]&=~p;var b=m-h-c-2;for(q=0;q<b;q+=1){if(o[q]!==0){throw\"leftmost octets not zero\"}}if(o[b]!==1){throw\"0x01 marker not found\"}return e===hextorstr(r(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+j+String.fromCharCode.apply(String,o.slice(-c)))))}RSAKey.prototype.signWithMessageHash=_rsasign_signWithMessageHash;RSAKey.prototype.signString=_rsasign_signString;RSAKey.prototype.signStringWithSHA1=_rsasign_signStringWithSHA1;RSAKey.prototype.signStringWithSHA256=_rsasign_signStringWithSHA256;RSAKey.prototype.sign=_rsasign_signString;RSAKey.prototype.signWithSHA1=_rsasign_signStringWithSHA1;RSAKey.prototype.signWithSHA256=_rsasign_signStringWithSHA256;RSAKey.prototype.signWithMessageHashPSS=_rsasign_signWithMessageHashPSS;RSAKey.prototype.signStringPSS=_rsasign_signStringPSS;RSAKey.prototype.signPSS=_rsasign_signStringPSS;RSAKey.SALT_LEN_HLEN=-1;RSAKey.SALT_LEN_MAX=-2;RSAKey.prototype.verifyWithMessageHash=_rsasign_verifyWithMessageHash;RSAKey.prototype.verifyString=_rsasign_verifyString;RSAKey.prototype.verifyHexSignatureForMessage=_rsasign_verifyHexSignatureForMessage;RSAKey.prototype.verify=_rsasign_verifyString;RSAKey.prototype.verifyHexSignatureForByteArrayMessage=_rsasign_verifyHexSignatureForMessage;RSAKey.prototype.verifyWithMessageHashPSS=_rsasign_verifyWithMessageHashPSS;RSAKey.prototype.verifyStringPSS=_rsasign_verifyStringPSS;RSAKey.prototype.verifyPSS=_rsasign_verifyStringPSS;RSAKey.SALT_LEN_RECOVER=-2;\r\n/*! x509-1.1.2.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license\r\n */\r\nfunction X509(){this.subjectPublicKeyRSA=null;this.subjectPublicKeyRSA_hN=null;this.subjectPublicKeyRSA_hE=null;this.hex=null;this.getSerialNumberHex=function(){return ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,1])};this.getIssuerHex=function(){return ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,3])};this.getIssuerString=function(){return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,3]))};this.getSubjectHex=function(){return ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,5])};this.getSubjectString=function(){return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,5]))};this.getNotBefore=function(){var a=ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,4,0]);a=a.replace(/(..)/g,\"%$1\");a=decodeURIComponent(a);return a};this.getNotAfter=function(){var a=ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,4,1]);a=a.replace(/(..)/g,\"%$1\");a=decodeURIComponent(a);return a};this.readCertPEM=function(c){var e=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(e);var d=new RSAKey();d.setPublic(b[0],b[1]);this.subjectPublicKeyRSA=d;this.subjectPublicKeyRSA_hN=b[0];this.subjectPublicKeyRSA_hE=b[1];this.hex=e};this.readCertPEMWithoutRSAInit=function(c){var d=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(d);this.subjectPublicKeyRSA.setPublic(b[0],b[1]);this.subjectPublicKeyRSA_hN=b[0];this.subjectPublicKeyRSA_hE=b[1];this.hex=d}}X509.pemToBase64=function(a){var b=a;b=b.replace(\"-----BEGIN CERTIFICATE-----\",\"\");b=b.replace(\"-----END CERTIFICATE-----\",\"\");b=b.replace(/[ \\n]+/g,\"\");return b};X509.pemToHex=function(a){var c=X509.pemToBase64(a);var b=b64tohex(c);return b};X509.getSubjectPublicKeyPosFromCertHex=function(f){var e=X509.getSubjectPublicKeyInfoPosFromCertHex(f);if(e==-1){return -1}var b=ASN1HEX.getPosArrayOfChildren_AtObj(f,e);if(b.length!=2){return -1}var d=b[1];if(f.substring(d,d+2)!=\"03\"){return -1}var c=ASN1HEX.getStartPosOfV_AtObj(f,d);if(f.substring(c,c+2)!=\"00\"){return -1}return c+2};X509.getSubjectPublicKeyInfoPosFromCertHex=function(d){var c=ASN1HEX.getStartPosOfV_AtObj(d,0);var b=ASN1HEX.getPosArrayOfChildren_AtObj(d,c);if(b.length<1){return -1}if(d.substring(b[0],b[0]+10)==\"a003020102\"){if(b.length<6){return -1}return b[6]}else{if(b.length<5){return -1}return b[5]}};X509.getPublicKeyHexArrayFromCertHex=function(f){var e=X509.getSubjectPublicKeyPosFromCertHex(f);var b=ASN1HEX.getPosArrayOfChildren_AtObj(f,e);if(b.length!=2){return[]}var d=ASN1HEX.getHexOfV_AtObj(f,b[0]);var c=ASN1HEX.getHexOfV_AtObj(f,b[1]);if(d!=null&&c!=null){return[d,c]}else{return[]}};X509.getHexTbsCertificateFromCert=function(b){var a=ASN1HEX.getStartPosOfV_AtObj(b,0);return a};X509.getPublicKeyHexArrayFromCertPEM=function(c){var d=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(d);return b};X509.hex2dn=function(e){var f=\"\";var c=ASN1HEX.getPosArrayOfChildren_AtObj(e,0);for(var d=0;d<c.length;d++){var b=ASN1HEX.getHexOfTLV_AtObj(e,c[d]);f=f+\"/\"+X509.hex2rdn(b)}return f};X509.hex2rdn=function(a){var f=ASN1HEX.getDecendantHexTLVByNthList(a,0,[0,0]);var e=ASN1HEX.getDecendantHexVByNthList(a,0,[0,1]);var c=\"\";try{c=X509.DN_ATTRHEX[f]}catch(b){c=f}e=e.replace(/(..)/g,\"%$1\");var d=decodeURIComponent(e);return c+\"=\"+d};X509.DN_ATTRHEX={\"0603550406\":\"C\",\"060355040a\":\"O\",\"060355040b\":\"OU\",\"0603550403\":\"CN\",\"0603550405\":\"SN\",\"0603550408\":\"ST\",\"0603550407\":\"L\",};X509.getPublicKeyFromCertPEM=function(f){var c=X509.getPublicKeyInfoPropOfCertPEM(f);if(c.algoid==\"2a864886f70d010101\"){var i=KEYUTIL.parsePublicRawRSAKeyHex(c.keyhex);var j=new RSAKey();j.setPublic(i.n,i.e);return j}else{if(c.algoid==\"2a8648ce3d0201\"){var e=KJUR.crypto.OID.oidhex2name[c.algparam];var j=new KJUR.crypto.ECDSA({curve:e,info:c.keyhex});j.setPublicKeyHex(c.keyhex);return j}else{if(c.algoid==\"2a8648ce380401\"){var b=ASN1HEX.getVbyList(c.algparam,0,[0],\"02\");var a=ASN1HEX.getVbyList(c.algparam,0,[1],\"02\");var d=ASN1HEX.getVbyList(c.algparam,0,[2],\"02\");var h=ASN1HEX.getHexOfV_AtObj(c.keyhex,0);h=h.substr(2);var j=new KJUR.crypto.DSA();j.setPublic(new BigInteger(b,16),new BigInteger(a,16),new BigInteger(d,16),new BigInteger(h,16));return j}else{throw\"unsupported key\"}}}};X509.getPublicKeyInfoPropOfCertPEM=function(e){var c={};c.algparam=null;var g=X509.pemToHex(e);var d=ASN1HEX.getPosArrayOfChildren_AtObj(g,0);if(d.length!=3){throw\"malformed X.509 certificate PEM (code:001)\"}if(g.substr(d[0],2)!=\"30\"){throw\"malformed X.509 certificate PEM (code:002)\"}var b=ASN1HEX.getPosArrayOfChildren_AtObj(g,d[0]);if(b.length<7){throw\"malformed X.509 certificate PEM (code:003)\"}var h=ASN1HEX.getPosArrayOfChildren_AtObj(g,b[6]);if(h.length!=2){throw\"malformed X.509 certificate PEM (code:004)\"}var f=ASN1HEX.getPosArrayOfChildren_AtObj(g,h[0]);if(f.length!=2){throw\"malformed X.509 certificate PEM (code:005)\"}c.algoid=ASN1HEX.getHexOfV_AtObj(g,f[0]);if(g.substr(f[1],2)==\"06\"){c.algparam=ASN1HEX.getHexOfV_AtObj(g,f[1])}else{if(g.substr(f[1],2)==\"30\"){c.algparam=ASN1HEX.getHexOfTLV_AtObj(g,f[1])}}if(g.substr(h[1],2)!=\"03\"){throw\"malformed X.509 certificate PEM (code:006)\"}var a=ASN1HEX.getHexOfV_AtObj(g,h[1]);c.keyhex=a.substr(2);return c};\ndefine(\"jsrsasign\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.KJUR;\n    };\n}(this)));\n","\n// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    // Turn off strict mode for this function so we can assign to global.Q\n    /* jshint strict: false */\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define('q',definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else {\n        Q = definition();\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n// engine that has a deployed base of browsers that support generators.\n// However, SM's generators use the Python-inspired semantics of\n// outdated ES6 drafts.  We would like to support ES6, but we'd also\n// like to make it possible to use generators in deployed browsers, so\n// we also support Python-style generators.  At some point we can remove\n// this block.\nvar hasES6Generators;\ntry {\n    /* jshint evil: true, nonew: false */\n    new Function(\"(function* (){ yield 1; })\");\n    hasES6Generators = true;\n} catch (e) {\n    hasES6Generators = false;\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (isPromise(value)) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become fulfilled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be fulfilled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return isObject(object) &&\n        typeof object.promiseDispatch === \"function\" &&\n        typeof object.inspect === \"function\";\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar unhandledReasonsDisplayed = false;\nvar trackUnhandledRejections = true;\nfunction displayUnhandledReasons() {\n    if (\n        !unhandledReasonsDisplayed &&\n        typeof window !== \"undefined\" &&\n        window.console\n    ) {\n        console.warn(\"[Q] Unhandled rejection reasons (should be empty):\",\n                     unhandledReasons);\n    }\n\n    unhandledReasonsDisplayed = true;\n}\n\nfunction logUnhandledReasons() {\n    for (var i = 0; i < unhandledReasons.length; i++) {\n        var reason = unhandledReasons[i];\n        console.warn(\"Unhandled rejection reason:\", reason);\n    }\n}\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n    unhandledReasonsDisplayed = false;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n\n        // Show unhandled rejection reasons if Node exits without handling an\n        // outstanding rejection.  (Note that Browserify presently produces a\n        // `process` global without the `EventEmitter` `on` method.)\n        if (typeof process !== \"undefined\" && process.on) {\n            process.on(\"exit\", logUnhandledReasons);\n        }\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n    displayUnhandledReasons();\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    if (typeof process !== \"undefined\" && process.on) {\n        process.removeListener(\"exit\", logUnhandledReasons);\n    }\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n            if (hasES6Generators) {\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return result.value;\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return exception.value;\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {String} custom error message (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, message) {\n    return Q(object).timeout(ms, message);\n};\n\nPromise.prototype.timeout = function (ms, message) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        deferred.reject(new Error(message || \"Timed out after \" + ms + \" ms\"));\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","\n/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * http://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.1';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define('lodash',[],function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n","\n;!function(exports, undefined) {\n\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    configure.call(this, conf);\n  }\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n          }\n        }\n        return listeners;\n      } else if(currentType === '**') {\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n        if(endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if(branch === '*' || branch === '**') {\n              if(tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if(branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n    }\n\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i+1);\n    }\n\n    xxTree = tree['**'];\n    if(xxTree) {\n      if(i < typeLength) {\n        if(xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for(branch in xxTree) {\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if(branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\n            } else if(branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n            }\n          }\n        }\n      } else if(xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for(var i = 0, len = type.length; i+1 < len; i++) {\n      if(type[i] === '**' && type[i+1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name) {\n\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        }\n        else if(typeof tree._listeners === 'function') {\n          tree._listeners = [tree._listeners, listener];\n        }\n        else if (isArray(tree._listeners)) {\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned) {\n\n            var m = defaultMaxListeners;\n\n            if (typeof this._events.maxListeners !== 'undefined') {\n              m = this._events.maxListeners;\n            }\n\n            if (m > 0 && tree._listeners.length > m) {\n\n              tree._listeners.warned = true;\n              console.error('(node) warning: possible EventEmitter memory ' +\n                            'leak detected. %d listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit.',\n                            tree._listeners.length);\n              console.trace();\n            }\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    this._events || init.call(this);\n    this._events.maxListeners = n;\n    if (!this._conf) this._conf = {};\n    this._conf.maxListeners = n;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn) {\n    this.many(event, 1, fn);\n    return this;\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this.on(event, listener);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function() {\n\n    this._events || init.call(this);\n\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) { return false; }\n    }\n\n    // Loop through the *_all* functions and invoke them.\n    if (this._all) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        this._all[i].apply(this, args);\n      }\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error') {\n\n      if (!this._all &&\n        !this._events.error &&\n        !(this.wildcard && this.listenerTree.error)) {\n\n        if (arguments[1] instanceof Error) {\n          throw arguments[1]; // Unhandled 'error' event\n        } else {\n          throw new Error(\"Uncaught, unspecified 'error' event.\");\n        }\n        return false;\n      }\n    }\n\n    var handler;\n\n    if(this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    }\n    else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      if (arguments.length === 1) {\n        handler.call(this);\n      }\n      else if (arguments.length > 1)\n        switch (arguments.length) {\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          // slower\n          default:\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            handler.apply(this, args);\n        }\n      return true;\n    }\n    else if (handler) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n      var listeners = handler.slice();\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        this.event = type;\n        listeners[i].apply(this, args);\n      }\n      return (listeners.length > 0) || this._all;\n    }\n    else {\n      return this._all;\n    }\n\n  };\n\n  EventEmitter.prototype.on = function(type, listener) {\n\n    if (typeof type === 'function') {\n      this.onAny(type);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    this.emit('newListener', type, listener);\n\n    if(this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    }\n    else if(typeof this._events[type] === 'function') {\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n    }\n    else if (isArray(this._events[type])) {\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n\n      // Check for listener leak\n      if (!this._events[type].warned) {\n\n        var m = defaultMaxListeners;\n\n        if (typeof this._events.maxListeners !== 'undefined') {\n          m = this._events.maxListeners;\n        }\n\n        if (m > 0 && this._events[type].length > m) {\n\n          this._events[type].warned = true;\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n          console.trace();\n        }\n      }\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n\n    if(!this._all) {\n      this._all = [];\n    }\n\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    // Add the function to the event listener collection.\n    this._all.push(fn);\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    }\n    else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    }\n    else {\n      if (!this._events[type]) return this;\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    if(this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define('eventemitter2',[],function() {\n      return EventEmitter;\n    });\n  } else {\n    exports.EventEmitter2 = EventEmitter;\n  }\n\n}(typeof process !== 'undefined' && typeof process.title !== 'undefined' && typeof exports !== 'undefined' ? exports : window);\n","\n/**\r\n *\r\n *\r\n */\r\ndefine('muskepeer-module',['lodash', 'eventemitter2'], function (_, EventEmitter2) {\r\n\r\n    var ee = new EventEmitter2({\r\n        wildcard: true, // should the event emitter use wildcards.\r\n        delimiter: ':', // the delimiter used to segment namespaces, defaults to `.`.\r\n        newListener: false, // if you want to emit the newListener event set to true.\r\n        maxListeners: 10 // the max number of listeners that can be assigned to an event, defaults to 10.\r\n    });\r\n\r\n    /**\r\n     * @class MuskepeerModule\r\n     * @constructor\r\n     */\r\n    function Module() {\r\n        var self = this;\r\n        this.extend = function (obj) {\r\n            return _.extend(self, obj);\r\n        };\r\n        this.emit = ee.emit;\r\n        this.on = ee.on;\r\n        this.off = ee.off;\r\n        this.onAny = ee.onAny;\r\n        this.offAny = ee.offAny;\r\n        this.removeAllListeners = ee.removeAllListeners;\r\n    }\r\n\r\n\r\n    return Module;\r\n\r\n});","\n//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n(function() {\n  var _global = this;\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng;\n\n  // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n  //\n  // Moderately fast, high quality\n  if (typeof(require) == 'function') {\n    try {\n      var _rb = require('crypto').randomBytes;\n      _rng = _rb && function() {return _rb(16);};\n    } catch(e) {}\n  }\n\n  if (!_rng && _global.crypto && crypto.getRandomValues) {\n    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n    //\n    // Moderately fast, high quality\n    var _rnds8 = new Uint8Array(16);\n    _rng = function whatwgRNG() {\n      crypto.getRandomValues(_rnds8);\n      return _rnds8;\n    };\n  }\n\n  if (!_rng) {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var  _rnds = new Array(16);\n    _rng = function() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n\n      return _rnds;\n    };\n  }\n\n  // Buffer class to use\n  var BufferClass = typeof(Buffer) == 'function' ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) == 'string') {\n      buf = options == 'binary' ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n\n  if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define('node-uuid',[],function() {return uuid;});\n  } else if (typeof(module) != 'undefined' && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else {\n    // Publish as global (in browsers)\n    var _previousRoot = _global.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _global.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _global.uuid = uuid;\n  }\n}).call(this);\n","\n/**\r\n * Module to generate and test UUIDs\r\n *\r\n * @module Uuid\r\n * @class Uuid\r\n */\r\n\r\ndefine('uuid',['node-uuid'], function (uuid) {\r\n\r\n    var format = new RegExp(/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i);\r\n\r\n    return {\r\n        /**\r\n         * Generates an universally unique identifier\r\n         *\r\n         * @method generate\r\n         * @return {String} An Universally unique identifier v4\r\n         * @see http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n         */\r\n        generate: function () {\r\n            return  uuid.v4();\r\n        },\r\n\r\n        /**\r\n         * Test if a uuid is valid\r\n         *\r\n         * @method isValid\r\n         * @param uuid\r\n         * @returns {boolean}\r\n         */\r\n        isValid: function (uuid) {\r\n            return format.test(uuid);\r\n        }\r\n    };\r\n});","\n\r\n(function(root, factory) {\r\n    if(typeof exports === 'object') {\r\n        module.exports = factory(require, exports, module);\r\n    }\r\n    else if(typeof define === 'function' && define.amd) {\r\n        define('mixing',['require', 'exports', 'module'], factory);\r\n    }\r\n    else {\r\n        var req = function(id) {return root[id];},\r\n            exp = root,\r\n            mod = {exports: exp};\r\n        root.mixing = factory(req, exp, mod);\r\n    }\r\n}(this, function(require, exports, module) {\r\n/**\r\n * @module mixing \r\n */\r\n\r\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\n\r\nif (! Array.isArray) {\r\n    Array.isArray = function(obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Copy/add all fields and functions from source objects into the target object.\r\n * As a result the target object may be modified.\r\n *\r\n * @param {Object} destination\r\n *      The target object into which fields and functions will be copied.\r\n * @param {Array | Object} source\r\n *      Array of source objects or just one object whose contents will be copied.\r\n * @param {Object} [settings]\r\n *      Operation settings. Fields are names of settings, their values are the corresponding values of settings.\r\n *      The following settings are being supported.\r\n *      <table>\r\n *          <tr>\r\n *              <th>Name</th><th>Type</th><th>Default value</th><th>Description</th>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>copyFunc</code></td>\r\n *              <td><code>Boolean</code></td>\r\n *              <td><code>true</code></td>\r\n *              <td>Should functions be copied?</td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>funcToProto</code></td>\r\n *              <td><code>Boolean</code></td>\r\n *              <td><code>false</code></td>\r\n *              <td>\r\n *                  Should functions be copied into <code>prototype</code> of the target object's <code>constructor</code>\r\n *                  (i.e. into <code>destination.constructor.prototype</code>)?\r\n *                  <br>\r\n *                  If <code>false</code> then functions will be copied directly into the target object.\r\n *              </td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>overwrite</code></td>\r\n *              <td><code>Boolean</code></td>\r\n *              <td><code>false</code></td>\r\n *              <td>Should a field/function be overwritten when it exists in the target object?</td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>recursive</code></td>\r\n *              <td><code>Boolean</code></td>\r\n *              <td><code>false</code></td>\r\n *              <td>\r\n *                  Should this function be called recursively when field's value of the target and source object is an object?\r\n *                  <br>\r\n *                  If <code>true</code> then object fields from the target and source objects will be mixed by using this function\r\n *                  with the same settings.\r\n *                  <br>\r\n *                  This option has no dependency with <code>overwrite</code> setting and has priority over it.\r\n *              </td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>oneSource</code></td>\r\n *              <td><code>Boolean</code></td>\r\n *              <td><code>false</code></td>\r\n *              <td>\r\n *                  Indicates that array that is passed as <code>source</code> parameter should be interpreted\r\n *                  directly as copied object instead of list of source objects.\r\n *              </td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>except</code></td>\r\n *              <td><code>Array | Object | String</code></td>\r\n *              <td><code>\"\"</code> (empty string)</td>\r\n *              <td>\r\n *                  Array, object (the preferred variant) or string that defines names of fields/functions that shouldn't be copied.\r\n *                  <br>\r\n *                  If an object is passed then his fields determine non-copied elements.\r\n *                  If a string is passed then it is name of the only non-copied field.\r\n *              </td>\r\n *          </tr>\r\n *          <tr>\r\n *              <td><code>otherName</code></td>\r\n *              <td><code>Object</code></td>\r\n *              <td><code>null</code></td>\r\n *              <td>\r\n *                  Defines \"renaming table\" for copied elements.\r\n *                  <br>\r\n *                  Fields of the table are names from a source object, values are the corresponding names in the target object.\r\n *                  <br>\r\n *                  For example, the call\r\n *                  <br>\r\n *                  <code>\r\n *                  mixing({}, {field: 1, func: \"no-func\"}, {otherName: {\"field\": \"prop\", \"func\": \"method\"}})\r\n *                  </code>\r\n *                  <br>\r\n *                  will return the following object\r\n *                  <br>\r\n *                  <code>{prop: 1, method: \"no-func\"}</code>\r\n *              </td>\r\n *          </tr>\r\n *      </table>\r\n * @return {Object}\r\n *      Modified target object.\r\n * @alias module:mixing\r\n */\r\nfunction mixing(destination, source, settings) {\r\n    /*jshint laxbreak:true*/\r\n    if (typeof source === \"object\" && source !== null) {\r\n        // Prepare parameters\r\n        if (typeof settings !== \"object\" || settings === null) {\r\n            settings = {};\r\n        }\r\n        if (! Array.isArray(source) || settings.oneSource) {\r\n            source = [source];\r\n        }\r\n        // Prepare settings\r\n        var bCopyFunc = (\"copyFunc\" in settings ? settings.copyFunc : true),\r\n            bFuncToProto = (\"funcToProto\" in settings ? settings.funcToProto : false),\r\n            bOverwrite = (\"overwrite\" in settings ? settings.overwrite : false),\r\n            bRecursive = (\"recursive\" in settings ? settings.recursive : false),\r\n            otherNameMap = (\"otherName\" in settings ? settings.otherName : null),\r\n            exceptList = settings.except,\r\n            bFuncProp, exceptions, nI, nL, obj, propName, propValue, sType, value;\r\n        if (exceptList) {\r\n            if (Array.isArray(exceptList)) {\r\n                if (exceptList.length > 0) {\r\n                    exceptions = {};\r\n                    nI = exceptList.length;\r\n                    do {\r\n                        exceptions[ exceptList[--nI] ] = null;\r\n                    } while(nI);\r\n                }\r\n            }\r\n            else {\r\n                sType = typeof exceptList;\r\n                if (sType === \"string\") {\r\n                    exceptions = {};\r\n                    exceptions[exceptList] = null;\r\n                }\r\n                else if (sType === \"object\") {\r\n                    exceptions = exceptList;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Copy fields and functions according to settings\r\n        for (nI = 0, nL = source.length; nI < nL; nI++) {\r\n            obj = source[nI];\r\n            for (propName in obj) {\r\n                if (! exceptions || ! (propName in exceptions)) {\r\n                    propValue = obj[propName];\r\n                    if (otherNameMap && (propName in otherNameMap)) {\r\n                        propName = otherNameMap[propName];\r\n                    }\r\n                    sType = typeof propValue;\r\n                    // If recursive mode and field's value is an object\r\n                    if (bRecursive && propValue && sType === \"object\" && (value = destination[propName]) && typeof value === \"object\") {\r\n                        mixing(value, propValue, settings);\r\n                    }\r\n                    else {\r\n                        bFuncProp = (sType === \"function\");\r\n                        if ((bOverwrite || ! (propName in destination))\r\n                                && (! bFuncProp || bCopyFunc)) {\r\n                            if (bFuncProp && bFuncToProto) {\r\n                                destination.constructor.prototype[propName] = propValue;\r\n                            }\r\n                            else {\r\n                                destination[propName] = propValue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return destination;\r\n}\r\n\r\n/**\r\n * Copy/add all fields and functions from source objects into <code>this</code> object.\r\n * As a result <code>this</code> object may be modified.\r\n * <br>\r\n * This function is a \"wrap\" for the following code:\r\n * <code><pre>\r\n * var mixing = require(\"mixing\");\r\n * mixing(this, source, settings);\r\n * </pre></code>\r\n * It can be transferred to an object to use as a method.\r\n * \r\n * @param {Array | Object} source\r\n *      Array of source objects or just one object whose contents will be copied.\r\n * @param {Object} [settings]\r\n *      Operation settings. See {@link module:mixing} for details.\r\n * @return {Object}\r\n *      Modified <code>this</code> object.\r\n */\r\nmixing.mix = function(source, settings) {\r\n    return mixing(this, source, settings);\r\n};\r\n\r\nmodule.exports = mixing;\r\n\r\n    return mixing;\r\n}));\r\n","\n/**\r\n * Represents the current project\r\n *\r\n * @module Project\r\n * @class Project\r\n */\r\n\r\ndefine('project',['q', 'lodash', 'mixing'], function (Q, _, mixing) {\r\n\r\n    /**\r\n     * Defaults project-settings\r\n     *\r\n     * @private\r\n     * @property defaults\r\n     * @type {Object}\r\n     *\r\n     * */\r\n    var defaults = {\r\n\r\n        \"active\": true,\r\n\r\n        \"computation\": {\r\n\r\n            \"offlineAllowed\": true,\r\n            \"testIntervalTime\": 10000,\r\n\r\n            \"workers\": {\r\n                \"enabled\": false,\r\n                \"multipleAllowed\": true\r\n            },\r\n\r\n            \"factories\": {\r\n                \"enabled\": false,\r\n                \"multipleAllowed\": true\r\n            },\r\n\r\n            \"results\": {\r\n                \"groupSize\": 1,\r\n                \"validation\": {\r\n                    \"enabled\": false,\r\n                    \"iterations\": 1\r\n                },\r\n                \"expected\": -1,\r\n                \"testIntervalTime\": 5000\r\n            },\r\n\r\n            \"jobs\": {\r\n                \"lock\": true,\r\n                \"maxLockTime\": 3600000,\r\n                \"groupSize\": 1,\r\n                \"expected\": -1,\r\n                \"testIntervalTime\": 5000\r\n            }\r\n        },\r\n\r\n        \"network\": {\r\n\r\n            \"broadcast\": {\r\n                \"results\": {\r\n                    \"enabled\": true,\r\n                    \"groupSize\": 1\r\n                },\r\n                \"jobs\": {\r\n                    \"enabled\": true,\r\n                    \"groupSize\": 1\r\n                },\r\n                \"files\": {\r\n                    \"enabled\": false,\r\n                    \"groupSize\": 1\r\n                },\r\n                \"peers\": {\r\n                    \"enabled\": true,\r\n                    \"groupSize\": 1\r\n                },\r\n                \"nodes\": {\r\n                    \"enabled\": true,\r\n                    \"groupSize\": 1\r\n                }\r\n            },\r\n\r\n            \"synchronization\": {\r\n                \"results\": {\r\n                    \"enabled\": true,\r\n                    \"interval\": 3600000,\r\n                    \"groupSize\": 15\r\n                },\r\n                \"jobs\": {\r\n                    \"enabled\": true,\r\n                    \"interval\": 3600000,\r\n                    \"groupSize\": 15\r\n                },\r\n                \"files\": {\r\n                    \"enabled\": false,\r\n                    \"interval\": 3600000,\r\n                    \"groupSize\": 1\r\n                },\r\n                \"peers\": {\r\n                    \"enabled\": true,\r\n                    \"interval\": 3600000,\r\n                    \"groupSize\": 15\r\n                },\r\n                \"nodes\": {\r\n                    \"enabled\": true,\r\n                    \"interval\": 3600000,\r\n                    \"groupSize\": 15\r\n                }\r\n            },\r\n\r\n            \"useGeoLocation\": true,\r\n\r\n            \"services\": []\r\n        },\r\n\r\n        \"files\": []\r\n    };\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @method isValidUrl\r\n     * @param url\r\n     * @returns {Boolean}\r\n     */\r\n    function isValidUrl(url) {\r\n        // I think that's sufficient currently\r\n        return new RegExp(/http(s)?/gi).test(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @method downloadJSON\r\n     * @param url {String}\r\n     * @return {Promise}\r\n     */\r\n    function downloadJSON(url) {\r\n        var deferred = Q.defer();\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.timeout = 10000;\r\n\r\n\r\n        xhr.addEventListener('load', function (e) {\r\n            if (xhr.status === 200) {\r\n                deferred.resolve(e.target.response);\r\n            } else {\r\n                deferred.reject('Error downloading project-file');\r\n            }\r\n        }, false);\r\n\r\n\r\n        xhr.addEventListener('timeout', function (e) {\r\n            deferred.reject('Timeout downloading project-file');\r\n        }, false);\r\n\r\n\r\n        xhr.send();\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Combines passed project settings with defaults\r\n     *\r\n     * @private\r\n     * @method combineWithDefaults\r\n     * @param {Object} project\r\n     * @return {Object}\r\n     */\r\n    function combineWithDefaults(project) {\r\n        return mixing(project, defaults, {\r\n            overwrite: false,\r\n            recursive: true\r\n        });\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Create project from object or url\r\n         *\r\n         * @method create\r\n         * @param {Object|String} config Object or url of json-file\r\n         * @return {Promise}\r\n         */\r\n        create: function (config) {\r\n\r\n            var self = this,\r\n                deferred = Q.defer();\r\n\r\n            if (_.isObject(config)) {\r\n                _.extend(this, combineWithDefaults(config));\r\n                deferred.resolve();\r\n            }\r\n            else if (_.isString(config) && isValidUrl(config)) {\r\n\r\n                logger.log('Project', 'Downloading settings from', config);\r\n\r\n                downloadJSON(config)\r\n                    .then(function (config) {\r\n                        _.extend(self, combineWithDefaults(config));\r\n                        deferred.resolve();\r\n                    })\r\n            }\r\n            else {\r\n                logger.error('Project', 'Configuration neither object nor valid url');\r\n            }\r\n\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    }\r\n});","\n/*global window:false, self:false, define:false, module:false */\n\n/**\n * @license IDBWrapper - A cross-browser wrapper for IndexedDB\n * Copyright (c) 2011 - 2013 Jens Arps\n * http://jensarps.de/\n *\n * Licensed under the MIT (X11) license\n */\n\n(function (name, definition, global) {\n  if (typeof define === 'function') {\n    define('idbwrapper',definition);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = definition();\n  } else {\n    global[name] = definition();\n  }\n})('IDBStore', function () {\n\n  'use strict';\n\n  var defaultErrorHandler = function (error) {\n    throw error;\n  };\n\n  var defaults = {\n    storeName: 'Store',\n    storePrefix: 'IDBWrapper-',\n    dbVersion: 1,\n    keyPath: 'id',\n    autoIncrement: true,\n    onStoreReady: function () {\n    },\n    onError: defaultErrorHandler,\n    indexes: []\n  };\n\n  /**\n   *\n   * The IDBStore constructor\n   *\n   * @constructor\n   * @name IDBStore\n   * @version 1.4.1\n   *\n   * @param {Object} [kwArgs] An options object used to configure the store and\n   *  set callbacks\n   * @param {String} [kwArgs.storeName='Store'] The name of the store\n   * @param {String} [kwArgs.storePrefix='IDBWrapper-'] A prefix that is\n   *  internally used to construct the name of the database, which will be\n   *  kwArgs.storePrefix + kwArgs.storeName\n   * @param {Number} [kwArgs.dbVersion=1] The version of the store\n   * @param {String} [kwArgs.keyPath='id'] The key path to use. If you want to\n   *  setup IDBWrapper to work with out-of-line keys, you need to set this to\n   *  `null`\n   * @param {Boolean} [kwArgs.autoIncrement=true] If set to true, IDBStore will\n   *  automatically make sure a unique keyPath value is present on each object\n   *  that is stored.\n   * @param {Function} [kwArgs.onStoreReady] A callback to be called when the\n   *  store is ready to be used.\n   * @param {Function} [kwArgs.onError=throw] A callback to be called when an\n   *  error occurred during instantiation of the store.\n   * @param {Array} [kwArgs.indexes=[]] An array of indexData objects\n   *  defining the indexes to use with the store. For every index to be used\n   *  one indexData object needs to be passed in the array.\n   *  An indexData object is defined as follows:\n   * @param {Object} [kwArgs.indexes.indexData] An object defining the index to\n   *  use\n   * @param {String} kwArgs.indexes.indexData.name The name of the index\n   * @param {String} [kwArgs.indexes.indexData.keyPath] The key path of the index\n   * @param {Boolean} [kwArgs.indexes.indexData.unique] Whether the index is unique\n   * @param {Boolean} [kwArgs.indexes.indexData.multiEntry] Whether the index is multi entry\n   * @param {Function} [onStoreReady] A callback to be called when the store\n   * is ready to be used.\n   * @example\n      // create a store for customers with an additional index over the\n      // `lastname` property.\n      var myCustomerStore = new IDBStore({\n        dbVersion: 1,\n        storeName: 'customer-index',\n        keyPath: 'customerid',\n        autoIncrement: true,\n        onStoreReady: populateTable,\n        indexes: [\n          { name: 'lastname', keyPath: 'lastname', unique: false, multiEntry: false }\n        ]\n      });\n   * @example\n      // create a generic store\n      var myCustomerStore = new IDBStore({\n        storeName: 'my-data-store',\n        onStoreReady: function(){\n          // start working with the store.\n        }\n      });\n   */\n  var IDBStore = function (kwArgs, onStoreReady) {\n\n    if (typeof onStoreReady == 'undefined' && typeof kwArgs == 'function') {\n      onStoreReady = kwArgs;\n    }\n    if (Object.prototype.toString.call(kwArgs) != '[object Object]') {\n      kwArgs = {};\n    }\n\n    for (var key in defaults) {\n      this[key] = typeof kwArgs[key] != 'undefined' ? kwArgs[key] : defaults[key];\n    }\n\n    this.dbName = this.storePrefix + this.storeName;\n    this.dbVersion = parseInt(this.dbVersion, 10) || 1;\n\n    onStoreReady && (this.onStoreReady = onStoreReady);\n\n    var env = typeof window == 'object' ? window : self;\n    this.idb = env.indexedDB || env.webkitIndexedDB || env.mozIndexedDB;\n    this.keyRange = env.IDBKeyRange || env.webkitIDBKeyRange || env.mozIDBKeyRange;\n\n    this.features = {\n      hasAutoIncrement: !env.mozIndexedDB\n    };\n\n    this.consts = {\n      'READ_ONLY':         'readonly',\n      'READ_WRITE':        'readwrite',\n      'VERSION_CHANGE':    'versionchange',\n      'NEXT':              'next',\n      'NEXT_NO_DUPLICATE': 'nextunique',\n      'PREV':              'prev',\n      'PREV_NO_DUPLICATE': 'prevunique'\n    };\n\n    this.openDB();\n  };\n\n  IDBStore.prototype = /** @lends IDBStore */ {\n\n    /**\n     * A pointer to the IDBStore ctor\n     *\n     * @type IDBStore\n     */\n    constructor: IDBStore,\n\n    /**\n     * The version of IDBStore\n     *\n     * @type String\n     */\n    version: '1.4.1',\n\n    /**\n     * A reference to the IndexedDB object\n     *\n     * @type Object\n     */\n    db: null,\n\n    /**\n     * The full name of the IndexedDB used by IDBStore, composed of\n     * this.storePrefix + this.storeName\n     *\n     * @type String\n     */\n    dbName: null,\n\n    /**\n     * The version of the IndexedDB used by IDBStore\n     *\n     * @type Number\n     */\n    dbVersion: null,\n\n    /**\n     * A reference to the objectStore used by IDBStore\n     *\n     * @type Object\n     */\n    store: null,\n\n    /**\n     * The store name\n     *\n     * @type String\n     */\n    storeName: null,\n\n    /**\n     * The key path\n     *\n     * @type String\n     */\n    keyPath: null,\n\n    /**\n     * Whether IDBStore uses autoIncrement\n     *\n     * @type Boolean\n     */\n    autoIncrement: null,\n\n    /**\n     * The indexes used by IDBStore\n     *\n     * @type Array\n     */\n    indexes: null,\n\n    /**\n     * A hashmap of features of the used IDB implementation\n     *\n     * @type Object\n     * @proprty {Boolean} autoIncrement If the implementation supports\n     *  native auto increment\n     */\n    features: null,\n\n    /**\n     * The callback to be called when the store is ready to be used\n     *\n     * @type Function\n     */\n    onStoreReady: null,\n\n    /**\n     * The callback to be called if an error occurred during instantiation\n     * of the store\n     *\n     * @type Function\n     */\n    onError: null,\n\n    /**\n     * The internal insertID counter\n     *\n     * @type Number\n     * @private\n     */\n    _insertIdCount: 0,\n\n    /**\n     * Opens an IndexedDB; called by the constructor.\n     *\n     * Will check if versions match and compare provided index configuration\n     * with existing ones, and update indexes if necessary.\n     *\n     * Will call this.onStoreReady() if everything went well and the store\n     * is ready to use, and this.onError() is something went wrong.\n     *\n     * @private\n     *\n     */\n    openDB: function () {\n\n      var openRequest = this.idb.open(this.dbName, this.dbVersion);\n      var preventSuccessCallback = false;\n\n      openRequest.onerror = function (error) {\n\n        var gotVersionErr = false;\n        if ('error' in error.target) {\n          gotVersionErr = error.target.error.name == 'VersionError';\n        } else if ('errorCode' in error.target) {\n          gotVersionErr = error.target.errorCode == 12;\n        }\n\n        if (gotVersionErr) {\n          this.onError(new Error('The version number provided is lower than the existing one.'));\n        } else {\n          this.onError(error);\n        }\n      }.bind(this);\n\n      openRequest.onsuccess = function (event) {\n\n        if (preventSuccessCallback) {\n          return;\n        }\n\n        if(this.db){\n          this.onStoreReady();\n          return;\n        }\n\n        this.db = event.target.result;\n\n        if(typeof this.db.version == 'string'){\n          this.onError(new Error('The IndexedDB implementation in this browser is outdated. Please upgrade your browser.'));\n          return;\n        }\n\n        if(!this.db.objectStoreNames.contains(this.storeName)){\n          // We should never ever get here.\n          // Lets notify the user anyway.\n          this.onError(new Error('Something is wrong with the IndexedDB implementation in this browser. Please upgrade your browser.'));\n          return;\n        }\n\n        var emptyTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n        this.store = emptyTransaction.objectStore(this.storeName);\n\n        // check indexes\n        var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n        this.indexes.forEach(function(indexData){\n          var indexName = indexData.name;\n\n          if(!indexName){\n            preventSuccessCallback = true;\n            this.onError(new Error('Cannot create index: No index name given.'));\n            return;\n          }\n\n          this.normalizeIndexData(indexData);\n\n          if(this.hasIndex(indexName)){\n            // check if it complies\n            var actualIndex = this.store.index(indexName);\n            var complies = this.indexComplies(actualIndex, indexData);\n            if(!complies){\n              preventSuccessCallback = true;\n              this.onError(new Error('Cannot modify index \"' + indexName + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n            }\n\n            existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n          } else {\n            preventSuccessCallback = true;\n            this.onError(new Error('Cannot create new index \"' + indexName + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n          }\n\n        }, this);\n\n        if (existingIndexes.length) {\n          preventSuccessCallback = true;\n          this.onError(new Error('Cannot delete index(es) \"' + existingIndexes.toString() + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n        }\n\n        preventSuccessCallback || this.onStoreReady();\n      }.bind(this);\n\n      openRequest.onupgradeneeded = function(/* IDBVersionChangeEvent */ event){\n\n        this.db = event.target.result;\n\n        if(this.db.objectStoreNames.contains(this.storeName)){\n          this.store = event.target.transaction.objectStore(this.storeName);\n        } else {\n          var optionalParameters = { autoIncrement: this.autoIncrement };\n          if (this.keyPath !== null) {\n            optionalParameters.keyPath = this.keyPath;\n          }\n          this.store = this.db.createObjectStore(this.storeName, optionalParameters);\n        }\n\n        var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n        this.indexes.forEach(function(indexData){\n          var indexName = indexData.name;\n\n          if(!indexName){\n            preventSuccessCallback = true;\n            this.onError(new Error('Cannot create index: No index name given.'));\n          }\n\n          this.normalizeIndexData(indexData);\n\n          if(this.hasIndex(indexName)){\n            // check if it complies\n            var actualIndex = this.store.index(indexName);\n            var complies = this.indexComplies(actualIndex, indexData);\n            if(!complies){\n              // index differs, need to delete and re-create\n              this.store.deleteIndex(indexName);\n              this.store.createIndex(indexName, indexData.keyPath, { unique: indexData.unique, multiEntry: indexData.multiEntry });\n            }\n\n            existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n          } else {\n            this.store.createIndex(indexName, indexData.keyPath, { unique: indexData.unique, multiEntry: indexData.multiEntry });\n          }\n\n        }, this);\n\n        if (existingIndexes.length) {\n          existingIndexes.forEach(function(_indexName){\n            this.store.deleteIndex(_indexName);\n          }, this);\n        }\n\n      }.bind(this);\n    },\n\n    /**\n     * Deletes the database used for this store if the IDB implementations\n     * provides that functionality.\n     */\n    deleteDatabase: function () {\n      if (this.idb.deleteDatabase) {\n        this.idb.deleteDatabase(this.dbName);\n      }\n    },\n\n    /*********************\n     * data manipulation *\n     *********************/\n\n    /**\n     * Puts an object into the store. If an entry with the given id exists,\n     * it will be overwritten. This method has a different signature for inline\n     * keys and out-of-line keys; please see the examples below.\n     *\n     * @param {*} [key] The key to store. This is only needed if IDBWrapper\n     *  is set to use out-of-line keys. For inline keys - the default scenario -\n     *  this can be omitted.\n     * @param {Object} value The data object to store.\n     * @param {Function} [onSuccess] A callback that is called if insertion\n     *  was successful.\n     * @param {Function} [onError] A callback that is called if insertion\n     *  failed.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     * @example\n        // Storing an object, using inline keys (the default scenario):\n        var myCustomer = {\n          customerid: 2346223,\n          lastname: 'Doe',\n          firstname: 'John'\n        };\n        myCustomerStore.put(myCustomer, mySuccessHandler, myErrorHandler);\n        // Note that passing success- and error-handlers is optional.\n     * @example\n        // Storing an object, using out-of-line keys:\n       var myCustomer = {\n         lastname: 'Doe',\n         firstname: 'John'\n       };\n       myCustomerStore.put(2346223, myCustomer, mySuccessHandler, myErrorHandler);\n      // Note that passing success- and error-handlers is optional.\n     */\n    put: function (key, value, onSuccess, onError) {\n      if (this.keyPath !== null) {\n        onError = onSuccess;\n        onSuccess = value;\n        value = key;\n      }\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n\n      var hasSuccess = false,\n          result = null,\n          putRequest;\n\n      var putTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n      putTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      putTransaction.onabort = onError;\n      putTransaction.onerror = onError;\n\n      if (this.keyPath !== null) { // in-line keys\n        this._addIdPropertyIfNeeded(value);\n        putRequest = putTransaction.objectStore(this.storeName).put(value);\n      } else { // out-of-line keys\n        putRequest = putTransaction.objectStore(this.storeName).put(value, key);\n      }\n      putRequest.onsuccess = function (event) {\n        hasSuccess = true;\n        result = event.target.result;\n      };\n      putRequest.onerror = onError;\n\n      return putTransaction;\n    },\n\n    /**\n     * Retrieves an object from the store. If no entry exists with the given id,\n     * the success handler will be called with null as first and only argument.\n     *\n     * @param {*} key The id of the object to fetch.\n     * @param {Function} [onSuccess] A callback that is called if fetching\n     *  was successful. Will receive the object as only argument.\n     * @param {Function} [onError] A callback that will be called if an error\n     *  occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    get: function (key, onSuccess, onError) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n\n      var hasSuccess = false,\n          result = null;\n      \n      var getTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n      getTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      getTransaction.onabort = onError;\n      getTransaction.onerror = onError;\n      var getRequest = getTransaction.objectStore(this.storeName).get(key);\n      getRequest.onsuccess = function (event) {\n        hasSuccess = true;\n        result = event.target.result;\n      };\n      getRequest.onerror = onError;\n\n      return getTransaction;\n    },\n\n    /**\n     * Removes an object from the store.\n     *\n     * @param {*} key The id of the object to remove.\n     * @param {Function} [onSuccess] A callback that is called if the removal\n     *  was successful.\n     * @param {Function} [onError] A callback that will be called if an error\n     *  occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    remove: function (key, onSuccess, onError) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n\n      var hasSuccess = false,\n          result = null;\n\n      var removeTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n      removeTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      removeTransaction.onabort = onError;\n      removeTransaction.onerror = onError;\n\n      var deleteRequest = removeTransaction.objectStore(this.storeName)['delete'](key);\n      deleteRequest.onsuccess = function (event) {\n        hasSuccess = true;\n        result = event.target.result;\n      };\n      deleteRequest.onerror = onError;\n\n      return removeTransaction;\n    },\n\n    /**\n     * Runs a batch of put and/or remove operations on the store.\n     *\n     * @param {Array} dataArray An array of objects containing the operation to run\n     *  and the data object (for put operations).\n     * @param {Function} [onSuccess] A callback that is called if all operations\n     *  were successful.\n     * @param {Function} [onError] A callback that is called if an error\n     *  occurred during one of the operations.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    batch: function (dataArray, onSuccess, onError) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n\n      if(Object.prototype.toString.call(dataArray) != '[object Array]'){\n        onError(new Error('dataArray argument must be of type Array.'));\n      }\n      var batchTransaction = this.db.transaction([this.storeName] , this.consts.READ_WRITE);\n      batchTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(hasSuccess);\n      };\n      batchTransaction.onabort = onError;\n      batchTransaction.onerror = onError;\n      \n      var count = dataArray.length;\n      var called = false;\n      var hasSuccess = false;\n\n      var onItemSuccess = function () {\n        count--;\n        if (count === 0 && !called) {\n          called = true;\n          hasSuccess = true;\n        }\n      };\n\n      dataArray.forEach(function (operation) {\n        var type = operation.type;\n        var key = operation.key;\n        var value = operation.value;\n\n        var onItemError = function (err) {\n          batchTransaction.abort();\n          if (!called) {\n            called = true;\n            onError(err, type, key);\n          }\n        };\n\n        if (type == 'remove') {\n          var deleteRequest = batchTransaction.objectStore(this.storeName)['delete'](key);\n          deleteRequest.onsuccess = onItemSuccess;\n          deleteRequest.onerror = onItemError;\n        } else if (type == 'put') {\n          var putRequest;\n          if (this.keyPath !== null) { // in-line keys\n            this._addIdPropertyIfNeeded(value);\n            putRequest = batchTransaction.objectStore(this.storeName).put(value);\n          } else { // out-of-line keys\n            putRequest = batchTransaction.objectStore(this.storeName).put(value, key);\n          }\n          putRequest.onsuccess = onItemSuccess;\n          putRequest.onerror = onItemError;\n        }\n      }, this);\n\n      return batchTransaction;\n    },\n\n    /**\n     * Takes an array of objects and stores them in a single transaction.\n     *\n     * @param {Array} dataArray An array of objects to store\n     * @param {Function} [onSuccess] A callback that is called if all operations\n     *  were successful.\n     * @param {Function} [onError] A callback that is called if an error\n     *  occurred during one of the operations.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    putBatch: function (dataArray, onSuccess, onError) {\n      var batchData = dataArray.map(function(item){\n        return { type: 'put', value: item };\n      });\n\n      return this.batch(batchData, onSuccess, onError);\n    },\n\n    /**\n     * Takes an array of keys and removes matching objects in a single\n     * transaction.\n     *\n     * @param {Array} keyArray An array of keys to remove\n     * @param {Function} [onSuccess] A callback that is called if all operations\n     *  were successful.\n     * @param {Function} [onError] A callback that is called if an error\n     *  occurred during one of the operations.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    removeBatch: function (keyArray, onSuccess, onError) {\n      var batchData = keyArray.map(function(key){\n        return { type: 'remove', key: key };\n      });\n\n      return this.batch(batchData, onSuccess, onError);\n    },\n\n    /**\n     * Takes an array of keys and fetches matching objects\n     *\n     * @param {Array} keyArray An array of keys identifying the objects to fetch\n     * @param {Function} [onSuccess] A callback that is called if all operations\n     *  were successful.\n     * @param {Function} [onError] A callback that is called if an error\n     *  occurred during one of the operations.\n     * @param {String} [arrayType='sparse'] The type of array to pass to the\n     *  success handler. May be one of 'sparse', 'dense' or 'skip'. Defaults to\n     *  'sparse'. This parameter specifies how to handle the situation if a get\n     *  operation did not throw an error, but there was no matching object in\n     *  the database. In most cases, 'sparse' provides the most desired\n     *  behavior. See the examples for details.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     * @example\n     // given that there are two objects in the database with the keypath\n     // values 1 and 2, and the call looks like this:\n     myStore.getBatch([1, 5, 2], onError, function (data) { … }, arrayType);\n\n     // this is what the `data` array will be like:\n\n     // arrayType == 'sparse':\n     // data is a sparse array containing two entries and having a length of 3:\n       [Object, 2: Object]\n         0: Object\n         2: Object\n         length: 3\n         __proto__: Array[0]\n     // calling forEach on data will result in the callback being called two\n     // times, with the index parameter matching the index of the key in the\n     // keyArray.\n\n     // arrayType == 'dense':\n     // data is a dense array containing three entries and having a length of 3,\n     // where data[1] is of type undefined:\n       [Object, undefined, Object]\n         0: Object\n         1: undefined\n         2: Object\n         length: 3\n         __proto__: Array[0]\n     // calling forEach on data will result in the callback being called three\n     // times, with the index parameter matching the index of the key in the\n     // keyArray, but the second call will have undefined as first argument.\n\n     // arrayType == 'skip':\n     // data is a dense array containing two entries and having a length of 2:\n       [Object, Object]\n         0: Object\n         1: Object\n         length: 2\n         __proto__: Array[0]\n     // calling forEach on data will result in the callback being called two\n     // times, with the index parameter not matching the index of the key in the\n     // keyArray.\n     */\n    getBatch: function (keyArray, onSuccess, onError, arrayType) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n      arrayType || (arrayType = 'sparse');\n\n      if(Object.prototype.toString.call(keyArray) != '[object Array]'){\n        onError(new Error('keyArray argument must be of type Array.'));\n      }\n      var batchTransaction = this.db.transaction([this.storeName] , this.consts.READ_ONLY);\n      batchTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      batchTransaction.onabort = onError;\n      batchTransaction.onerror = onError;\n\n      var data = [];\n      var count = keyArray.length;\n      var called = false;\n      var hasSuccess = false;\n      var result = null;\n\n      var onItemSuccess = function (event) {\n        if (event.target.result || arrayType == 'dense') {\n          data.push(event.target.result);\n        } else if (arrayType == 'sparse') {\n          data.length++;\n        }\n        count--;\n        if (count === 0) {\n          called = true;\n          hasSuccess = true;\n          result = data;\n        }\n      };\n\n      keyArray.forEach(function (key) {\n\n        var onItemError = function (err) {\n          called = true;\n          result = err;\n          onError(err);\n          batchTransaction.abort();\n        };\n\n        var getRequest = batchTransaction.objectStore(this.storeName).get(key);\n        getRequest.onsuccess = onItemSuccess;\n        getRequest.onerror = onItemError;\n\n      }, this);\n\n      return batchTransaction;\n    },\n\n    /**\n     * Fetches all entries in the store.\n     *\n     * @param {Function} [onSuccess] A callback that is called if the operation\n     *  was successful. Will receive an array of objects.\n     * @param {Function} [onError] A callback that will be called if an error\n     *  occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    getAll: function (onSuccess, onError) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n      var getAllTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n      var store = getAllTransaction.objectStore(this.storeName);\n      if (store.getAll) {\n        this._getAllNative(getAllTransaction, store, onSuccess, onError);\n      } else {\n        this._getAllCursor(getAllTransaction, store, onSuccess, onError);\n      }\n\n      return getAllTransaction;\n    },\n\n    /**\n     * Implements getAll for IDB implementations that have a non-standard\n     * getAll() method.\n     *\n     * @param {Object} getAllTransaction An open READ transaction.\n     * @param {Object} store A reference to the store.\n     * @param {Function} onSuccess A callback that will be called if the\n     *  operation was successful.\n     * @param {Function} onError A callback that will be called if an\n     *  error occurred during the operation.\n     * @private\n     */\n    _getAllNative: function (getAllTransaction, store, onSuccess, onError) {\n      var hasSuccess = false,\n          result = null;\n\n      getAllTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      getAllTransaction.onabort = onError;\n      getAllTransaction.onerror = onError;\n\n      var getAllRequest = store.getAll();\n      getAllRequest.onsuccess = function (event) {\n        hasSuccess = true;\n        result = event.target.result;\n      };\n      getAllRequest.onerror = onError;\n    },\n\n    /**\n     * Implements getAll for IDB implementations that do not have a getAll()\n     * method.\n     *\n     * @param {Object} getAllTransaction An open READ transaction.\n     * @param {Object} store A reference to the store.\n     * @param {Function} onSuccess A callback that will be called if the\n     *  operation was successful.\n     * @param {Function} onError A callback that will be called if an\n     *  error occurred during the operation.\n     * @private\n     */\n    _getAllCursor: function (getAllTransaction, store, onSuccess, onError) {\n      var all = [],\n          hasSuccess = false,\n          result = null;\n\n      getAllTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      getAllTransaction.onabort = onError;\n      getAllTransaction.onerror = onError;\n\n      var cursorRequest = store.openCursor();\n      cursorRequest.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          all.push(cursor.value);\n          cursor['continue']();\n        }\n        else {\n          hasSuccess = true;\n          result = all;\n        }\n      };\n      cursorRequest.onError = onError;\n    },\n\n    /**\n     * Clears the store, i.e. deletes all entries in the store.\n     *\n     * @param {Function} [onSuccess] A callback that will be called if the\n     *  operation was successful.\n     * @param {Function} [onError] A callback that will be called if an\n     *  error occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    clear: function (onSuccess, onError) {\n      onError || (onError = defaultErrorHandler);\n      onSuccess || (onSuccess = noop);\n\n      var hasSuccess = false,\n          result = null;\n\n      var clearTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n      clearTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      clearTransaction.onabort = onError;\n      clearTransaction.onerror = onError;\n\n      var clearRequest = clearTransaction.objectStore(this.storeName).clear();\n      clearRequest.onsuccess = function (event) {\n        hasSuccess = true;\n        result = event.target.result;\n      };\n      clearRequest.onerror = onError;\n\n      return clearTransaction;\n    },\n\n    /**\n     * Checks if an id property needs to present on a object and adds one if\n     * necessary.\n     *\n     * @param {Object} dataObj The data object that is about to be stored\n     * @private\n     */\n    _addIdPropertyIfNeeded: function (dataObj) {\n      if (!this.features.hasAutoIncrement && typeof dataObj[this.keyPath] == 'undefined') {\n        dataObj[this.keyPath] = this._insertIdCount++ + Date.now();\n      }\n    },\n\n    /************\n     * indexing *\n     ************/\n\n    /**\n     * Returns a DOMStringList of index names of the store.\n     *\n     * @return {DOMStringList} The list of index names\n     */\n    getIndexList: function () {\n      return this.store.indexNames;\n    },\n\n    /**\n     * Checks if an index with the given name exists in the store.\n     *\n     * @param {String} indexName The name of the index to look for\n     * @return {Boolean} Whether the store contains an index with the given name\n     */\n    hasIndex: function (indexName) {\n      return this.store.indexNames.contains(indexName);\n    },\n\n    /**\n     * Normalizes an object containing index data and assures that all\n     * properties are set.\n     *\n     * @param {Object} indexData The index data object to normalize\n     * @param {String} indexData.name The name of the index\n     * @param {String} [indexData.keyPath] The key path of the index\n     * @param {Boolean} [indexData.unique] Whether the index is unique\n     * @param {Boolean} [indexData.multiEntry] Whether the index is multi entry\n     */\n    normalizeIndexData: function (indexData) {\n      indexData.keyPath = indexData.keyPath || indexData.name;\n      indexData.unique = !!indexData.unique;\n      indexData.multiEntry = !!indexData.multiEntry;\n    },\n\n    /**\n     * Checks if an actual index complies with an expected index.\n     *\n     * @param {Object} actual The actual index found in the store\n     * @param {Object} expected An Object describing an expected index\n     * @return {Boolean} Whether both index definitions are identical\n     */\n    indexComplies: function (actual, expected) {\n      var complies = ['keyPath', 'unique', 'multiEntry'].every(function (key) {\n        // IE10 returns undefined for no multiEntry\n        if (key == 'multiEntry' && actual[key] === undefined && expected[key] === false) {\n          return true;\n        }\n        // Compound keys\n        if (key == 'keyPath' && Object.prototype.toString.call(expected[key]) == '[object Array]') {\n          var exp = expected.keyPath;\n          var act = actual.keyPath;\n\n          // IE10 can't handle keyPath sequences and stores them as a string.\n          // The index will be unusable there, but let's still return true if\n          // the keyPath sequence matches.\n          if (typeof act == 'string') {\n            return exp.toString() == act;\n          }\n\n          // Chrome/Opera stores keyPath squences as DOMStringList, Firefox\n          // as Array\n          if ( ! (typeof act.contains == 'function' || typeof act.indexOf == 'function') ) {\n            return false;\n          }\n\n          if (act.length !== exp.length) {\n            return false;\n          }\n\n          for (var i = 0, m = exp.length; i<m; i++) {\n            if ( ! ( (act.contains && act.contains(exp[i])) || act.indexOf(exp[i] !== -1) )) {\n              return false;\n            }\n          }\n          return true;\n        }\n        return expected[key] == actual[key];\n      });\n      return complies;\n    },\n\n    /**********\n     * cursor *\n     **********/\n\n    /**\n     * Iterates over the store using the given options and calling onItem\n     * for each entry matching the options.\n     *\n     * @param {Function} onItem A callback to be called for each match\n     * @param {Object} [options] An object defining specific options\n     * @param {Object} [options.index=null] An IDBIndex to operate on\n     * @param {String} [options.order=ASC] The order in which to provide the\n     *  results, can be 'DESC' or 'ASC'\n     * @param {Boolean} [options.autoContinue=true] Whether to automatically\n     *  iterate the cursor to the next result\n     * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n     *  duplicate matches\n     * @param {Object} [options.keyRange=null] An IDBKeyRange to use\n     * @param {Boolean} [options.writeAccess=false] Whether grant write access\n     *  to the store in the onItem callback\n     * @param {Function} [options.onEnd=null] A callback to be called after\n     *  iteration has ended\n     * @param {Function} [options.onError=throw] A callback to be called\n     *  if an error occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    iterate: function (onItem, options) {\n      options = mixin({\n        index: null,\n        order: 'ASC',\n        autoContinue: true,\n        filterDuplicates: false,\n        keyRange: null,\n        writeAccess: false,\n        onEnd: null,\n        onError: defaultErrorHandler\n      }, options || {});\n\n      var directionType = options.order.toLowerCase() == 'desc' ? 'PREV' : 'NEXT';\n      if (options.filterDuplicates) {\n        directionType += '_NO_DUPLICATE';\n      }\n\n      var hasSuccess = false;\n      var cursorTransaction = this.db.transaction([this.storeName], this.consts[options.writeAccess ? 'READ_WRITE' : 'READ_ONLY']);\n      var cursorTarget = cursorTransaction.objectStore(this.storeName);\n      if (options.index) {\n        cursorTarget = cursorTarget.index(options.index);\n      }\n\n      cursorTransaction.oncomplete = function () {\n        if (!hasSuccess) {\n          options.onError(null);\n          return;\n        }\n        if (options.onEnd) {\n          options.onEnd();\n        } else {\n          onItem(null);\n        }\n      };\n      cursorTransaction.onabort = options.onError;\n      cursorTransaction.onerror = options.onError;\n\n      var cursorRequest = cursorTarget.openCursor(options.keyRange, this.consts[directionType]);\n      cursorRequest.onerror = options.onError;\n      cursorRequest.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          onItem(cursor.value, cursor, cursorTransaction);\n          if (options.autoContinue) {\n            cursor['continue']();\n          }\n        } else {\n          hasSuccess = true;\n        }\n      };\n\n      return cursorTransaction;\n    },\n\n    /**\n     * Runs a query against the store and passes an array containing matched\n     * objects to the success handler.\n     *\n     * @param {Function} onSuccess A callback to be called when the operation\n     *  was successful.\n     * @param {Object} [options] An object defining specific query options\n     * @param {Object} [options.index=null] An IDBIndex to operate on\n     * @param {String} [options.order=ASC] The order in which to provide the\n     *  results, can be 'DESC' or 'ASC'\n     * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n     *  duplicate matches\n     * @param {Object} [options.keyRange=null] An IDBKeyRange to use\n     * @param {Function} [options.onError=throw] A callback to be called if an error\n     *  occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    query: function (onSuccess, options) {\n      var result = [];\n      options = options || {};\n      options.onEnd = function () {\n        onSuccess(result);\n      };\n      return this.iterate(function (item) {\n        result.push(item);\n      }, options);\n    },\n\n    /**\n     *\n     * Runs a query against the store, but only returns the number of matches\n     * instead of the matches itself.\n     *\n     * @param {Function} onSuccess A callback to be called if the opration\n     *  was successful.\n     * @param {Object} [options] An object defining specific options\n     * @param {Object} [options.index=null] An IDBIndex to operate on\n     * @param {Object} [options.keyRange=null] An IDBKeyRange to use\n     * @param {Function} [options.onError=throw] A callback to be called if an error\n     *  occurred during the operation.\n     * @returns {IDBTransaction} The transaction used for this operation.\n     */\n    count: function (onSuccess, options) {\n\n      options = mixin({\n        index: null,\n        keyRange: null\n      }, options || {});\n\n      var onError = options.onError || defaultErrorHandler;\n\n      var hasSuccess = false,\n          result = null;\n\n      var cursorTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n      cursorTransaction.oncomplete = function () {\n        var callback = hasSuccess ? onSuccess : onError;\n        callback(result);\n      };\n      cursorTransaction.onabort = onError;\n      cursorTransaction.onerror = onError;\n\n      var cursorTarget = cursorTransaction.objectStore(this.storeName);\n      if (options.index) {\n        cursorTarget = cursorTarget.index(options.index);\n      }\n      var countRequest = cursorTarget.count(options.keyRange);\n      countRequest.onsuccess = function (evt) {\n        hasSuccess = true;\n        result = evt.target.result;\n      };\n      countRequest.onError = onError;\n\n      return cursorTransaction;\n    },\n\n    /**************/\n    /* key ranges */\n    /**************/\n\n    /**\n     * Creates a key range using specified options. This key range can be\n     * handed over to the count() and iterate() methods.\n     *\n     * Note: You must provide at least one or both of \"lower\" or \"upper\" value.\n     *\n     * @param {Object} options The options for the key range to create\n     * @param {*} [options.lower] The lower bound\n     * @param {Boolean} [options.excludeLower] Whether to exclude the lower\n     *  bound passed in options.lower from the key range\n     * @param {*} [options.upper] The upper bound\n     * @param {Boolean} [options.excludeUpper] Whether to exclude the upper\n     *  bound passed in options.upper from the key range\n     * @param {*} [options.only] A single key value. Use this if you need a key\n     *  range that only includes one value for a key. Providing this\n     *  property invalidates all other properties.\n     * @return {Object} The IDBKeyRange representing the specified options\n     */\n    makeKeyRange: function(options){\n      /*jshint onecase:true */\n      var keyRange,\n          hasLower = typeof options.lower != 'undefined',\n          hasUpper = typeof options.upper != 'undefined',\n          isOnly = typeof options.only != 'undefined';\n\n      switch(true){\n        case isOnly:\n          keyRange = this.keyRange.only(options.only);\n          break;\n        case hasLower && hasUpper:\n          keyRange = this.keyRange.bound(options.lower, options.upper, options.excludeLower, options.excludeUpper);\n          break;\n        case hasLower:\n          keyRange = this.keyRange.lowerBound(options.lower, options.excludeLower);\n          break;\n        case hasUpper:\n          keyRange = this.keyRange.upperBound(options.upper, options.excludeUpper);\n          break;\n        default:\n          throw new Error('Cannot create KeyRange. Provide one or both of \"lower\" or \"upper\" value, or an \"only\" value.');\n      }\n\n      return keyRange;\n\n    }\n\n  };\n\n  /** helpers **/\n\n  var noop = function () {\n  };\n  var empty = {};\n  var mixin = function (target, source) {\n    var name, s;\n    for (name in source) {\n      s = source[name];\n      if (s !== empty[name] && s !== target[name]) {\n        target[name] = s;\n      }\n    }\n    return target;\n  };\n\n  IDBStore.version = IDBStore.prototype.version;\n\n  return IDBStore;\n\n}, this);\n","\n/**\r\n * Database\r\n *\r\n * @module Database\r\n * @class Database\r\n *\r\n * @see https://github.com/jensarps/IDBWrapper\r\n */\r\n\r\ndefine('storage/database',['lodash', 'q', 'uuid', 'project', 'idbwrapper'], function (_, Q, uuid, project, IDBStore) {\r\n\r\n        var STORE_PREFIX = 'Muskepeer-',\r\n\r\n            ERRORS = {\r\n                DATA_MISSING: 'Data is missing!',\r\n                DATA_EMPTY: 'Data is empty!',\r\n                DATA_NOT_OBJECT: 'Data is not an object!',\r\n                UUID_MISSING: 'Data uuid is missing!',\r\n                UUID_INVALID: 'Data uuid is invalid!',\r\n                STORE_NOT_FOUND: 'Store not found!'\r\n            };\r\n\r\n        var _self,\r\n            _stores = [];\r\n\r\n        /**\r\n         * Create needed indexedDB-Stores\r\n         * @private\r\n         * @method createStores\r\n         * @return {Promise}\r\n         */\r\n        function createStores() {\r\n            var storeNames = ['results', 'jobs', 'files', 'nodes', 'messages'],\r\n                promises = [];\r\n\r\n            var deferred;\r\n            storeNames.forEach(function (storeName) {\r\n                    deferred = Q.defer();\r\n\r\n                    //create store\r\n                    _stores.push(\r\n                        new IDBStore({\r\n                            autoIncrement: false,\r\n                            keyPath: 'uuid',\r\n                            storeName: storeName,\r\n                            storePrefix: STORE_PREFIX,\r\n                            indexes: [\r\n                                {\r\n                                    name: 'project',\r\n                                    keyPath: 'projectUuid',\r\n                                    unique: false,\r\n                                    multiEntry: true\r\n                                }\r\n                            ],\r\n                            onStoreReady: deferred.resolve,\r\n                            onError: deferred.reject\r\n\r\n                        })\r\n                    );\r\n\r\n                    //add promise\r\n                    promises.push(deferred.promise);\r\n                }\r\n\r\n            )\r\n            ;\r\n\r\n            return Q.all(promises);\r\n\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @method getStoreByBame\r\n         * @param {String} name\r\n         * @return {Object}\r\n         */\r\n        function getStoreByName(name) {\r\n            return _.find(_stores, function (store) {\r\n                return store.storeName === name;\r\n            });\r\n        }\r\n\r\n        return {\r\n\r\n            init: function () {\r\n                _self = this;\r\n                return createStores();\r\n            },\r\n\r\n            /**\r\n             * Clear all data from stores\r\n             * @method clear\r\n             * @param {Array} [storeNames]\r\n             * @return {Promise}\r\n             */\r\n            clear: function (storeNames) {\r\n                var promises = [],\r\n                    stores = _stores;\r\n\r\n                if (storeNames) {\r\n                    stores = [];\r\n                    _stores.forEach(function (storeName) {\r\n                        stores.push(getStoreByName(storeName));\r\n                    });\r\n                }\r\n\r\n                stores.forEach(function (store) {\r\n                    var deferred = Q.defer();\r\n                    promises.push(deferred.promise);\r\n\r\n                    store.clear(deferred.resolve);\r\n\r\n                });\r\n\r\n                logger.log('Database', 'cleared');\r\n\r\n                return Q.all(promises);\r\n            },\r\n\r\n            /**\r\n             * Counts all entries in a store.\r\n             *\r\n             * @method count\r\n             * @param storeName\r\n             * @return promise\r\n             */\r\n            count: function (storeName) {\r\n                var deferred = Q.defer(),\r\n                    store = getStoreByName(storeName);\r\n\r\n                store.count(function (amount) {\r\n                    deferred.resolve(amount);\r\n                }, {});\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n            /**\r\n             * Read data by key from indexedDB\r\n             * @method read\r\n             * @param {String} storeName\r\n             * @param {String} key\r\n             * @param {Object} [options]\r\n             * @return {Promise}\r\n             */\r\n            read: function (storeName, key, options) {\r\n                var deferred = Q.defer(),\r\n                    store = getStoreByName(storeName);\r\n\r\n                options = options || {};\r\n\r\n                if (!store) {\r\n                    deferred.reject(ERRORS.STORE_NOT_FOUND);\r\n                    return deferred.promise;\r\n                }\r\n                else if (!options.uuidIsHash && !uuid.isValid(key)) {\r\n                    deferred.reject(ERRORS.UUID_INVALID);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                store.get(key, deferred.resolve, deferred.reject);\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n            /**\r\n             * List all items from a store\r\n             * @method list\r\n             *\r\n             * @param {String} storeName\r\n             * @param {Object} [options]\r\n             * @param {Object} [keyRangeOptions]\r\n             * @param {Object} [filterObject]\r\n             *\r\n             * @return {Promise}\r\n             */\r\n            list: function (storeName, options, keyRangeOptions, filterObject) {\r\n                var deferred = Q.defer(),\r\n                    store = getStoreByName(storeName),\r\n                    results = [],\r\n                    defaultOptions = {\r\n                        index: 'project',\r\n                        order: 'ASC',\r\n                        filterDuplicates: false,\r\n                        writeAccess: false,\r\n                        onEnd: function () {\r\n                            deferred.resolve(results)\r\n                        },\r\n                        onError: function (error) {\r\n                            deferred.reject(error);\r\n                        }\r\n                    };\r\n\r\n\r\n                //if nothing was passed\r\n                options = options || {};\r\n\r\n                //disallow overwriting callbacks from the outside\r\n                if (options && options.onEnd) options.onEnd = undefined;\r\n                if (options && options.onError) options.onError = undefined;\r\n\r\n                //merge with defaults\r\n                options = _.defaults(options, defaultOptions);\r\n\r\n                //add keyRange if passed\r\n                if (keyRangeOptions) {\r\n                    options.keyRange = store.makeKeyRange(keyRangeOptions);\r\n                }\r\n\r\n\r\n                store.iterate(function onItem(item) {\r\n\r\n                    //test/reduce the found objects\r\n                    if (filterObject) {\r\n                        for (var key in filterObject) {\r\n                            //does the property exist?\r\n                            if (!item.hasOwnProperty(key)) {\r\n                                return;\r\n                            }\r\n                            else {\r\n                                //do the values match?\r\n                                if (item[key] !== filterObject[key]) {\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.notify(item);\r\n                    results.push(item);\r\n\r\n                }, options);\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n            /**\r\n             * Uses list() and reduces matches by indexedDB.keyranges\r\n             *\r\n             * @method findAndReduceByKeyRange\r\n             *\r\n             * @param {String} storeName\r\n             * @param {Object} options\r\n             * @param {Object} keyRangeOptions\r\n             * @return {Promise}\r\n             */\r\n            findAndReduceByKeyRange: function (storeName, options, keyRangeOptions) {\r\n                return this.list(storeName, options, keyRangeOptions);\r\n            },\r\n\r\n            /**\r\n             * Uses list() and reduces matches by a filterObject\r\n             *\r\n             * @method findAndReduceByObject\r\n             *\r\n             * @param {String} storeName\r\n             * @param {Object} options\r\n             * @param {Object} filterObject\r\n             * @return {Promise}\r\n             */\r\n            findAndReduceByObject: function (storeName, options, filterObject) {\r\n                return this.list(storeName, options, null, filterObject);\r\n            },\r\n\r\n            /**\r\n             * Save data to indexedDb, if not uuid is set it will be added automatically\r\n             *\r\n             * @method save\r\n             *\r\n             * @param {String} storeName\r\n             * @param {Object} data\r\n             * @param {Object} options\r\n             * @return {Promise}\r\n             */\r\n            save: function (storeName, data, options) {\r\n\r\n                options = options || {};\r\n\r\n                var deferred = Q.defer(),\r\n                    store;\r\n\r\n                //data is object?\r\n                if (!_.isObject(data)) {\r\n                    deferred.reject(ERRORS.DATA_NOT_OBJECT);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                //data is not empty?\r\n                if (_.isEmpty(data)) {\r\n                    deferred.reject(ERRORS.DATA_EMPTY);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                //data has uuid?\r\n                if (!options.uuidIsHash && (!data.uuid || !uuid.isValid(data.uuid))) {\r\n                    data.uuid = uuid.generate();\r\n                }\r\n\r\n                //add project uuid\r\n                data.projectUuid = project.uuid;\r\n\r\n                store = getStoreByName(storeName);\r\n\r\n                //store found?\r\n                if (!store) {\r\n                    deferred.reject(ERRORS.STORE_NOT_FOUND);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                //search if data is already existent\r\n                if (!options.allowDuplicates) {\r\n                    var clone = {};\r\n\r\n                    //can't just Object.create/clone here, because you\r\n                    //can't delete the uuid\r\n                    for (var key in data) {\r\n                        if (key !== 'uuid' && data.hasOwnProperty(key)) {\r\n                            clone[key] = data[key];\r\n                        }\r\n                    }\r\n                    _self.findAndReduceByObject(storeName, null, clone).then(function (results) {\r\n                        //not found in db\r\n                        if (_.isEmpty(results)) {\r\n                            //save\r\n                            store.put(data, deferred.resolve, function onError(e) {\r\n                                deferred.reject(e);\r\n                            })\r\n                        }\r\n                        //already got such an entry\r\n                        else {\r\n                            //nothing saved, but still not an error\r\n                            deferred.resolve();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    //save without check\r\n                    store.put(data, deferred.resolve, deferred.reject);\r\n                }\r\n\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            /**\r\n             * Save Mutiple objects to a shared store\r\n             *\r\n             * @method saveMultiple\r\n             *\r\n             * @param {String} storeName\r\n             * @param {Array} datasets\r\n             * @param {Object} options\r\n             * @return {Promise}\r\n             */\r\n            saveMultiple: function (storeName, datasets, options) {\r\n                var promises = [];\r\n                datasets.forEach(function (dataset) {\r\n                    promises.push(_self.save(storeName, dataset, options));\r\n                });\r\n\r\n                return Q.all(promises);\r\n            },\r\n\r\n            /**\r\n             * Remove an existing dataset\r\n             *\r\n             * @method remove\r\n             *\r\n             * @param {String} storeName\r\n             * @param {String} key\r\n             * @return {Promise}\r\n             */\r\n            remove: function (storeName, key) {\r\n                var deferred = Q.defer(),\r\n                    store = getStoreByName(storeName);\r\n\r\n                //store found?\r\n                if (!store) {\r\n                    deferred.reject(ERRORS.STORE_NOT_FOUND);\r\n                }\r\n                //remove\r\n                store.remove(key, deferred.resolve, deferred.reject);\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n            /**\r\n             * Update an existing dataset\r\n             *\r\n             * @method update\r\n             *\r\n             * @param storeName\r\n             * @param data\r\n             * @param options\r\n             * @returns {Promise}\r\n             */\r\n            update: function (storeName, data, options) {\r\n                var store = getStoreByName(storeName),\r\n                    deferred = Q.defer();\r\n\r\n                options = options || {};\r\n\r\n                //store found?\r\n                if (!store) {\r\n                    deferred.reject(ERRORS.STORE_NOT_FOUND);\r\n                    return deferred.promise;\r\n                }\r\n                //data is not empty?\r\n                else if (_.isEmpty(data)) {\r\n                    deferred.reject(ERRORS.DATA_EMPTY);\r\n                    return deferred.promise;\r\n                }\r\n                //check uuid\r\n                else if (!data.uuid) {\r\n                    deferred.reject(ERRORS.UUID_MISSING);\r\n                    return deferred.promise;\r\n                }\r\n                else if (!options.uuidIsHash && !uuid.isValid(data.uuid)) {\r\n                    deferred.reject(ERRORS.UUID_INVALID);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                //get data from store\r\n                this.read(storeName, data.uuid, options)\r\n                    //merge\r\n                    .then(function (existingData) {\r\n\r\n                        //compare\r\n                        /*if (comparisonFunction) {\r\n                         var hasChanged = comparisonFunction(existingData, data);\r\n                         // skip the rest\r\n                         if (!hasChanged) deferred.resolve(false);\r\n                         return;\r\n                         }*/\r\n\r\n                        data = _.extend(existingData, data);\r\n                        store.put(data);\r\n                    })\r\n                    //save\r\n                    .then(function () {\r\n                        _self.save(storeName, data, options)\r\n                    })\r\n                    .done(function () {\r\n                        deferred.resolve(data);\r\n                    });\r\n\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n\r\n            /**\r\n             * Find out if a store has s specific dataset\r\n             *\r\n             * @method has\r\n             * @param {String} storeName\r\n             * @param {String} key\r\n             */\r\n            has: function (storeName, key) {\r\n\r\n                var deferred = Q.defer(),\r\n                    store = getStoreByName(storeName);\r\n\r\n                if (!store) {\r\n                    deferred.reject(ERRORS.STORE_NOT_FOUND);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                store.get(key, function (result) {\r\n                    if (result) deferred.resolve(true);\r\n                    else  deferred.resolve(false);\r\n                }, deferred.reject);\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n        }\r\n    }\r\n)\r\n;","\n// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n(function(global) {\n  'use strict';\n\n  var PROP_ADD_TYPE = 'add';\n  var PROP_UPDATE_TYPE = 'update';\n  var PROP_RECONFIGURE_TYPE = 'reconfigure';\n  var PROP_DELETE_TYPE = 'delete';\n  var ARRAY_SPLICE_TYPE = 'splice';\n\n  // Detect and do basic sanity checking on Object/Array.observe.\n  function detectObjectObserve() {\n    if (typeof Object.observe !== 'function' ||\n        typeof Array.observe !== 'function') {\n      return false;\n    }\n\n    var records = [];\n\n    function callback(recs) {\n      records = recs;\n    }\n\n    var test = {};\n    Object.observe(test, callback);\n    test.id = 1;\n    test.id = 2;\n    delete test.id;\n    Object.deliverChangeRecords(callback);\n    if (records.length !== 3)\n      return false;\n\n    // TODO(rafaelw): Remove this when new change record type names make it to\n    // chrome release.\n    if (records[0].type == 'new' &&\n        records[1].type == 'updated' &&\n        records[2].type == 'deleted') {\n      PROP_ADD_TYPE = 'new';\n      PROP_UPDATE_TYPE = 'updated';\n      PROP_RECONFIGURE_TYPE = 'reconfigured';\n      PROP_DELETE_TYPE = 'deleted';\n    } else if (records[0].type != 'add' ||\n               records[1].type != 'update' ||\n               records[2].type != 'delete') {\n      console.error('Unexpected change record names for Object.observe. ' +\n                    'Using dirty-checking instead');\n      return false;\n    }\n    Object.unobserve(test, callback);\n\n    test = [0];\n    Array.observe(test, callback);\n    test[1] = 1;\n    test.length = 0;\n    Object.deliverChangeRecords(callback);\n    if (records.length != 2)\n      return false;\n    if (records[0].type != ARRAY_SPLICE_TYPE ||\n        records[1].type != ARRAY_SPLICE_TYPE) {\n      return false;\n    }\n    Array.unobserve(test, callback);\n\n    return true;\n  }\n\n  var hasObserve = detectObjectObserve();\n\n  function detectEval() {\n    // don't test for eval if document has CSP securityPolicy object and we can see that\n    // eval is not supported. This avoids an error message in console even when the exception\n    // is caught\n    if (global.document &&\n        'securityPolicy' in global.document &&\n        !global.document.securityPolicy.allowsEval) {\n      return false;\n    }\n\n    try {\n      var f = new Function('', 'return true;');\n      return f();\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  var hasEval = detectEval();\n\n  function isIndex(s) {\n    return +s === s >>> 0;\n  }\n\n  function toNumber(s) {\n    return +s;\n  }\n\n  function isObject(obj) {\n    return obj === Object(obj);\n  }\n\n  var numberIsNaN = global.Number.isNaN || function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n  }\n\n  function areSameValue(left, right) {\n    if (left === right)\n      return left !== 0 || 1 / left === 1 / right;\n    if (numberIsNaN(left) && numberIsNaN(right))\n      return true;\n\n    return left !== left && right !== right;\n  }\n\n  var createObject = ('__proto__' in {}) ?\n    function(obj) { return obj; } :\n    function(obj) {\n      var proto = obj.__proto__;\n      if (!proto)\n        return obj;\n      var newObject = Object.create(proto);\n      Object.getOwnPropertyNames(obj).forEach(function(name) {\n        Object.defineProperty(newObject, name,\n                             Object.getOwnPropertyDescriptor(obj, name));\n      });\n      return newObject;\n    };\n\n  var identStart = '[\\$_a-zA-Z]';\n  var identPart = '[\\$_a-zA-Z0-9]';\n  var ident = identStart + '+' + identPart + '*';\n  var elementIndex = '(?:[0-9]|[1-9]+[0-9]+)';\n  var identOrElementIndex = '(?:' + ident + '|' + elementIndex + ')';\n  var path = '(?:' + identOrElementIndex + ')(?:\\\\s*\\\\.\\\\s*' + identOrElementIndex + ')*';\n  var pathRegExp = new RegExp('^' + path + '$');\n\n  function isPathValid(s) {\n    if (typeof s != 'string')\n      return false;\n    s = s.trim();\n\n    if (s == '')\n      return true;\n\n    if (s[0] == '.')\n      return false;\n\n    return pathRegExp.test(s);\n  }\n\n  var constructorIsPrivate = {};\n\n  function Path(s, privateToken) {\n    if (privateToken !== constructorIsPrivate)\n      throw Error('Use Path.get to retrieve path objects');\n\n    if (s.trim() == '')\n      return this;\n\n    if (isIndex(s)) {\n      this.push(s);\n      return this;\n    }\n\n    s.split(/\\s*\\.\\s*/).filter(function(part) {\n      return part;\n    }).forEach(function(part) {\n      this.push(part);\n    }, this);\n\n    if (hasEval && this.length) {\n      this.getValueFrom = this.compiledGetValueFromFn();\n    }\n  }\n\n  // TODO(rafaelw): Make simple LRU cache\n  var pathCache = {};\n\n  function getPath(pathString) {\n    if (pathString instanceof Path)\n      return pathString;\n\n    if (pathString == null)\n      pathString = '';\n\n    if (typeof pathString !== 'string')\n      pathString = String(pathString);\n\n    var path = pathCache[pathString];\n    if (path)\n      return path;\n    if (!isPathValid(pathString))\n      return invalidPath;\n    var path = new Path(pathString, constructorIsPrivate);\n    pathCache[pathString] = path;\n    return path;\n  }\n\n  Path.get = getPath;\n\n  Path.prototype = createObject({\n    __proto__: [],\n    valid: true,\n\n    toString: function() {\n      return this.join('.');\n    },\n\n    getValueFrom: function(obj, directObserver) {\n      for (var i = 0; i < this.length; i++) {\n        if (obj == null)\n          return;\n        obj = obj[this[i]];\n      }\n      return obj;\n    },\n\n    iterateObjects: function(obj, observe) {\n      observe(obj);\n      for (var i = 0; i < this.length; i++) {\n        if (!obj)\n          return;\n        observe(obj);\n        obj = obj[this[i]];\n      }\n    },\n\n    compiledGetValueFromFn: function() {\n      var accessors = this.map(function(ident) {\n        return isIndex(ident) ? '[\"' + ident + '\"]' : '.' + ident;\n      });\n\n      var str = '';\n      var pathString = 'obj';\n      str += 'if (obj != null';\n      var i = 0;\n      for (; i < (this.length - 1); i++) {\n        var ident = this[i];\n        pathString += accessors[i];\n        str += ' &&\\n     ' + pathString + ' != null';\n      }\n      str += ')\\n';\n\n      pathString += accessors[i];\n\n      str += '  return ' + pathString + ';\\nelse\\n  return undefined;';\n      return new Function('obj', str);\n    },\n\n    setValueFrom: function(obj, value) {\n      if (!this.length)\n        return false;\n\n      for (var i = 0; i < this.length - 1; i++) {\n        if (!isObject(obj))\n          return false;\n        obj = obj[this[i]];\n      }\n\n      if (!isObject(obj))\n        return false;\n\n      obj[this[i]] = value;\n      return true;\n    }\n  });\n\n  var invalidPath = new Path('', constructorIsPrivate);\n  invalidPath.valid = false;\n  invalidPath.getValueFrom = invalidPath.setValueFrom = function() {};\n\n  var MAX_DIRTY_CHECK_CYCLES = 1000;\n\n  function dirtyCheck(observer) {\n    var cycles = 0;\n    while (cycles < MAX_DIRTY_CHECK_CYCLES && observer.check_()) {\n      cycles++;\n    }\n    if (global.testingExposeCycleCount)\n      global.dirtyCheckCycleCount = cycles;\n\n    return cycles > 0;\n  }\n\n  function objectIsEmpty(object) {\n    for (var prop in object)\n      return false;\n    return true;\n  }\n\n  function diffIsEmpty(diff) {\n    return objectIsEmpty(diff.added) &&\n           objectIsEmpty(diff.removed) &&\n           objectIsEmpty(diff.changed);\n  }\n\n  function diffObjectFromOldObject(object, oldObject) {\n    var added = {};\n    var removed = {};\n    var changed = {};\n    var oldObjectHas = {};\n\n    for (var prop in oldObject) {\n      var newValue = object[prop];\n\n      if (newValue !== undefined && newValue === oldObject[prop])\n        continue;\n\n      if (!(prop in object)) {\n        removed[prop] = undefined;\n        continue;\n      }\n\n      if (newValue !== oldObject[prop])\n        changed[prop] = newValue;\n    }\n\n    for (var prop in object) {\n      if (prop in oldObject)\n        continue;\n\n      added[prop] = object[prop];\n    }\n\n    if (Array.isArray(object) && object.length !== oldObject.length)\n      changed.length = object.length;\n\n    return {\n      added: added,\n      removed: removed,\n      changed: changed\n    };\n  }\n\n  var eomTasks = [];\n  function runEOMTasks() {\n    if (!eomTasks.length)\n      return false;\n\n    for (var i = 0; i < eomTasks.length; i++) {\n      eomTasks[i]();\n    }\n    eomTasks.length = 0;\n    return true;\n  }\n\n  var runEOM = hasObserve ? (function(){\n    var eomObj = { pingPong: true };\n    var eomRunScheduled = false;\n\n    Object.observe(eomObj, function() {\n      runEOMTasks();\n      eomRunScheduled = false;\n    });\n\n    return function(fn) {\n      eomTasks.push(fn);\n      if (!eomRunScheduled) {\n        eomRunScheduled = true;\n        eomObj.pingPong = !eomObj.pingPong;\n      }\n    };\n  })() :\n  (function() {\n    return function(fn) {\n      eomTasks.push(fn);\n    };\n  })();\n\n  var observedObjectCache = [];\n\n  function newObservedObject() {\n    var observer;\n    var object;\n    var discardRecords = false;\n    var first = true;\n\n    function callback(records) {\n      if (observer && observer.state_ === OPENED && !discardRecords)\n        observer.check_(records);\n    }\n\n    return {\n      open: function(obs) {\n        if (observer)\n          throw Error('ObservedObject in use');\n\n        if (!first)\n          Object.deliverChangeRecords(callback);\n\n        observer = obs;\n        first = false;\n      },\n      observe: function(obj, arrayObserve) {\n        object = obj;\n        if (arrayObserve)\n          Array.observe(object, callback);\n        else\n          Object.observe(object, callback);\n      },\n      deliver: function(discard) {\n        discardRecords = discard;\n        Object.deliverChangeRecords(callback);\n        discardRecords = false;\n      },\n      close: function() {\n        observer = undefined;\n        Object.unobserve(object, callback);\n        observedObjectCache.push(this);\n      }\n    };\n  }\n\n  function getObservedObject(observer, object, arrayObserve) {\n    var dir = observedObjectCache.pop() || newObservedObject();\n    dir.open(observer);\n    dir.observe(object, arrayObserve);\n    return dir;\n  }\n\n  var emptyArray = [];\n  var observedSetCache = [];\n\n  function newObservedSet() {\n    var observers = [];\n    var observerCount = 0;\n    var objects = [];\n    var toRemove = emptyArray;\n    var resetNeeded = false;\n    var resetScheduled = false;\n\n    function observe(obj) {\n      if (!isObject(obj))\n        return;\n\n      var index = toRemove.indexOf(obj);\n      if (index >= 0) {\n        toRemove[index] = undefined;\n        objects.push(obj);\n      } else if (objects.indexOf(obj) < 0) {\n        objects.push(obj);\n        Object.observe(obj, callback);\n      }\n\n      observe(Object.getPrototypeOf(obj));\n    }\n\n    function reset() {\n      resetScheduled = false;\n      if (!resetNeeded)\n        return;\n\n      var objs = toRemove === emptyArray ? [] : toRemove;\n      toRemove = objects;\n      objects = objs;\n\n      var observer;\n      for (var id in observers) {\n        observer = observers[id];\n        if (!observer || observer.state_ != OPENED)\n          continue;\n\n        observer.iterateObjects_(observe);\n      }\n\n      for (var i = 0; i < toRemove.length; i++) {\n        var obj = toRemove[i];\n        if (obj)\n          Object.unobserve(obj, callback);\n      }\n\n      toRemove.length = 0;\n    }\n\n    function scheduleReset() {\n      if (resetScheduled)\n        return;\n\n      resetNeeded = true;\n      resetScheduled = true;\n      runEOM(reset);\n    }\n\n    function callback() {\n      var observer;\n\n      for (var id in observers) {\n        observer = observers[id];\n        if (!observer || observer.state_ != OPENED)\n          continue;\n\n        observer.check_();\n      }\n    }\n\n    var record = {\n      object: undefined,\n      objects: objects,\n      open: function(obs) {\n        observers[obs.id_] = obs;\n        observerCount++;\n        obs.iterateObjects_(observe);\n      },\n      close: function(obs) {\n        var anyLeft = false;\n\n        observers[obs.id_] = undefined;\n        observerCount--;\n\n        if (observerCount) {\n          scheduleReset();\n          return;\n        }\n        resetNeeded = false;\n\n        for (var i = 0; i < objects.length; i++) {\n          Object.unobserve(objects[i], callback);\n          Observer.unobservedCount++;\n        }\n\n        observers.length = 0;\n        objects.length = 0;\n        observedSetCache.push(this);\n      },\n      reset: scheduleReset\n    };\n\n    return record;\n  }\n\n  var lastObservedSet;\n\n  function getObservedSet(observer, obj, isolateObservers) {\n    if (isolateObservers || !lastObservedSet ||\n        lastObservedSet.object !== obj) {\n      lastObservedSet = observedSetCache.pop() || newObservedSet();\n      lastObservedSet.object = obj;\n    }\n    lastObservedSet.open(observer);\n    return lastObservedSet;\n  }\n\n  var UNOPENED = 0;\n  var OPENED = 1;\n  var CLOSED = 2;\n  var RESETTING = 3;\n\n  var nextObserverId = 1;\n\n  function Observer() {\n    this.state_ = UNOPENED;\n    this.callback_ = undefined;\n    this.target_ = undefined; // TODO(rafaelw): Should be WeakRef\n    this.directObserver_ = undefined;\n    this.value_ = undefined;\n    this.id_ = nextObserverId++;\n  }\n\n  Observer.prototype = {\n    open: function(callback, target) {\n      if (this.state_ != UNOPENED)\n        throw Error('Observer has already been opened.');\n\n      addToAll(this);\n      this.callback_ = callback;\n      this.target_ = target;\n      this.state_ = OPENED;\n      this.connect_();\n      return this.value_;\n    },\n\n    close: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      removeFromAll(this);\n      this.state_ = CLOSED;\n      this.disconnect_();\n      this.value_ = undefined;\n      this.callback_ = undefined;\n      this.target_ = undefined;\n    },\n\n    deliver: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      dirtyCheck(this);\n    },\n\n    report_: function(changes) {\n      try {\n        this.callback_.apply(this.target_, changes);\n      } catch (ex) {\n        Observer._errorThrownDuringCallback = true;\n        console.error('Exception caught during observer callback: ' +\n                       (ex.stack || ex));\n      }\n    },\n\n    discardChanges: function() {\n      this.check_(undefined, true);\n      return this.value_;\n    }\n  }\n\n  var collectObservers = !hasObserve;\n  var allObservers;\n  Observer._allObserversCount = 0;\n\n  if (collectObservers) {\n    allObservers = [];\n  }\n\n  function addToAll(observer) {\n    Observer._allObserversCount++;\n    if (!collectObservers)\n      return;\n\n    allObservers.push(observer);\n  }\n\n  function removeFromAll(observer) {\n    Observer._allObserversCount--;\n  }\n\n  var runningMicrotaskCheckpoint = false;\n\n  var hasDebugForceFullDelivery = typeof Object.deliverAllChangeRecords == 'function';\n\n  global.Platform = global.Platform || {};\n\n  global.Platform.performMicrotaskCheckpoint = function() {\n    if (runningMicrotaskCheckpoint)\n      return;\n\n    if (hasDebugForceFullDelivery) {\n      Object.deliverAllChangeRecords();\n      return;\n    }\n\n    if (!collectObservers)\n      return;\n\n    runningMicrotaskCheckpoint = true;\n\n    var cycles = 0;\n    var anyChanged, toCheck;\n\n    do {\n      cycles++;\n      toCheck = allObservers;\n      allObservers = [];\n      anyChanged = false;\n\n      for (var i = 0; i < toCheck.length; i++) {\n        var observer = toCheck[i];\n        if (observer.state_ != OPENED)\n          continue;\n\n        if (observer.check_())\n          anyChanged = true;\n\n        allObservers.push(observer);\n      }\n      if (runEOMTasks())\n        anyChanged = true;\n    } while (cycles < MAX_DIRTY_CHECK_CYCLES && anyChanged);\n\n    if (global.testingExposeCycleCount)\n      global.dirtyCheckCycleCount = cycles;\n\n    runningMicrotaskCheckpoint = false;\n  };\n\n  if (collectObservers) {\n    global.Platform.clearObservers = function() {\n      allObservers = [];\n    };\n  }\n\n  function ObjectObserver(object) {\n    Observer.call(this);\n    this.value_ = object;\n    this.oldObject_ = undefined;\n  }\n\n  ObjectObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    arrayObserve: false,\n\n    connect_: function(callback, target) {\n      if (hasObserve) {\n        this.directObserver_ = getObservedObject(this, this.value_,\n                                                 this.arrayObserve);\n      } else {\n        this.oldObject_ = this.copyObject(this.value_);\n      }\n\n    },\n\n    copyObject: function(object) {\n      var copy = Array.isArray(object) ? [] : {};\n      for (var prop in object) {\n        copy[prop] = object[prop];\n      };\n      if (Array.isArray(object))\n        copy.length = object.length;\n      return copy;\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var diff;\n      var oldValues;\n      if (hasObserve) {\n        if (!changeRecords)\n          return false;\n\n        oldValues = {};\n        diff = diffObjectFromChangeRecords(this.value_, changeRecords,\n                                           oldValues);\n      } else {\n        oldValues = this.oldObject_;\n        diff = diffObjectFromOldObject(this.value_, this.oldObject_);\n      }\n\n      if (diffIsEmpty(diff))\n        return false;\n\n      if (!hasObserve)\n        this.oldObject_ = this.copyObject(this.value_);\n\n      this.report_([\n        diff.added || {},\n        diff.removed || {},\n        diff.changed || {},\n        function(property) {\n          return oldValues[property];\n        }\n      ]);\n\n      return true;\n    },\n\n    disconnect_: function() {\n      if (hasObserve) {\n        this.directObserver_.close();\n        this.directObserver_ = undefined;\n      } else {\n        this.oldObject_ = undefined;\n      }\n    },\n\n    deliver: function() {\n      if (this.state_ != OPENED)\n        return;\n\n      if (hasObserve)\n        this.directObserver_.deliver(false);\n      else\n        dirtyCheck(this);\n    },\n\n    discardChanges: function() {\n      if (this.directObserver_)\n        this.directObserver_.deliver(true);\n      else\n        this.oldObject_ = this.copyObject(this.value_);\n\n      return this.value_;\n    }\n  });\n\n  function ArrayObserver(array) {\n    if (!Array.isArray(array))\n      throw Error('Provided object is not an Array');\n    ObjectObserver.call(this, array);\n  }\n\n  ArrayObserver.prototype = createObject({\n\n    __proto__: ObjectObserver.prototype,\n\n    arrayObserve: true,\n\n    copyObject: function(arr) {\n      return arr.slice();\n    },\n\n    check_: function(changeRecords) {\n      var splices;\n      if (hasObserve) {\n        if (!changeRecords)\n          return false;\n        splices = projectArraySplices(this.value_, changeRecords);\n      } else {\n        splices = calcSplices(this.value_, 0, this.value_.length,\n                              this.oldObject_, 0, this.oldObject_.length);\n      }\n\n      if (!splices || !splices.length)\n        return false;\n\n      if (!hasObserve)\n        this.oldObject_ = this.copyObject(this.value_);\n\n      this.report_([splices]);\n      return true;\n    }\n  });\n\n  ArrayObserver.applySplices = function(previous, current, splices) {\n    splices.forEach(function(splice) {\n      var spliceArgs = [splice.index, splice.removed.length];\n      var addIndex = splice.index;\n      while (addIndex < splice.index + splice.addedCount) {\n        spliceArgs.push(current[addIndex]);\n        addIndex++;\n      }\n\n      Array.prototype.splice.apply(previous, spliceArgs);\n    });\n  };\n\n  function PathObserver(object, path) {\n    Observer.call(this);\n\n    this.object_ = object;\n    this.path_ = path instanceof Path ? path : getPath(path);\n    this.directObserver_ = undefined;\n  }\n\n  PathObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    connect_: function() {\n      if (hasObserve)\n        this.directObserver_ = getObservedSet(this, this.object_);\n\n      this.check_(undefined, true);\n    },\n\n    disconnect_: function() {\n      this.value_ = undefined;\n\n      if (this.directObserver_) {\n        this.directObserver_.close(this);\n        this.directObserver_ = undefined;\n      }\n    },\n\n    iterateObjects_: function(observe) {\n      this.path_.iterateObjects(this.object_, observe);\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var oldValue = this.value_;\n      this.value_ = this.path_.getValueFrom(this.object_);\n      if (skipChanges || areSameValue(this.value_, oldValue))\n        return false;\n\n      this.report_([this.value_, oldValue]);\n      return true;\n    },\n\n    setValue: function(newValue) {\n      if (this.path_)\n        this.path_.setValueFrom(this.object_, newValue);\n    }\n  });\n\n  function CompoundObserver(isolateObservers) {\n    Observer.call(this);\n\n    this.isolateObservers_ = isolateObservers;\n    this.value_ = [];\n    this.directObserver_ = undefined;\n    this.observed_ = [];\n  }\n\n  var observerSentinel = {};\n\n  CompoundObserver.prototype = createObject({\n    __proto__: Observer.prototype,\n\n    connect_: function() {\n      this.check_(undefined, true);\n\n      if (!hasObserve)\n        return;\n\n      var object;\n      var needsDirectObserver = false;\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        object = this.observed_[i]\n        if (object !== observerSentinel) {\n          needsDirectObserver = true;\n          break;\n        }\n      }\n\n      if (this.directObserver_) {\n        if (needsDirectObserver) {\n          this.directObserver_.reset();\n          return;\n        }\n        this.directObserver_.close();\n        this.directObserver_ = undefined;\n        return;\n      }\n\n      if (needsDirectObserver)\n        this.directObserver_ = getObservedSet(this, object,\n                                              this.isolateObservers_);\n    },\n\n    closeObservers_: function() {\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        if (this.observed_[i] === observerSentinel)\n          this.observed_[i + 1].close();\n      }\n      this.observed_.length = 0;\n    },\n\n    disconnect_: function() {\n      this.value_ = undefined;\n\n      if (this.directObserver_) {\n        this.directObserver_.close(this);\n        this.directObserver_ = undefined;\n      }\n\n      this.closeObservers_();\n    },\n\n    addPath: function(object, path) {\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\n        throw Error('Cannot add paths once started.');\n\n      this.observed_.push(object, path instanceof Path ? path : getPath(path));\n    },\n\n    addObserver: function(observer) {\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\n        throw Error('Cannot add observers once started.');\n\n      var value = observer.open(this.deliver, this);\n      this.observed_.push(observerSentinel, observer);\n      this.value_.push(value);\n    },\n\n    startReset: function() {\n      if (this.state_ != OPENED)\n        throw Error('Can only reset while open');\n\n      this.state_ = RESETTING;\n      this.closeObservers_();\n    },\n\n    finishReset: function() {\n      if (this.state_ != RESETTING)\n        throw Error('Can only finishReset after startReset');\n      this.state_ = OPENED;\n      this.connect_();\n\n      return this.value_;\n    },\n\n    iterateObjects_: function(observe) {\n      var object;\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        object = this.observed_[i]\n        if (object !== observerSentinel)\n          this.observed_[i + 1].iterateObjects(object, observe)\n      }\n    },\n\n    check_: function(changeRecords, skipChanges) {\n      var oldValues;\n      for (var i = 0; i < this.observed_.length; i += 2) {\n        var pathOrObserver = this.observed_[i+1];\n        var object = this.observed_[i];\n        var value = object === observerSentinel ?\n            pathOrObserver.discardChanges() :\n            pathOrObserver.getValueFrom(object)\n\n        if (skipChanges) {\n          this.value_[i / 2] = value;\n          continue;\n        }\n\n        if (areSameValue(value, this.value_[i / 2]))\n          continue;\n\n        oldValues = oldValues || [];\n        oldValues[i / 2] = this.value_[i / 2];\n        this.value_[i / 2] = value;\n      }\n\n      if (!oldValues)\n        return false;\n\n      // TODO(rafaelw): Having observed_ as the third callback arg here is\n      // pretty lame API. Fix.\n      this.report_([this.value_, oldValues, this.observed_]);\n      return true;\n    }\n  });\n\n  function identFn(value) { return value; }\n\n  function ObserverTransform(observable, getValueFn, setValueFn,\n                             dontPassThroughSet) {\n    this.callback_ = undefined;\n    this.target_ = undefined;\n    this.value_ = undefined;\n    this.observable_ = observable;\n    this.getValueFn_ = getValueFn || identFn;\n    this.setValueFn_ = setValueFn || identFn;\n    // TODO(rafaelw): This is a temporary hack. PolymerExpressions needs this\n    // at the moment because of a bug in it's dependency tracking.\n    this.dontPassThroughSet_ = dontPassThroughSet;\n  }\n\n  ObserverTransform.prototype = {\n    open: function(callback, target) {\n      this.callback_ = callback;\n      this.target_ = target;\n      this.value_ =\n          this.getValueFn_(this.observable_.open(this.observedCallback_, this));\n      return this.value_;\n    },\n\n    observedCallback_: function(value) {\n      value = this.getValueFn_(value);\n      if (areSameValue(value, this.value_))\n        return;\n      var oldValue = this.value_;\n      this.value_ = value;\n      this.callback_.call(this.target_, this.value_, oldValue);\n    },\n\n    discardChanges: function() {\n      this.value_ = this.getValueFn_(this.observable_.discardChanges());\n      return this.value_;\n    },\n\n    deliver: function() {\n      return this.observable_.deliver();\n    },\n\n    setValue: function(value) {\n      value = this.setValueFn_(value);\n      if (!this.dontPassThroughSet_ && this.observable_.setValue)\n        return this.observable_.setValue(value);\n    },\n\n    close: function() {\n      if (this.observable_)\n        this.observable_.close();\n      this.callback_ = undefined;\n      this.target_ = undefined;\n      this.observable_ = undefined;\n      this.value_ = undefined;\n      this.getValueFn_ = undefined;\n      this.setValueFn_ = undefined;\n    }\n  }\n\n  var expectedRecordTypes = {};\n  expectedRecordTypes[PROP_ADD_TYPE] = true;\n  expectedRecordTypes[PROP_UPDATE_TYPE] = true;\n  expectedRecordTypes[PROP_DELETE_TYPE] = true;\n\n  function notifyFunction(object, name) {\n    if (typeof Object.observe !== 'function')\n      return;\n\n    var notifier = Object.getNotifier(object);\n    return function(type, oldValue) {\n      var changeRecord = {\n        object: object,\n        type: type,\n        name: name\n      };\n      if (arguments.length === 2)\n        changeRecord.oldValue = oldValue;\n      notifier.notify(changeRecord);\n    }\n  }\n\n  Observer.defineComputedProperty = function(target, name, observable) {\n    var notify = notifyFunction(target, name);\n    var value = observable.open(function(newValue, oldValue) {\n      value = newValue;\n      if (notify)\n        notify(PROP_UPDATE_TYPE, oldValue);\n    });\n\n    Object.defineProperty(target, name, {\n      get: function() {\n        observable.deliver();\n        return value;\n      },\n      set: function(newValue) {\n        observable.setValue(newValue);\n        return newValue;\n      },\n      configurable: true\n    });\n\n    return {\n      close: function() {\n        observable.close();\n        Object.defineProperty(target, name, {\n          value: value,\n          writable: true,\n          configurable: true\n        });\n      }\n    };\n  }\n\n  function diffObjectFromChangeRecords(object, changeRecords, oldValues) {\n    var added = {};\n    var removed = {};\n\n    for (var i = 0; i < changeRecords.length; i++) {\n      var record = changeRecords[i];\n      if (!expectedRecordTypes[record.type]) {\n        console.error('Unknown changeRecord type: ' + record.type);\n        console.error(record);\n        continue;\n      }\n\n      if (!(record.name in oldValues))\n        oldValues[record.name] = record.oldValue;\n\n      if (record.type == PROP_UPDATE_TYPE)\n        continue;\n\n      if (record.type == PROP_ADD_TYPE) {\n        if (record.name in removed)\n          delete removed[record.name];\n        else\n          added[record.name] = true;\n\n        continue;\n      }\n\n      // type = 'delete'\n      if (record.name in added) {\n        delete added[record.name];\n        delete oldValues[record.name];\n      } else {\n        removed[record.name] = true;\n      }\n    }\n\n    for (var prop in added)\n      added[prop] = object[prop];\n\n    for (var prop in removed)\n      removed[prop] = undefined;\n\n    var changed = {};\n    for (var prop in oldValues) {\n      if (prop in added || prop in removed)\n        continue;\n\n      var newValue = object[prop];\n      if (oldValues[prop] !== newValue)\n        changed[prop] = newValue;\n    }\n\n    return {\n      added: added,\n      removed: removed,\n      changed: changed\n    };\n  }\n\n  function newSplice(index, removed, addedCount) {\n    return {\n      index: index,\n      removed: removed,\n      addedCount: addedCount\n    };\n  }\n\n  var EDIT_LEAVE = 0;\n  var EDIT_UPDATE = 1;\n  var EDIT_ADD = 2;\n  var EDIT_DELETE = 3;\n\n  function ArraySplice() {}\n\n  ArraySplice.prototype = {\n\n    // Note: This function is *based* on the computation of the Levenshtein\n    // \"edit\" distance. The one change is that \"updates\" are treated as two\n    // edits - not one. With Array splices, an update is really a delete\n    // followed by an add. By retaining this, we optimize for \"keeping\" the\n    // maximum array items in the original array. For example:\n    //\n    //   'xxxx123' -> '123yyyy'\n    //\n    // With 1-edit updates, the shortest path would be just to update all seven\n    // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n    // leaves the substring '123' intact.\n    calcEditDistances: function(current, currentStart, currentEnd,\n                                old, oldStart, oldEnd) {\n      // \"Deletion\" columns\n      var rowCount = oldEnd - oldStart + 1;\n      var columnCount = currentEnd - currentStart + 1;\n      var distances = new Array(rowCount);\n\n      // \"Addition\" rows. Initialize null column.\n      for (var i = 0; i < rowCount; i++) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n      }\n\n      // Initialize null row\n      for (var j = 0; j < columnCount; j++)\n        distances[0][j] = j;\n\n      for (var i = 1; i < rowCount; i++) {\n        for (var j = 1; j < columnCount; j++) {\n          if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n            distances[i][j] = distances[i - 1][j - 1];\n          else {\n            var north = distances[i - 1][j] + 1;\n            var west = distances[i][j - 1] + 1;\n            distances[i][j] = north < west ? north : west;\n          }\n        }\n      }\n\n      return distances;\n    },\n\n    // This starts at the final weight, and walks \"backward\" by finding\n    // the minimum previous weight recursively until the origin of the weight\n    // matrix.\n    spliceOperationsFromEditDistances: function(distances) {\n      var i = distances.length - 1;\n      var j = distances[0].length - 1;\n      var current = distances[i][j];\n      var edits = [];\n      while (i > 0 || j > 0) {\n        if (i == 0) {\n          edits.push(EDIT_ADD);\n          j--;\n          continue;\n        }\n        if (j == 0) {\n          edits.push(EDIT_DELETE);\n          i--;\n          continue;\n        }\n        var northWest = distances[i - 1][j - 1];\n        var west = distances[i - 1][j];\n        var north = distances[i][j - 1];\n\n        var min;\n        if (west < north)\n          min = west < northWest ? west : northWest;\n        else\n          min = north < northWest ? north : northWest;\n\n        if (min == northWest) {\n          if (northWest == current) {\n            edits.push(EDIT_LEAVE);\n          } else {\n            edits.push(EDIT_UPDATE);\n            current = northWest;\n          }\n          i--;\n          j--;\n        } else if (min == west) {\n          edits.push(EDIT_DELETE);\n          i--;\n          current = west;\n        } else {\n          edits.push(EDIT_ADD);\n          j--;\n          current = north;\n        }\n      }\n\n      edits.reverse();\n      return edits;\n    },\n\n    /**\n     * Splice Projection functions:\n     *\n     * A splice map is a representation of how a previous array of items\n     * was transformed into a new array of items. Conceptually it is a list of\n     * tuples of\n     *\n     *   <index, removed, addedCount>\n     *\n     * which are kept in ascending index order of. The tuple represents that at\n     * the |index|, |removed| sequence of items were removed, and counting forward\n     * from |index|, |addedCount| items were added.\n     */\n\n    /**\n     * Lacking individual splice mutation information, the minimal set of\n     * splices can be synthesized given the previous state and final state of an\n     * array. The basic approach is to calculate the edit distance matrix and\n     * choose the shortest path through it.\n     *\n     * Complexity: O(l * p)\n     *   l: The length of the current array\n     *   p: The length of the old array\n     */\n    calcSplices: function(current, currentStart, currentEnd,\n                          old, oldStart, oldEnd) {\n      var prefixCount = 0;\n      var suffixCount = 0;\n\n      var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n      if (currentStart == 0 && oldStart == 0)\n        prefixCount = this.sharedPrefix(current, old, minLength);\n\n      if (currentEnd == current.length && oldEnd == old.length)\n        suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n      currentStart += prefixCount;\n      oldStart += prefixCount;\n      currentEnd -= suffixCount;\n      oldEnd -= suffixCount;\n\n      if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n        return [];\n\n      if (currentStart == currentEnd) {\n        var splice = newSplice(currentStart, [], 0);\n        while (oldStart < oldEnd)\n          splice.removed.push(old[oldStart++]);\n\n        return [ splice ];\n      } else if (oldStart == oldEnd)\n        return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n      var ops = this.spliceOperationsFromEditDistances(\n          this.calcEditDistances(current, currentStart, currentEnd,\n                                 old, oldStart, oldEnd));\n\n      var splice = undefined;\n      var splices = [];\n      var index = currentStart;\n      var oldIndex = oldStart;\n      for (var i = 0; i < ops.length; i++) {\n        switch(ops[i]) {\n          case EDIT_LEAVE:\n            if (splice) {\n              splices.push(splice);\n              splice = undefined;\n            }\n\n            index++;\n            oldIndex++;\n            break;\n          case EDIT_UPDATE:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.addedCount++;\n            index++;\n\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n          case EDIT_ADD:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.addedCount++;\n            index++;\n            break;\n          case EDIT_DELETE:\n            if (!splice)\n              splice = newSplice(index, [], 0);\n\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n        }\n      }\n\n      if (splice) {\n        splices.push(splice);\n      }\n      return splices;\n    },\n\n    sharedPrefix: function(current, old, searchLength) {\n      for (var i = 0; i < searchLength; i++)\n        if (!this.equals(current[i], old[i]))\n          return i;\n      return searchLength;\n    },\n\n    sharedSuffix: function(current, old, searchLength) {\n      var index1 = current.length;\n      var index2 = old.length;\n      var count = 0;\n      while (count < searchLength && this.equals(current[--index1], old[--index2]))\n        count++;\n\n      return count;\n    },\n\n    calculateSplices: function(current, previous) {\n      return this.calcSplices(current, 0, current.length, previous, 0,\n                              previous.length);\n    },\n\n    equals: function(currentValue, previousValue) {\n      return currentValue === previousValue;\n    }\n  };\n\n  var arraySplice = new ArraySplice();\n\n  function calcSplices(current, currentStart, currentEnd,\n                       old, oldStart, oldEnd) {\n    return arraySplice.calcSplices(current, currentStart, currentEnd,\n                                   old, oldStart, oldEnd);\n  }\n\n  function intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1)\n      return -1;\n\n    // Adjacent\n    if (end1 == start2 || end2 == start1)\n      return 0;\n\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n      if (end1 < end2)\n        return end1 - start2; // Overlap\n      else\n        return end2 - start2; // Contained\n    } else {\n      // Non-zero intersect, span2 first\n      if (end2 < end1)\n        return end2 - start1; // Overlap\n      else\n        return end1 - start1; // Contained\n    }\n  }\n\n  function mergeSplice(splices, index, removed, addedCount) {\n\n    var splice = newSplice(index, removed, addedCount);\n\n    var inserted = false;\n    var insertionOffset = 0;\n\n    for (var i = 0; i < splices.length; i++) {\n      var current = splices[i];\n      current.index += insertionOffset;\n\n      if (inserted)\n        continue;\n\n      var intersectCount = intersect(splice.index,\n                                     splice.index + splice.removed.length,\n                                     current.index,\n                                     current.index + current.addedCount);\n\n      if (intersectCount >= 0) {\n        // Merge the two splices\n\n        splices.splice(i, 1);\n        i--;\n\n        insertionOffset -= current.addedCount - current.removed.length;\n\n        splice.addedCount += current.addedCount - intersectCount;\n        var deleteCount = splice.removed.length +\n                          current.removed.length - intersectCount;\n\n        if (!splice.addedCount && !deleteCount) {\n          // merged splice is a noop. discard.\n          inserted = true;\n        } else {\n          var removed = current.removed;\n\n          if (splice.index < current.index) {\n            // some prefix of splice.removed is prepended to current.removed.\n            var prepend = splice.removed.slice(0, current.index - splice.index);\n            Array.prototype.push.apply(prepend, removed);\n            removed = prepend;\n          }\n\n          if (splice.index + splice.removed.length > current.index + current.addedCount) {\n            // some suffix of splice.removed is appended to current.removed.\n            var append = splice.removed.slice(current.index + current.addedCount - splice.index);\n            Array.prototype.push.apply(removed, append);\n          }\n\n          splice.removed = removed;\n          if (current.index < splice.index) {\n            splice.index = current.index;\n          }\n        }\n      } else if (splice.index < current.index) {\n        // Insert splice here.\n\n        inserted = true;\n\n        splices.splice(i, 0, splice);\n        i++;\n\n        var offset = splice.addedCount - splice.removed.length\n        current.index += offset;\n        insertionOffset += offset;\n      }\n    }\n\n    if (!inserted)\n      splices.push(splice);\n  }\n\n  function createInitialSplices(array, changeRecords) {\n    var splices = [];\n\n    for (var i = 0; i < changeRecords.length; i++) {\n      var record = changeRecords[i];\n      switch(record.type) {\n        case ARRAY_SPLICE_TYPE:\n          mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);\n          break;\n        case PROP_ADD_TYPE:\n        case PROP_UPDATE_TYPE:\n        case PROP_DELETE_TYPE:\n          if (!isIndex(record.name))\n            continue;\n          var index = toNumber(record.name);\n          if (index < 0)\n            continue;\n          mergeSplice(splices, index, [record.oldValue], 1);\n          break;\n        default:\n          console.error('Unexpected record type: ' + JSON.stringify(record));\n          break;\n      }\n    }\n\n    return splices;\n  }\n\n  function projectArraySplices(array, changeRecords) {\n    var splices = [];\n\n    createInitialSplices(array, changeRecords).forEach(function(splice) {\n      if (splice.addedCount == 1 && splice.removed.length == 1) {\n        if (splice.removed[0] !== array[splice.index])\n          splices.push(splice);\n\n        return\n      };\n\n      splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount,\n                                           splice.removed, 0, splice.removed.length));\n    });\n\n    return splices;\n  }\n\n  global.Observer = Observer;\n  global.Observer.runEOM_ = runEOM;\n  global.Observer.hasObjectObserve = hasObserve;\n  global.ArrayObserver = ArrayObserver;\n  global.ArrayObserver.calculateSplices = function(current, previous) {\n    return arraySplice.calculateSplices(current, previous);\n  };\n\n  global.ArraySplice = ArraySplice;\n  global.ObjectObserver = ObjectObserver;\n  global.PathObserver = PathObserver;\n  global.CompoundObserver = CompoundObserver;\n  global.Path = Path;\n  global.ObserverTransform = ObserverTransform;\n\n  // TODO(rafaelw): Only needed for testing until new change record names\n  // make it to release.\n  global.Observer.changeRecordTypes = {\n    add: PROP_ADD_TYPE,\n    update: PROP_UPDATE_TYPE,\n    reconfigure: PROP_RECONFIGURE_TYPE,\n    'delete': PROP_DELETE_TYPE,\n    splice: ARRAY_SPLICE_TYPE\n  };\n})(typeof global !== 'undefined' && global ? global : this || window);\n\ndefine(\"observe-js\", function(){});\n","\n/**\r\n * Store for User-Settings which will be saved/read from\r\n * localStorage\r\n *\r\n * @module Settings\r\n * @class Settings\r\n */\r\n\r\ndefine('settings',['lodash', './uuid', 'observe-js'], function (_, uuid) {\r\n\r\n    var _storeName = 'settings',\r\n        _settings = readSettingsFromLocalStorage();\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @method readSettingsFromLocalStorage\r\n     * @return {Object} Settings\r\n     */\r\n    function readSettingsFromLocalStorage() {\r\n        return JSON.parse(localStorage.getItem(_storeName)) || {};\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @method storeSettingsToLocalStorage\r\n     */\r\n    function storeSettingsToLocalStorage() {\r\n        localStorage.setItem(_storeName, JSON.stringify(_settings));\r\n    }\r\n\r\n\r\n    //Chrome is currently the only one supporting native O_o\r\n    //which would be\r\n    //Object.observe(_settings, storeSettingsToLocalStorage);\r\n    var observer = new ObjectObserver(_settings);\r\n    observer.open(storeSettingsToLocalStorage);\r\n\r\n    //Defaults\r\n    _.defaults(_settings, {\r\n        authToken: uuid.generate(), // Will never be sent to any peer (private)\r\n        i18n: 'en_US',\r\n        maxPeers: 3,\r\n        maxFactories: 1,\r\n        maxWorkers: 1,\r\n        fileStorageSize: 500 * 1024 * 1024, //500MB\r\n        protocol: 'sctp', //srtp || sctp\r\n        iceServers: [\r\n            {\r\n                'url': 'stun:stun.l.google.com:19302'\r\n            },\r\n            {\r\n                'url': 'stun:stun.turnservers.com:3478'\r\n            }\r\n        ],\r\n        syncInterval: 3600000, //1h\r\n        uuid: uuid.generate() //everyone will know (public)\r\n    });\r\n\r\n    return _settings;\r\n\r\n})\r\n;","\n/**\r\n * @class Crypto\r\n * @module Crypto\r\n * @see  http://kjur.github.io/jsrsasign/sample-ecdsa.html\r\n */\r\n\r\ndefine('crypto/index',['sjcl', 'jsrsasign', 'settings', 'project'], function (sjcl, jsrsasign, settings, project) {\r\n\r\n    var SIGN_ALGORITHM = 'SHA256withECDSA',\r\n        CURVE_NAME = 'secp256r1';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Generate a hash from an Object using SHA256\r\n         *\r\n         * @method hash\r\n         * @param data\r\n         * @return {String}\r\n         */\r\n\r\n        hash: function (data) {\r\n            var bitArray = sjcl.hash.sha256.hash(JSON.stringify(data));\r\n            return sjcl.codec.hex.fromBits(bitArray);\r\n        },\r\n\r\n        /**\r\n         * @method isValidPublicKey\r\n         * @param key\r\n         * @return {Boolean}\r\n         */\r\n        isValidPublicKey: function (key) {\r\n            return new RegExp(/^[a-zA-Z0-9_]{130}$/gi).test(key);\r\n        },\r\n\r\n        /**\r\n         * @method isValidPrivateKey\r\n         * @param key\r\n         * @return {Boolean}\r\n         */\r\n        isValidPrivateKey: function (key) {\r\n            return new RegExp(/^[a-zA-Z0-9_]{64}$/gi).test(key);\r\n        },\r\n\r\n        /**\r\n         * Sign a message using Elliptic Curve DSA\r\n         *\r\n         * @method sign\r\n         * @param message\r\n         * @return {String} signature\r\n         */\r\n        sign: function (message) {\r\n\r\n            if (!settings.privateKey) {\r\n                var key = window.prompt('Enter your privateKey as HEX');\r\n\r\n                if (this.isValidPrivateKey(key)) {\r\n                    settings.privateKey = key;\r\n                }\r\n                else {\r\n                    window.alert('Invalid private key!');\r\n                    return null;\r\n                }\r\n            }\r\n\r\n\r\n            var sig = new KJUR.crypto.Signature({\"alg\": SIGN_ALGORITHM, \"prov\": \"cryptojs/jsrsa\"});\r\n            sig.initSign({'ecprvhex': settings.privateKey, 'eccurvename': CURVE_NAME});\r\n            sig.updateString(message);\r\n\r\n            return sig.sign();\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * Verify that a message and signature haven't been manipulated\r\n         *\r\n         * @method verify\r\n         * @param message\r\n         * @param signature\r\n         * @return {Boolean}\r\n         */\r\n        verify: function (message, signature) {\r\n\r\n            if (!project.publicKey) {\r\n                throw new Error('No publicKey defined for project');\r\n            }\r\n            else if (!this.isValidPublicKey(project.publicKey)) {\r\n                throw new Error('publicKey defined for project is invalid');\r\n            }\r\n\r\n            var sig = new KJUR.crypto.Signature({\"alg\": SIGN_ALGORITHM, \"prov\": \"cryptojs/jsrsa\"});\r\n            sig.initVerifyByPublicKey({'ecpubhex': project.publicKey, 'eccurvename': CURVE_NAME});\r\n            sig.updateString(message);\r\n\r\n            return sig.verify(signature);\r\n        }\r\n\r\n    }\r\n\r\n});","\n/**\r\n * FileSystem\r\n *\r\n * @module FileSystem\r\n * @class FileSystem\r\n *\r\n * @see http://www.html5rocks.com/de/tutorials/file/filesystem/\r\n * @see https://gist.github.com/robnyman/1894032\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL\r\n * @see http://www.html5rocks.com/en/tutorials/file/filesystem/#toc-filesystemurls\r\n *\r\n */\r\n\r\ndefine('storage/filesystem',['lodash', 'crypto/index', 'q', 'project', 'settings'], function (_, crypto, Q, project, settings) {\r\n\r\n    /**\r\n     * @final\r\n     * @property CHUNK_SIZE\r\n     * @type {Number}\r\n     */\r\n    var CHUNK_SIZE = 512;\r\n\r\n    var _self,\r\n        _db,\r\n        _fs;\r\n\r\n    /**\r\n     * Request access to the local fileSystem,\r\n     * will cause a user prompt at first attempt\r\n     *\r\n     * @private\r\n     * @method requestFileSystem\r\n     * @return {Promise}\r\n     */\r\n    function requestFileSystem() {\r\n        var deferred = Q.defer();\r\n\r\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\r\n\r\n        window.requestFileSystem(window.PERSISTENT, settings.fileStorageSize, deferred.resolve, function (error) {\r\n            deferred.reject(error);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Request a specific stoage-quota\r\n     * will cause a user prompt at first attempt\r\n     *\r\n     * @private\r\n     * @method requestQuota\r\n     * @return {Promise}\r\n     */\r\n    function requestQuota() {\r\n        var deferred = Q.defer();\r\n\r\n        navigator.webkitPersistentStorage = navigator.webkitPersistentStorage || window.webkitStorageInfo;\r\n        navigator.webkitPersistentStorage.requestQuota(settings.fileStorageSize || 50 * 1024 * 1024, deferred.resolve, deferred.reject);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Parse a fileName from an uri\r\n     *\r\n     * @private\r\n     * @method getFileNameFromUri\r\n     * @param {String} uri\r\n     * @return {String}\r\n     */\r\n    function getFileNameFromUri(uri) {\r\n        var regex = new RegExp(/[^\\\\/]+$/);\r\n        return uri.match(regex)[0];\r\n    }\r\n\r\n    /**\r\n     * Create a directory in filesystem\r\n     *\r\n     * @private\r\n     * @method createSubDirectory\r\n     * @param {String} dir\r\n     * @return {Promise}\r\n     */\r\n    function createSubDirectory(dir) {\r\n        var deferred = Q.defer();\r\n\r\n        _fs.root.getDirectory(dir, {create: true}, deferred.resolve, deferred.reject);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param fileInfo\r\n     * @param mode\r\n     * @param offset\r\n     * @param completeFile\r\n     * @returns {Promise}\r\n     */\r\n    function readFile(fileInfo, mode, offset, completeFile) {\r\n\r\n        var deferred = Q.defer();\r\n\r\n        mode = mode || 'blob';\r\n        completeFile = completeFile || false;\r\n\r\n        _fs.root.getFile(project.uuid + '/' + fileInfo.uuid, {}, function (fileEntry) {\r\n\r\n            fileEntry.file(function (file) {\r\n\r\n                var start = offset || 0,\r\n                    end = start + CHUNK_SIZE,\r\n                    blob;\r\n\r\n                // Every file has an end\r\n                if (start + CHUNK_SIZE > file.size) {\r\n                    end = file.size;\r\n                }\r\n\r\n                // Slice that file\r\n                if (!completeFile) {\r\n                    blob = file.slice(start, end);\r\n                } else {\r\n                    blob = file;\r\n                }\r\n\r\n                // Blob Mode, no need for FileReader\r\n                if (mode === 'blob') {\r\n                    deferred.resolve(blob);\r\n                }\r\n\r\n                // Using FileReader\r\n                else {\r\n                    var reader = new FileReader();\r\n\r\n                    reader.onloadend = function (e) {\r\n\r\n                        if (e.target.readyState === FileReader.DONE) {\r\n\r\n                            if (mode === 'dataUrl') {\r\n                                // Remove data attribute prefix\r\n                                var chunk = reader.result.match(/,(.*)$/);\r\n                                if (chunk) {\r\n                                    deferred.resolve(chunk[1]);\r\n                                } else {\r\n                                    deferred.reject();\r\n                                }\r\n                            } else {\r\n                                deferred.resolve(reader.result);\r\n                            }\r\n                            reader = null;\r\n\r\n                        } else {\r\n                            deferred.reject();\r\n                        }\r\n\r\n                    };\r\n\r\n                    // DataUrl Mode\r\n                    if (mode === 'dataUrl') {\r\n                        reader.readAsDataURL(blob);\r\n                        // ArrayBuffer Mode\r\n                    } else if (mode === 'arrayBuffer') {\r\n                        reader.readAsArrayBuffer(blob);\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }, deferred.reject);\r\n\r\n\r\n        }, deferred.reject);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Gets a file via XHR and returns a promise,\r\n     * resolve will contain a Blob\r\n     *\r\n     * @private\r\n     * @method download\r\n     *\r\n     * @param {Object} file\r\n     * @return {Promise}\r\n     *\r\n     */\r\n    function downloadViaXHR(file) {\r\n        var deferred = Q.defer(),\r\n            xhr = new XMLHttpRequest(),\r\n            data;\r\n\r\n        xhr.open('GET', file.uri, true);\r\n        xhr.responseType = 'blob';\r\n\r\n        xhr.addEventListener('progress', function (e) {\r\n\r\n            // Maybe somehow there will already be some chunks in here\r\n            if (e.target.response instanceof Blob) {\r\n                data = {\r\n                    blob: e.target.response,\r\n                    position: e.position,\r\n                    totalSize: e.totalSize\r\n                };\r\n            }\r\n            else {\r\n                // If not at least we can store these info\r\n                data = {totalSize: e.totalSize}\r\n            }\r\n\r\n            deferred.notify(data);\r\n        });\r\n\r\n        xhr.addEventListener('load', function (e) {\r\n\r\n            if (xhr.status === 200) {\r\n                data = {\r\n                    blob: e.target.response,\r\n                    position: e.position,\r\n                    totalSize: e.target.response.size\r\n                };\r\n                deferred.resolve(data);\r\n            } else {\r\n                deferred.reject('Error downloading file');\r\n            }\r\n\r\n        }, false);\r\n\r\n        xhr.send();\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * Updates the list by getting the newest info from db\r\n     *\r\n     * @private\r\n     * @method updateFileList\r\n     * @return {Promise}\r\n     */\r\n    function updateFileList() {\r\n        return _self.getFileList()\r\n            .then(function (files) {\r\n                _self.list = files;\r\n            });\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a base64 String to a Blob\r\n     *\r\n     * @private\r\n     * @method base64toBlob\r\n     * @see http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\r\n     *\r\n     * @param {String} base64\r\n     * @param {String} [contentType]\r\n     *\r\n     * @return {Blob}\r\n     */\r\n    function base64toBlob(base64, contentType) {\r\n        contentType = contentType || '';\r\n\r\n        var byteCharacters = atob(base64);\r\n        var byteArrays = [];\r\n\r\n        for (var offset = 0; offset < byteCharacters.length; offset += CHUNK_SIZE) {\r\n            var slice = byteCharacters.slice(offset, offset + CHUNK_SIZE);\r\n\r\n            var byteNumbers = new Array(slice.length);\r\n            for (var i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            var byteArray = new Uint8Array(byteNumbers);\r\n\r\n            byteArrays.push(byteArray);\r\n        }\r\n\r\n        return new Blob(byteArrays, {type: contentType});\r\n\r\n    }\r\n\r\n\r\n    return {\r\n\r\n        /**\r\n         * List of related files in db,\r\n         * will always be updated automatically\r\n         *\r\n         * @property list\r\n         * @type {Array}\r\n         */\r\n        list: null,\r\n\r\n        /**\r\n         * Initialize fileStorage\r\n         *\r\n         * @chainable\r\n         * @method init\r\n         *\r\n         * @param db Instance of database submodule\r\n         * @return {Object}\r\n         */\r\n        init: function (db) {\r\n\r\n            _self = this;\r\n            _db = db;\r\n\r\n            return requestQuota()\r\n                .then(requestFileSystem)\r\n                .then(function (fileSystem) {\r\n                    _fs = fileSystem;\r\n                    if (!project.uuid) {\r\n                        logger.error('Filesystem', 'No project uuid set, can not create dir!');\r\n                        throw Error('Filesystem', 'No project uuid set');\r\n                    }\r\n                    return createSubDirectory(project.uuid);\r\n                })\r\n                .then(function () {\r\n                    return updateFileList();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Write a file/blob to the local filesystem\r\n         *\r\n         * @method write\r\n         *\r\n         * @param {Object} fileInfo\r\n         * @param {Blob|String} blob or base64-String\r\n         * @param {Number} [pos]\r\n         *\r\n         * @return {Promise}\r\n         */\r\n        write: function (fileInfo, blob, pos) {\r\n            var deferred = Q.defer(),\r\n                writtenBytes = 0,\r\n                isNewFile = true;\r\n\r\n            // Test if we need to convert from base64\r\n            if (!blob instanceof Blob) {\r\n                blob = base64toBlob(blob);\r\n            }\r\n\r\n            // Does the file exist in database?\r\n            _db.read('files', fileInfo.uuid, {uuidIsHash: true})\r\n                .then(function (info) {\r\n                    // Just to make sure, we have data that is up to date\r\n                    fileInfo = info;\r\n                    //Is it marked as complete?)\r\n                    if (!fileInfo || fileInfo.isComplete) {\r\n                        deferred.reject('File does not exist, or is already complete');\r\n                    }\r\n\r\n                    writtenBytes = fileInfo.position;\r\n                    isNewFile = writtenBytes === 0;\r\n\r\n                    // We won't overwrite fileDate\r\n                    if (pos < writtenBytes) {\r\n                        deferred.reject('Position is lower than already written bytes!');\r\n                    }\r\n                })\r\n                .then(function () {\r\n                    // Append bytes\r\n                    _fs.root.getFile(project.uuid + '/' + fileInfo.uuid, {create: isNewFile }, function (fileEntry) {\r\n\r\n                        fileEntry.createWriter(function (writer) {\r\n\r\n                            // Start at given position or EOF\r\n                            pos = pos || writer.length;\r\n                            writer.seek(pos);\r\n                            writer.write(blob);\r\n\r\n\r\n                        }, deferred.reject);\r\n\r\n                    }, deferred.reject);\r\n                })\r\n                .then(function () {\r\n                    // Update fileInfo in database\r\n                    var currentPosition = fileInfo.position + blob.size;\r\n                    return _db.update('files', {uuid: fileInfo.uuid, isComplete: currentPosition >= fileInfo.size, position: currentPosition}, {uuidIsHash: true});\r\n                })\r\n                .then(updateFileList);\r\n\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        /**\r\n         * Get a local url to a file in fileSystem\r\n         *\r\n         * @method readFileAsLocalUrl\r\n         * @param {Object} fileInfo\r\n         * @return {Promise}\r\n         */\r\n        readFileAsLocalUrl: function (fileInfo) {\r\n            var deferred = Q.defer();\r\n\r\n            _fs.root.getFile(project.uuid + '/' + fileInfo.uuid, {}, function (fileEntry) {\r\n                deferred.resolve(fileEntry.toURL());\r\n            }, deferred.reject);\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n\r\n        /**\r\n         * Get an ObjectUrl to a file from FileSystem\r\n         *\r\n         * @method readFileAsObjectUrl\r\n         * @param {Object} fileInfo\r\n         * @return {Promise}\r\n         */\r\n        readFileAsObjectUrl: function (fileInfo) {\r\n            var deferred = Q.defer();\r\n\r\n            _fs.root.getFile(project.uuid + '/' + fileInfo.uuid, {}, function (fileEntry) {\r\n\r\n                fileEntry.file(function (file) {\r\n                    deferred.resolve(URL.createObjectURL(file));\r\n                }, deferred.reject);\r\n\r\n            }, deferred.reject);\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n\r\n        /**\r\n         * Read some chunks from the file, which will resul in a Blob-Instance.\r\n         * Chunk size is defined globally by CHUNK_SIZE.\r\n         * Slicing can be disabled using completeFile param.\r\n         *\r\n         * @method readFileChunkAsBlob\r\n         * @param {Object} file\r\n         * @param {Number} offset\r\n         * @param {Boolean} completeFile\r\n         * @return {Promise}\r\n         */\r\n        readFileChunkAsBlob: function (file, offset, completeFile) {\r\n            return readFile(file, 'blob', offset, completeFile);\r\n\r\n        },\r\n\r\n        /**\r\n         * Read some chunks from the file, which will be base64 encodded.\r\n         * Chunk size is defined globally by CHUNK_SIZE.\r\n         * Slicing can be disabled using completeFile param.\r\n         *\r\n         * @method readFileChunkAsDataUrl\r\n         * @param {Object} file\r\n         * @param {Number} offset\r\n         * @param {Boolean} completeFile\r\n         * @return {Promise}\r\n         */\r\n        readFileChunkAsDataUrl: function (file, offset, completeFile) {\r\n            return readFile(file, 'dataUrl', offset, completeFile);\r\n        },\r\n\r\n\r\n        /**\r\n         * Read some chunks from the file and return an ArrayBuffer.\r\n         * Chunk size is defined globally by CHUNK_SIZE.\r\n         * Slicing can be disabled using completeFile param.\r\n         *\r\n         * @method readFileChunkAsArrayBuffer\r\n         * @param {Object} file\r\n         * @param {Number} offset\r\n         * @param {Boolean} completeFile\r\n         * @return {Promise}\r\n         */\r\n        readFileChunkAsArrayBuffer: function (file, offset, completeFile) {\r\n            return readFile(file, 'arrayBuffer', offset, completeFile);\r\n        },\r\n\r\n\r\n        /**\r\n         * Add file-entries to the storage database,\r\n         * not to the filesystem.\r\n         *\r\n         * @method add\r\n         * @param {Array|String} files\r\n         * @return {Promise}\r\n         */\r\n        add: function (files) {\r\n\r\n            var promises = [];\r\n\r\n            //just a single uri?\r\n            if (!_.isArray(files)) {\r\n                files = [files];\r\n            }\r\n\r\n            files.forEach(function (file) {\r\n\r\n                var fileInfo = {\r\n                    name: file.name || getFileNameFromUri(file.url),\r\n                    uri: file.url,\r\n                    size: 0,\r\n                    position: 0,\r\n                    type: file.type || 'text/plain',\r\n                    isComplete: false,\r\n                    uuid: crypto.hash(file.url)\r\n                };\r\n\r\n                var promise = _db.read('files', fileInfo.uuid, {uuidIsHash: true})\r\n                    .then(function (result) {\r\n                        if (!result) {\r\n                            return _db.save('files', fileInfo, {allowDuplicates: false, uuidIsHash: true});\r\n                        }\r\n\r\n                    });\r\n\r\n                promises.push(promise);\r\n\r\n            });\r\n\r\n            return Q.all(promises).then(updateFileList);\r\n        },\r\n\r\n        /**\r\n         * Get an array of incomplete files from storage-database\r\n         *\r\n         * @method getListOfIncompleteFiles\r\n         * @return {Promise}\r\n         */\r\n        getIncompleteFileList: function () {\r\n            return _db.findAndReduceByObject('files', {filterDuplicates: false}, {projectUuid: project.uuid, isComplete: false});\r\n        },\r\n\r\n        /**\r\n         * Get an array of all files from storage-database\r\n         *\r\n         * @method getFileList\r\n         * @return {Promise}\r\n         */\r\n        getFileList: function () {\r\n            return _db.findAndReduceByObject('files', {filterDuplicates: false}, {projectUuid: project.uuid});\r\n        },\r\n\r\n\r\n        /**\r\n         * This will download all incomplete files from their urls.\r\n         * Should be used if you know, that there are no other peers in you pool,\r\n         * that can deliver the files you need.\r\n         *\r\n         * @method downloadIncompleteFiles\r\n         * @return [Promise}\r\n         */\r\n        downloadIncompleteFiles: function () {\r\n\r\n            // Get incomplete files from database\r\n            return this.getIncompleteFileList()\r\n                .then(function (files) {\r\n\r\n                    var promises = [];\r\n\r\n                    files.forEach(function (file) {\r\n\r\n                        var deferred = Q.defer();\r\n                        promises.push(deferred.promise);\r\n\r\n                        downloadViaXHR(file)\r\n                            .progress(function (data) {\r\n\r\n                                // We gort some chunks\r\n                                if (data.blob && data.position) {\r\n                                    _db.update('files', {uuid: file.uuid, size: data.totalSize, position: data.position}, {uuidIsHash: true})\r\n                                        .then(function () {\r\n                                            _self.write(file, data.blob, data.position);\r\n                                        });\r\n                                }\r\n\r\n                                // We only got some info\r\n                                else {\r\n                                    _db.update('files', {uuid: file.uuid, size: data.totalSize}, {uuidIsHash: true})\r\n                                }\r\n\r\n                            })\r\n                            .catch(function (err) {\r\n                                logger.error('FileSystem', file.uri, 'error during download!');\r\n                            })\r\n                            .done(function (data) {\r\n\r\n                                logger.log('FileSystem', file.uri, 'download complete!');\r\n\r\n                                _db.update('files', {uuid: file.uuid, isComplete: true, position: data.blob.size, size: data.blob.size}, {uuidIsHash: true});\r\n\r\n                                _self.write(file, data.blob).then(updateFileList);\r\n\r\n                                deferred.resolve();\r\n\r\n                            });\r\n\r\n                    });\r\n\r\n                    return Q.all(promises);\r\n\r\n                });\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * Retrieve a filInfo object from storage (db) by uuid (hash).\r\n         *\r\n         * @method getFileInfoByUuid\r\n         *\r\n         * @param uuid\r\n         * @return {Object}\r\n         */\r\n        getFileInfoByUuid: function (uuid) {\r\n            return _db.read('files', uuid, {uuidIsHash: true});\r\n        },\r\n\r\n\r\n        /**\r\n         * Retrieve a fileInfo object from storage by url.\r\n         *\r\n         * @method getFileInfoByUri\r\n         *\r\n         * @param uri\r\n         * @return {Array} can be multiple files\r\n         */\r\n        getFileInfoByUri: function (uri) {\r\n            return _db.findAndReduceByObject('files', {}, {uri: uri});\r\n        },\r\n\r\n        /**\r\n         * etrieve a fileInfo object from storage by name.\r\n         *\r\n         * @param name\r\n         * @return {Array}\r\n         */\r\n        getFileInfoByName: function (name) {\r\n            return _db.findAndReduceByObject('files', {}, {name: name});\r\n        },\r\n\r\n        /**\r\n         * Will delete all files/folders inside the project-dir recursively\r\n         * as well as the references (fileInfo) in database\r\n         *\r\n         * @method clear\r\n         * @return {Promise}\r\n         */\r\n        clear: function () {\r\n            var deferred = Q.defer();\r\n\r\n            // Delete form filesystem\r\n            _fs.root.getDirectory(project.uuid, {}, function (dirEntry) {\r\n\r\n                dirEntry.removeRecursively(function () {\r\n\r\n                    deferred.resolve();\r\n                }, deferred.reject);\r\n\r\n            }, deferred.reject);\r\n\r\n\r\n            return deferred.promise\r\n                .then(_self.getFileList)\r\n                .then(function (files) {\r\n                    var promises = [];\r\n\r\n                    //Delete from database\r\n                    files.forEach(function (file) {\r\n                        promises.push(_db.remove('files', file.uuid, {uuidIsHash: true}));\r\n                    });\r\n\r\n                    return Q.all(promises);\r\n                }).then(function () {\r\n                    logger.log('FileStorage', 'removed all files/folders from file-system!');\r\n                    return updateFileList();\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n})\r\n;","\n/**\r\n * Storage\r\n *\r\n * @module Storage\r\n * @class Storage\r\n * @extends MuskepeerModule\r\n */\r\n\r\ndefine('storage/index',['q', './database', './filesystem', 'project', 'muskepeer-module'], function (Q, database, fileSystem, project, MuskepeerModule) {\r\n\r\n\r\n        var module = new MuskepeerModule();\r\n\r\n        /**\r\n         * Get all uuids from the documents stored in a specific store\r\n         *\r\n         * @private\r\n         * @method getUuidListFromStore\r\n         *\r\n         * @param storeName\r\n         * @return {Promise}\r\n         */\r\n        function getUuidListFromStore(storeName) {\r\n            var deferred = Q.defer();\r\n\r\n            module.db.findAndReduceByObject(storeName, {filterDuplicates: false}, {projectUuid: project.uuid}).then(function (results) {\r\n                deferred.resolve(_.map(results, function (result) {\r\n                    return result.uuid;\r\n                }));\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n\r\n        /**\r\n         * Get the internalList from storage and compare to a given list of uuids.\r\n         * Only the difference from both lists will be returned.\r\n         * Used for synchronization of two peers.\r\n         *\r\n         * @private\r\n         * @method getDifferenceFromStoreAndExternalList\r\n         *\r\n         * @param storeName\r\n         * @param externalList\r\n         * @return {Promise}\r\n         */\r\n        function getDifferenceFromStoreAndExternalList(storeName, externalList) {\r\n            var deferred = Q.defer();\r\n\r\n            getUuidListFromStore(storeName)\r\n                .then(function (internalList) {\r\n                    deferred.resolve(_.difference(externalList, internalList))\r\n                });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        return module.extend({\r\n\r\n            /**\r\n             * Initialize Storage Module\r\n             *\r\n             * @method init\r\n             * @return {Promise}\r\n             */\r\n            init: function () {\r\n                return database.init()\r\n                    .then(function () {\r\n                        logger.log('Database', 'ready');\r\n                        return fileSystem.init(database);\r\n                    })\r\n                    .then(function () {\r\n\r\n                        logger.log('FileSystem', 'ready');\r\n                        module.db = database;\r\n                        module.fs = fileSystem;\r\n                        module.isReady = true;\r\n                    });\r\n            },\r\n\r\n            /**\r\n             * @property isReady\r\n             * @type {Boolean}\r\n             */\r\n            isReady: false,\r\n            db: null,\r\n            fs: null,\r\n\r\n\r\n            /**\r\n             * Get a list of all files (their uuids) from storage\r\n             *\r\n             * @method getFileUuidsAsArray\r\n             * @return {Promise}\r\n             */\r\n            getFileUuidsAsArray: function () {\r\n                return getUuidListFromStore('files');\r\n            },\r\n\r\n            /**\r\n             * Get a list of all jobs (their uuids) from storage\r\n             *\r\n             * @method getJobUuidsAsArray\r\n             * @return {Promise}\r\n             */\r\n            getJobUuidsAsArray: function () {\r\n                return getUuidListFromStore('jobs');\r\n            },\r\n\r\n            /**\r\n             * Get a list of all results (their uuids) from storage\r\n             *\r\n             * @method getResultUuidsAsArray\r\n             * @return {Promise}\r\n             */\r\n            getResultUuidsAsArray: function () {\r\n                return getUuidListFromStore('results');\r\n            },\r\n\r\n\r\n            /**\r\n             * Compare internalList and externalList of files\r\n             *\r\n             * @method getMissingFileUuidsAsArray\r\n             * @param externalList\r\n             * @returns {Promise}\r\n             */\r\n            getMissingFileUuidsAsArray: function (externalList) {\r\n                return getDifferenceFromStoreAndExternalList('files', externalList);\r\n            },\r\n\r\n\r\n            /**\r\n             * Compare internalList and externalList of jobs\r\n             *\r\n             * @method getMissingJobUuidsAsArray\r\n             * @param externalList\r\n             * @returns {Promise}\r\n             */\r\n            getMissingJobUuidsAsArray: function (externalList) {\r\n                return getDifferenceFromStoreAndExternalList('jobs', externalList);\r\n            },\r\n\r\n\r\n            /**\r\n             * Compare internalList and externalList of results\r\n             *\r\n             * @method getMissingResultUuidsAsArray\r\n             * @param externalList\r\n             * @returns {Promise}\r\n             */\r\n            getMissingResultUuidsAsArray: function (externalList) {\r\n                return getDifferenceFromStoreAndExternalList('results', externalList);\r\n            }\r\n        });\r\n\r\n    }\r\n);","\n/**\r\n * @class Jobs\r\n * @module Jobs\r\n */\r\n\r\n\r\ndefine('computation/collection/jobs',['q', 'storage/index', 'project'], function (Q, storage, project) {\r\n\r\n    var module = {};\r\n\r\n    /**\r\n     * @private\r\n     * @method getJobsFromStorage\r\n     * @param {Boolean} filterFinished\r\n     * @param {Boolean} filterLocked\r\n     * @return {Promise}\r\n     */\r\n    function getJobsFromStorage(filterFinished, filterLocked) {\r\n\r\n        filterFinished = filterFinished || false;\r\n        filterLocked = filterLocked || false;\r\n\r\n        var filter = {\r\n            projectUuid: project.uuid\r\n        };\r\n\r\n        if (filterFinished) {\r\n            filter.isComplete = false;\r\n        }\r\n\r\n        if (filterLocked) {\r\n            filter.isLocked = false;\r\n        }\r\n\r\n        return storage.db.findAndReduceByObject('jobs', {filterDuplicates: false}, filter);\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * @property\r\n     * @type {Number}\r\n     */\r\n    module.size = 0;\r\n\r\n\r\n    /**\r\n     * Wiil return true if the job was added, false it wasn't.\r\n     *\r\n     * @method add\r\n     * @param {Job} job\r\n     * @return {Promise}\r\n     */\r\n    module.add = function (job) {\r\n\r\n        //Valid job?\r\n        if (!job.uuid) return null;\r\n\r\n        return storage.db.has('jobs', job.uuid, {uuidIsHash: true})\r\n            .then(function (exists) {\r\n                if (exists) {\r\n                    // Not new, but finished\r\n                    if (job.isComplete) {\r\n                        return module.markJobAsComplete(job)\r\n                            .then(function () {\r\n                                return true;\r\n                            })\r\n                    }\r\n                    // Not new, not finished\r\n                    else {\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n                // Store\r\n                return storage.db.save('jobs', job, {uuidIsHash: true});\r\n            })\r\n            .then(function () {\r\n                return true;\r\n            });\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * @method clear\r\n     * @return {Promise}\r\n     */\r\n    module.clear = function () {\r\n        return storage.db.clear(['jobs']);\r\n    };\r\n\r\n\r\n    /**\r\n     * @method getNextAvailableJob\r\n     * @returns {}\r\n     */\r\n    module.getNextAvailableJob = function () {\r\n        var deferred = Q.defer(),\r\n            position;\r\n\r\n        getJobsFromStorage(true, true).then(function (jobs) {\r\n\r\n            if (jobs.length > 0) {\r\n                // We don't take the first, but any random one!\r\n                //deferred.resolve(jobs.shift());\r\n                position = (Math.random() * jobs.length | 0);\r\n                var job = jobs.splice(position, 1)[0];\r\n                deferred.resolve(job);\r\n            }\r\n            else {\r\n                deferred.resolve(null);\r\n            }\r\n        });\r\n\r\n        return deferred.promise;\r\n\r\n    };\r\n\r\n    /**\r\n     * @method getJobByUuid\r\n     * @param {String} uuid\r\n     * @return {Promise}\r\n     */\r\n    module.getJobByUuid = function (uuid) {\r\n        return storage.db.read('jobs', uuid, {uuidIsHash: true});\r\n    };\r\n\r\n\r\n    /**\r\n     * @method lockJob\r\n     * @param {Job} job\r\n     * @return {Promise}\r\n     */\r\n    module.lockJob = function (job) {\r\n        if (project.computation.jobs.lock) {\r\n            return storage.db.update('jobs', {uuid: job.uuid, locktime: Date.now(), isLocked: true}, {uuidIsHash: true});\r\n        }\r\n        else return Q();\r\n    };\r\n\r\n    /**\r\n     * @method unlockJob\r\n     * @param {Job} job\r\n     * @return {Promise}\r\n     */\r\n    module.unlockJob = function (job) {\r\n        if (project.computation.jobs.lock) {\r\n            return storage.db.update('jobs', {uuid: job.uuid, locktime: null, isLocked: false}, {uuidIsHash: true});\r\n        }\r\n        else return Q();\r\n    };\r\n\r\n    /**\r\n     * @method markJobAsComplete\r\n     * @param {Job} job\r\n     * @return {Promise}\r\n     */\r\n    module.markJobAsComplete = function (job) {\r\n        return storage.db.update('jobs', {uuid: job.uuid, isComplete: true}, {uuidIsHash: true})\r\n    };\r\n\r\n    /**\r\n     * @method remove\r\n     * @param {Job} job\r\n     * @return {Promise}\r\n     */\r\n    module.remove = function (job) {\r\n        return storage.db.remove('jobs', job.uuid);\r\n    };\r\n\r\n\r\n    return module;\r\n\r\n});\r\n","\n/**\r\n * @class Results\r\n * @module Results\r\n */\r\n\r\n\r\ndefine('computation/collection/results',['q', 'storage/index', 'project'], function (Q, storage, project) {\r\n\r\n        var module = {};\r\n\r\n        /**\r\n         * @private\r\n         * @method getResultsFromStorage\r\n         * @param {Boolean} filterValidated\r\n         * @return {Promise}\r\n         */\r\n        function getResultsFromStorage(filterValidated) {\r\n\r\n            filterValidated = filterValidated || false;\r\n\r\n            var filter = {\r\n                projectUuid: project.uuid\r\n            };\r\n\r\n            if (filterValidated) {\r\n                filter.isValid = true;\r\n            }\r\n\r\n            return storage.db.findAndReduceByObject('results', {filterDuplicates: false}, filter);\r\n\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * @property\r\n         * @type {Number}\r\n         */\r\n        module.size = 0;\r\n\r\n\r\n        /**\r\n         * Adds a result to the storage. If its new will return true,\r\n         * if it's an update it will return false;\r\n         *\r\n         * @method add\r\n         * @param {Result} result\r\n         * @return {Promise}\r\n         */\r\n        module.add = function (result) {\r\n\r\n            // Already existent?\r\n            return storage.db.has('results', result.uuid, {uuidIsHash: true})\r\n                .then(function (exists) {\r\n                    if (!exists) {\r\n                        // Is new\r\n                        return storage.db.save('results', result, {uuidIsHash: true})\r\n                            .then(function () {\r\n                                return true;\r\n                            });\r\n                    }\r\n                    // Is an update\r\n                    else return module.update(result);\r\n\r\n                })\r\n        };\r\n\r\n        /**\r\n         * Update a result, will return true, if the result really changed.\r\n         *\r\n         * @method update\r\n         * @param result\r\n         * @return {Boolean}\r\n         */\r\n        module.update = function (result) {\r\n\r\n            // Without enabled validation, there updating a result is not allowed\r\n            // If it's already valid, there is no need, for the whole process\r\n            if (!project.computation.results.validation.enabled || result.isValid) {\r\n                return false;\r\n            }\r\n\r\n            // Read stored result\r\n            return storage.db.read('results', result.uuid, {uuidIsHash: true})\r\n\r\n                .then(function (resultFromStorage) {\r\n\r\n                    // No need to update\r\n                    if (resultFromStorage.isValid || resultFromStorage.iteration >= project.computation.results.validation.iterations) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Increase iterations, then Update,\r\n                    result.iteration = resultFromStorage.iteration + 1;\r\n\r\n                    // Already did enough iterations, result is now valid\r\n                    if (result.iteration >= project.computation.results.validation.iterations) {\r\n                        result.isValid = true;\r\n                    }\r\n\r\n                    // Update result\r\n                    return storage.db.update('results', result, {uuidIsHash: true});\r\n\r\n\r\n                }).then(function () {\r\n                    // We made changes!\r\n                    return true;\r\n                })\r\n\r\n\r\n        };\r\n\r\n        /**\r\n         * @method clear\r\n         * @return {Promise}\r\n         */\r\n        module.clear = function () {\r\n            return storage.db.clear(['results']);\r\n        };\r\n\r\n\r\n        /**\r\n         * @method getResultByUuid\r\n         * @param {String} uuid\r\n         * @return {Promise}\r\n         */\r\n        module.getResultByUuid = function (uuid) {\r\n            return storage.db.read('results', uuid, {uuidIsHash: true});\r\n        };\r\n\r\n\r\n        /**\r\n         * @method isValid\r\n         * @param result\r\n         * @return {Promise}\r\n         */\r\n        module.isValid = function (result) {\r\n            return storage.db.read('results', result.uuid, {uuidIsHash: true})\r\n                .then(function (resultFromStorage) {\r\n                    return resultFromStorage && resultFromStorage.isValid === true;\r\n                });\r\n        };\r\n\r\n\r\n        /**\r\n         * @method allValid\r\n         * @return {Promise}\r\n         */\r\n        module.allValid = function () {\r\n            return getResultsFromStorage(true)\r\n                .then(function (results) {\r\n                    return results.length === project.computation.results.expected;\r\n                });\r\n\r\n        };\r\n\r\n\r\n        return module;\r\n\r\n    }\r\n);\r\n","\n/**\r\n * @class Worker\r\n */\r\n\r\ndefine('computation/model/thread',['eventemitter2'], function (EventEmitter) {\r\n\r\n\r\n    return function Thread(url) {\r\n\r\n        var _self = this,\r\n            _webworker,\r\n            _ee = new EventEmitter({delimiter: ':'});\r\n\r\n        this.id = null;\r\n        this.type = null;\r\n\r\n        this.emit = _ee.emit;\r\n        this.on = _ee.on;\r\n        this.off = _ee.off;\r\n        this.onAny = _ee.onAny;\r\n        this.offAny = _ee.onAny;\r\n\r\n        this.isRunning = false;\r\n        this.isPaused = false;\r\n\r\n        this.isIdle = false;\r\n\r\n        function workerMessageHandler(e) {\r\n            _self.emit(e.data.type, {target: _self, data: e.data.data });\r\n        }\r\n\r\n        function workerErrorHandler(e) {\r\n            logger.log('Thread (' + _self.type + ' ' + _self.id + ')', 'error occured', e);\r\n        }\r\n\r\n        this.start = function () {\r\n\r\n            _webworker = new Worker(url);\r\n            _webworker.addEventListener('message', workerMessageHandler, false);\r\n            _webworker.addEventListener('error', workerErrorHandler, false);\r\n\r\n            this.isRunning = true;\r\n            this.isPaused = false;\r\n\r\n            _webworker.postMessage({cmd: 'start'});\r\n\r\n        };\r\n\r\n        this.stop = function () {\r\n            _webworker.postMessage({cmd: 'stop'});\r\n            _webworker.removeEventListener('message', workerMessageHandler);\r\n            _webworker.removeEventListener('error', workerErrorHandler);\r\n            _webworker.terminate();\r\n            _webworker = null;\r\n            this.isRunning = false;\r\n            this.isPaused = true;\r\n        };\r\n\r\n        this.pause = function () {\r\n            _webworker.postMessage({cmd: 'pause'});\r\n            this.isPaused = true;\r\n            this.isRunning = false;\r\n        };\r\n\r\n        this.resume = function () {\r\n            _webworker.postMessage({cmd: 'resume'});\r\n            this.isPaused = false;\r\n            this.isRunning = true;\r\n        };\r\n\r\n        this.pushJob = function (job) {\r\n            this.isIdle = false;\r\n            _webworker.postMessage({cmd: 'job', job: job});\r\n        };\r\n\r\n        this.pushFileAsClone = function (fileInfo, file) {\r\n            _webworker.postMessage({cmd: 'file', fileInfo: fileInfo, file: file});\r\n        };\r\n\r\n\r\n        this.pushFileAsTransferableObject = function (fileInfo, file) {\r\n            var transfer = {\r\n                cmd: 'file',\r\n                fileInfo: fileInfo,\r\n                file: file\r\n            };\r\n            _webworker.postMessage(transfer, [transfer.file]);\r\n        };\r\n\r\n        this.pushResult = function (result) {\r\n            _webworker.postMessage({cmd: 'result', result: result});\r\n        };\r\n\r\n    };\r\n});","\n/**\r\n * @module Pool\r\n * @class Pool\r\n */\r\n\r\ndefine('computation/model/pool',['eventemitter2', 'computation/index', '../model/thread', 'settings'], function (EventEmitter, computation, Thread, settings) {\r\n\r\n\r\n    return function Pool(type, url, threadAmount) {\r\n\r\n        this.type = type;\r\n\r\n\r\n        var _self = this,\r\n            _threads = [],\r\n            _ee = new EventEmitter({delimiter: ':'});\r\n\r\n        this.emit = _ee.emit;\r\n        this.on = _ee.on;\r\n        this.off = _ee.off;\r\n        this.onAny = _ee.onAny;\r\n        this.offAny = _ee.offAny;\r\n        this.removeAllListeners = _ee.removeAllListeners;\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method workerEventHandler\r\n         * @param {Object} e\r\n         */\r\n        function threadEventHandler(e) {\r\n            _self.emit(this.event, e);\r\n        }\r\n\r\n        /**\r\n         * Amount of worker-instances\r\n         * @property size\r\n         *\r\n         */\r\n        this.size = 0;\r\n\r\n\r\n        // Creation\r\n\r\n\r\n        for (var i = 0; i < threadAmount; i++) {\r\n            var thread = new Thread(url);\r\n            thread.id = i + 1;\r\n            thread.type = type;\r\n\r\n            // Pass-through events\r\n            thread.onAny(threadEventHandler);\r\n\r\n            _threads.push(thread);\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * @method getThreadById\r\n         * @param {Number} id\r\n         * @return {Worker}\r\n         */\r\n        this.getThreadById = function (id) {\r\n            return _threads[id - 1];\r\n        };\r\n\r\n        /**\r\n         * @method start\r\n         */\r\n        this.start = function () {\r\n\r\n            logger.log('Computation', this.type + '-Pool', 'started');\r\n\r\n            _threads.forEach(function (thread) {\r\n                thread.start();\r\n            });\r\n\r\n            this.size = _threads.length;\r\n        };\r\n\r\n\r\n        /**\r\n         * @method stop\r\n         */\r\n        this.stop = function () {\r\n\r\n            logger.log('Computation', this.type + '-Pool', 'stopped');\r\n\r\n            _threads.forEach(function (thread) {\r\n                thread.stop();\r\n                thread.offAny(threadEventHandler);\r\n            });\r\n\r\n            // Destroying\r\n            _threads = [];\r\n\r\n            this.size = 0;\r\n        };\r\n\r\n\r\n        /**\r\n         * @method pause\r\n         */\r\n        this.pause = function () {\r\n            _threads.forEach(function (thread) {\r\n                thread.pause();\r\n            });\r\n        };\r\n\r\n\r\n        /**\r\n         * @method resume\r\n         */\r\n        this.resume = function () {\r\n            _threads.forEach(function (thread) {\r\n                thread.resume();\r\n            });\r\n        };\r\n\r\n\r\n        /**\r\n         * @method getIdleThreads\r\n         * @return {Array}\r\n         */\r\n        this.getIdleThreads = function () {\r\n            return _.filter(_threads, function (thread) {\r\n                return thread.isIdle === true;\r\n            });\r\n        }\r\n\r\n\r\n    };\r\n});","\ndefine('computation/model/job',['crypto/index', 'settings'], function (crypto, settings) {\r\n\r\n\r\n    /**\r\n     * @class Job\r\n     * @constructor\r\n     * @param {Object} parameters\r\n     */\r\n    return function Job(parameters) {\r\n\r\n        this.isLocked = false;\r\n        this.isComplete = false;\r\n\r\n        this.parameters = parameters;\r\n        this.uuid = crypto.hash(this.parameters);\r\n\r\n        this.peerUuid = settings.uuid;\r\n\r\n        return this;\r\n    };\r\n});","\ndefine('computation/model/result',['crypto/index', 'settings'], function (crypto, settings) {\r\n\r\n    /**\r\n     * @class Result\r\n     * @constructor\r\n     * @param {Object} data\r\n     */\r\n    return function Result(data) {\r\n\r\n        this.data = data.result;\r\n        this.uuid = crypto.hash(data);\r\n\r\n        this.peerUuid = settings.uuid;\r\n\r\n        if (data.job) {\r\n            this.jobUuid = data.job.uuid;\r\n        }\r\n\r\n        this.iteration = 1;\r\n        this.timestamp = Date.now();\r\n\r\n        this.isValid = false;\r\n    };\r\n});","\n/**\r\n *\r\n * @module Computation\r\n * @class Computation\r\n * @extends MuskepeerModule\r\n */\r\n\r\ndefine('computation/index',['q', 'muskepeer-module', 'storage/index', 'settings', 'project', 'crypto/index', './collection/jobs', './collection/results', './model/pool', './model/job', './model/result'],\r\n\r\n\r\n    function (Q, MuskepeerModule, storage, settings, project, crypto, jobs, results, Pool, Job, Result) {\r\n\r\n        var module = new MuskepeerModule(),\r\n            countTimer,\r\n            resultCountTimer,\r\n            jobCountTimer;\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method allFound\r\n         * @param type\r\n         * @param expected\r\n         * @return {Promise}\r\n         */\r\n        function allFound(type, expected) {\r\n\r\n            return storage.db.count(type)\r\n                .then(function (amount) {\r\n                    var deferred = Q.defer();\r\n\r\n                    logger.log('Computation', amount, type);\r\n\r\n                    // Update the size\r\n                    if (type === 'results') results.size = amount;\r\n                    else jobs.size = amount;\r\n\r\n                    // We don't know how much to expect, so we can't say\r\n                    if (!expected || expected < 0 || !_.isFinite(expected)) {\r\n                        deferred.resolve(false);\r\n                    }\r\n\r\n                    // We already have all found?\r\n                    else if (amount >= expected) {\r\n                        // Need to check validity?\r\n                        if (type === 'results' && project.computation.results.validation.enabled) {\r\n\r\n                            results.allValid()\r\n                                .then(function (answer) {\r\n                                    if (answer) {\r\n                                        logger.log('Computation', 'All results are valid!');\r\n                                    }\r\n                                    else {\r\n                                        logger.log('Computation', 'Results are not all valid!');\r\n                                    }\r\n                                    deferred.resolve(answer);\r\n                                });\r\n                        }\r\n                        else {\r\n                            logger.log('Computation', 'All', type, 'found!');\r\n                            deferred.resolve(true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        deferred.resolve(false);\r\n                    }\r\n\r\n                    return deferred.promise;\r\n\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method createThreadPool\r\n         *\r\n         * @param type\r\n         * @param url\r\n         * @return {Promise}\r\n         */\r\n        function createThreadPool(type, url) {\r\n\r\n            var expected = project.computation.jobs.expected,\r\n                storeName = 'jobs';\r\n\r\n            if (type === module.WORKER) {\r\n                expected = project.computation.results.expected;\r\n                storeName = 'results';\r\n            }\r\n\r\n            return allFound(storeName, expected)\r\n                .then(function (isComplete) {\r\n\r\n                    // No need to create a pool if it's already complete\r\n                    if (isComplete) {\r\n                        logger.log('Computation', 'Already finished, not creating a ' + type + 'Pool!');\r\n                        return Q();\r\n                    }\r\n                    else {\r\n                        // Get the cached script from local fileSystem\r\n                        return storage.fs.getFileInfoByUri(url)\r\n                            .then(function (fileInfos) {\r\n                                return storage.fs.readFileAsObjectUrl(fileInfos[0]);\r\n                            })\r\n                            .then(function (objectURL) {\r\n\r\n                                var amount = 1;\r\n\r\n                                if (type === module.WORKER) {\r\n\r\n                                    if (project.computation.workers.multipleAllowed) {\r\n                                        amount = settings.maxWorkers;\r\n                                    }\r\n\r\n                                    module.workers = new Pool(module.WORKER, objectURL, amount);\r\n                                }\r\n                                else {\r\n\r\n                                    if (project.computation.factories.multipleAllowed) {\r\n                                        amount = settings.maxFactories;\r\n                                    }\r\n\r\n                                    module.factories = new Pool(module.FACTORY, objectURL, amount);\r\n                                }\r\n\r\n                            });\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * Create worker instances\r\n         *\r\n         * @private\r\n         * @method createWorkers\r\n         * @return {Promise}\r\n         */\r\n        function createWorkers() {\r\n\r\n            // No need for Workers\r\n            if (!project.computation.workers.enabled) {\r\n                logger.log('Computation', 'Not using Workers');\r\n                return Q();\r\n            }\r\n            // Already initiated?\r\n            else if (module.workers) {\r\n                return Q();\r\n            }\r\n\r\n            // Instantiate workers\r\n            else {\r\n                logger.log('Computation', 'Creating Workers');\r\n\r\n                return createThreadPool(module.WORKER, project.computation.workers.url)\r\n                    .then(function () {\r\n                        if (module.workers) addEventListenersToPool(module.workers);\r\n                    })\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * Create jobFactory\r\n         *\r\n         * @private\r\n         * @method createFactories\r\n         * @return {Promise}\r\n         */\r\n        function createFactories() {\r\n\r\n            // No need for Workers\r\n            if (!project.computation.factories.enabled) {\r\n                logger.log('Computation', 'Not using Factories');\r\n                return Q();\r\n            }\r\n            // Already initiated?\r\n            else if (module.factories) {\r\n                return Q();\r\n            }\r\n\r\n            // Instantiate workers\r\n            else {\r\n\r\n                return createThreadPool(module.FACTORY, project.computation.factories.url)\r\n                    .then(function () {\r\n                        if (module.factories)  addEventListenersToPool(module.factories);\r\n                    })\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method addEventListenersToPool\r\n         */\r\n        function addEventListenersToPool(pool) {\r\n            pool.on('result:push', poolResultFoundHandler);\r\n            pool.on('result:pull', poolResultRequiredHandler);\r\n\r\n            pool.on('job:push', poolJobFoundHandler);\r\n            pool.on('job:pull', poolJobRequiredHandler);\r\n\r\n            pool.on('file:push', poolFileFoundHandler);\r\n            pool.on('file:pull', poolFileRequiredHandler);\r\n\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @method removeEventListenersFromPool\r\n         */\r\n        function removeEventListenersFromPool(pool) {\r\n            pool.removeAllListeners();\r\n        }\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * job:push from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolJobFoundHandler\r\n         */\r\n        function poolJobFoundHandler(e) {\r\n\r\n            var job = new Job(e.data);\r\n\r\n            // Add job to queue (if redundant it will be ignored)\r\n            jobs.add(job).then(function (isNew) {\r\n                if (isNew) {\r\n                    logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'found a new job');\r\n                    module.emit('job:push', job);\r\n\r\n                    // Throw the job in the pool\r\n                    module.pushJobToAwaitingWorker(job);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * job:pull from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolJobRequiredHandler\r\n         */\r\n        function poolJobRequiredHandler(e) {\r\n\r\n            // Specific job?\r\n            if (e.data && e.data.uuid) {\r\n\r\n                logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'needs a specific job');\r\n\r\n                jobs.getJobByUuid(e.data.uuid).then(function (job) {\r\n                    if (job) {\r\n                        e.target.pushJob(job);\r\n                    }\r\n                });\r\n            }\r\n            // Use next job in queue\r\n            else {\r\n\r\n                logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'needs a job');\r\n\r\n                jobs.getNextAvailableJob()\r\n                    .then(function (job) {\r\n\r\n                        if (!job) {\r\n                            logger.log('Computation', 'No more jobs left!');\r\n                            // Mark the thread as idle\r\n                            e.target.isIdle = true;\r\n                            return;\r\n                        }\r\n\r\n                        //Lock job\r\n                        jobs.lockJob(job)\r\n                            .then(function () {\r\n\r\n                                // Need to publish lock?\r\n                                if (project.computation.jobs.lock) {\r\n                                    module.emit('job:lock', {uuid: job.uuid})\r\n                                }\r\n\r\n                                e.target.pushJob(job);\r\n                            });\r\n\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * result:push from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolResultFoundHandler\r\n         */\r\n        function poolResultFoundHandler(e) {\r\n\r\n            var result = new Result(e.data),\r\n                promise = Q();\r\n\r\n            // Using Jobs-Locking?\r\n            if (project.computation.jobs.lock && result.jobUuid) {\r\n                // Unlock the job\r\n                promise = jobs.unlockJob({uuid: result.jobUuid})\r\n                    .then(function () {\r\n                        module.emit('job:unlock', {uuid: result.jobUuid});\r\n                    });\r\n            }\r\n\r\n            return promise\r\n                .then(function () {\r\n                    return results.add(result)\r\n                })\r\n                .then(function (hasChanged) {\r\n\r\n                    if (hasChanged) {\r\n\r\n                        logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'found a new result');\r\n\r\n                        // Inform about new or changed result\r\n                        module.emit('result:push', result);\r\n\r\n                        // What about the job?\r\n                        if (project.computation.factories.enabled && result.jobUuid) {\r\n\r\n                            if (results.isValid(result)) {\r\n                                return jobs.markJobAsComplete({uuid: result.jobUuid})\r\n                                    .then(function () {\r\n                                        module.emit('job:push', {job: jobs.getJobByUuid(result.jobUuid)});\r\n                                    });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * result:pull from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolResultRequiredHandler\r\n         */\r\n        function poolResultRequiredHandler(e) {\r\n\r\n            if (!e.data.uuid) return;\r\n\r\n            logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'needs a specific result');\r\n\r\n            // Get result from storage\r\n            storage.db.read('results', e.data.uuid)\r\n                .then(function (result) {\r\n                    e.target.pushResult(result);\r\n                });\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * file:push from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolFileFoundHandler\r\n         */\r\n        function poolFileFoundHandler(e) {\r\n            //TODO pass a url or name, actually name would be better\r\n            logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'found a file');\r\n        }\r\n\r\n        /**\r\n         * Event-Listener, listens for\r\n         * file:pull from Thread-Pool\r\n         *\r\n         * @private\r\n         * @method poolFileRequiredHandler\r\n         */\r\n        function poolFileRequiredHandler(e) {\r\n\r\n            var promise,\r\n                fileInfo;\r\n\r\n            if (!e.data || ( !e.data.url && !e.data.name )) {\r\n                return;\r\n            }\r\n\r\n            // Get file by url\r\n            if (e.data.url) {\r\n                logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'needs a specific file (gave url)');\r\n                promise = storage.fs.getFileInfoByUri(e.data.url);\r\n\r\n            }\r\n            // Get file by name\r\n            else if (e.data.name) {\r\n                logger.log('Thread (' + e.target.type + ' ' + e.target.id + ')', 'needs a specific file (gave name: ' + e.data.name + ')');\r\n                promise = storage.fs.getFileInfoByName(e.data.name);\r\n            }\r\n\r\n            promise\r\n                .then(function (info) {\r\n                    fileInfo = info[0];\r\n\r\n                    var offset = e.data.offset || 0,\r\n                        completeFile = offset === 0;\r\n\r\n                    switch (e.data.type) {\r\n                        case 'path' :\r\n                            return project.uuid + '/' + fileInfo.uuid;\r\n                            break;\r\n                        case 'blob' :\r\n                            return storage.fs.readFileChunkAsBlob(fileInfo, offset, completeFile);\r\n                            break;\r\n                        case 'dataUrl' :\r\n                            return storage.fs.readFileChunkAsDataUrl(fileInfo, offset, completeFile);\r\n                            break;\r\n                        case 'localUrl' :\r\n                            return storage.fs.readFileAsLocalUrl(fileInfo);\r\n                            break;\r\n                        default :\r\n                        case 'arrayBuffer' :\r\n                            return storage.fs.readFileChunkAsArrayBuffer(fileInfo, offset, completeFile);\r\n                            break;\r\n                    }\r\n\r\n                }).then(function (file) {\r\n\r\n                    // Transfer as transferable Object\r\n                    if (e.data.type === 'arrayBuffer') {\r\n                        e.target.pushFileAsTransferableObject(fileInfo, file)\r\n                    }\r\n                    // Transfer as clone (can get expensive!)\r\n                    else {\r\n                        e.target.pushFileAsClone(fileInfo, file)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method resultCounterCompleteHandler\r\n         * @param e\r\n         */\r\n        function resultCounterCompleteHandler(e) {\r\n\r\n            return allFound('results', project.computation.results.expected)\r\n                .then(function (isComplete) {\r\n                    if (isComplete) module.stopWorkers();\r\n                });\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @method jobCounterCompleteHandler\r\n         * @param e\r\n         */\r\n        function jobCounterCompleteHandler(e) {\r\n            return allFound('jobs', project.computation.jobs.expected)\r\n                .then(function (isComplete) {\r\n                    if (isComplete) module.stopFactories();\r\n                });\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method counterCompleteHandler\r\n         * @param e\r\n         */\r\n        function counterCompleteHandler(e) {\r\n            return module.isComplete()\r\n                .then(function (isComplete) {\r\n                    if (isComplete) module.stop();\r\n                });\r\n        }\r\n\r\n\r\n        return module.extend({\r\n\r\n            /**\r\n             * @property {Boolean} isRunning\r\n             * @default false\r\n             */\r\n            isRunning: false,\r\n            /**\r\n             * @property {Boolean} isPaused\r\n             * @default false\r\n             */\r\n            isPaused: false,\r\n\r\n            /**\r\n             * @property {Object} jobs\r\n             */\r\n            jobs: jobs,\r\n\r\n            /**\r\n             * @property {Object} results\r\n             */\r\n            results: results,\r\n\r\n            workers: null,\r\n            factories: null,\r\n\r\n            WORKER: 'Worker',\r\n            FACTORY: 'Factory',\r\n\r\n\r\n            /**\r\n             * @method start\r\n             */\r\n            start: function () {\r\n\r\n                if (this.isRunning) return;\r\n\r\n                logger.log('Computation', 'Starting');\r\n\r\n                createFactories()\r\n                    .then(createWorkers)\r\n                    .then(function () {\r\n\r\n                        // Start the factories if disabled, won't do anyhting\r\n                        if (module.factories) module.factories.start();\r\n\r\n                        // Start the workers, same as factories\r\n                        if (module.workers) module.workers.start();\r\n\r\n                        // Starting timers\r\n                        countTimer = window.setInterval(counterCompleteHandler, project.computation.testIntervalTime);\r\n                        resultCountTimer = window.setInterval(resultCounterCompleteHandler, project.computation.results.testIntervalTime);\r\n                        jobCountTimer = window.setInterval(jobCounterCompleteHandler, project.computation.jobs.testIntervalTime);\r\n\r\n\r\n                    });\r\n\r\n                this.isRunning = true;\r\n                this.isPaused = false;\r\n\r\n            },\r\n            /**\r\n             * @method pause\r\n             */\r\n            pause: function () {\r\n                logger.log('Computation', 'Pause');\r\n                module.factories.pause();\r\n                module.workers.pause();\r\n                this.isPaused = true;\r\n            },\r\n            /**\r\n             * @method resume\r\n             */\r\n            resume: function () {\r\n                logger.log('Computation', 'Resume');\r\n                module.factories.resume();\r\n                module.workers.resume();\r\n                this.isPaused = false;\r\n            },\r\n            /**\r\n             * @method stop\r\n             */\r\n            stop: function () {\r\n\r\n                if (!this.isRunning) return;\r\n\r\n                logger.log('Computation', 'Stopping');\r\n\r\n                module.stopWorkers();\r\n                module.stopFactories();\r\n\r\n                // Global timer\r\n                window.clearInterval(countTimer);\r\n                countTimer = null;\r\n\r\n\r\n                this.isRunning = false;\r\n            },\r\n\r\n            /**\r\n             * @method stopWorkers\r\n             */\r\n            stopWorkers: function () {\r\n                if (module.workers) {\r\n                    removeEventListenersFromPool(module.workers);\r\n                    module.workers.stop();\r\n                    module.workers = null;\r\n                    window.clearInterval(resultCountTimer);\r\n                    resultCountTimer = null;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @method stopFactories\r\n             */\r\n            stopFactories: function () {\r\n                if (module.factories) {\r\n                    removeEventListenersFromPool(module.factories);\r\n                    module.factories.stop();\r\n                    module.factories = null;\r\n                    window.clearInterval(jobCountTimer);\r\n\r\n                    jobCountTimer = null;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @method isComplete\r\n             * @return {Promise}\r\n             */\r\n            isComplete: function () {\r\n                var isComplete = true;\r\n\r\n                return allFound('results', project.computation.results.expected)\r\n                    .then(function (resultsComplete) {\r\n                        isComplete = resultsComplete;\r\n                        return allFound('jobs', project.computation.jobs.expected)\r\n                    })\r\n                    .then(function (jobsComplete) {\r\n                        return isComplete = isComplete && jobsComplete;\r\n                    })\r\n\r\n            },\r\n\r\n\r\n            /**\r\n             * @method pushJobToAwaitingWorker\r\n             * @returns {Array}\r\n             */\r\n            pushJobToAwaitingWorker: function (job) {\r\n\r\n                // Are there workers at all?\r\n                if (!module.workers) return;\r\n\r\n                var workers = module.workers.getIdleThreads();\r\n\r\n                if (workers.length > 0) {\r\n\r\n                    // Need to publish lock?\r\n                    if (project.computation.jobs.lock) {\r\n                        jobs.lockJob(job).then(function () {\r\n                            module.emit('job:lock', {uuid: job.uuid});\r\n                            workers[0].pushJob(job);\r\n                        });\r\n                    }\r\n                    // No need to lock\r\n                    else {\r\n                        workers[0].pushJob(job);\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    });","\n/**\r\n *\r\n * @module GeoLocation\r\n * @class GeoLocation\r\n * @requires q, project\r\n *\r\n */\r\n\r\ndefine('network/geolocation',['q', 'project'], function (Q, project) {\r\n\r\n    /**\r\n     * Earth-radius in kilometers\r\n     *\r\n     * @private\r\n     * @property EARH_RADIUS\r\n     * @type {Number}\r\n     * @readOnly\r\n     * @static\r\n     * @final\r\n     */\r\n    var EARTH_RADIUS = 6371;\r\n\r\n    /**\r\n     * Internal caching for the location object\r\n     * @private\r\n     * @property location\r\n     * @type Object\r\n     * @default null\r\n     */\r\n    var _location = null;\r\n\r\n    /**\r\n     * Convert angular-value to radian\r\n     * @method deg2grad\r\n     * @private\r\n     * @param deg {Number} Degrees\r\n     * @return {Number}\r\n     */\r\n    function deg2rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Asynchronously get the latitude/longitude of the device using the W3C-API\r\n         * @method getGeoLocation\r\n         * @return {Promise}\r\n         */\r\n        getGeoLocation: function () {\r\n\r\n            var deferred = Q.defer();\r\n\r\n            //don't return the actual location\r\n            if (!project.network.useGeoLocation) {\r\n                deferred.resolve(null);\r\n            }\r\n\r\n            //already cached?\r\n            else if (project.network.useGeoLocation && _location) {\r\n                deferred.resolve(_location);\r\n            }\r\n\r\n            //ask for it\r\n            else {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    function success(position) {\r\n                        //caching\r\n                        _location = {\r\n                            lat: position.coords.latitude,\r\n                            long: position.coords.longitude\r\n                        };\r\n                        deferred.resolve(_location);\r\n                    },\r\n                    function error() {\r\n                        deferred.resolve(_location ? _location : null);\r\n                    },\r\n                    { enableHighAccuracy: true }\r\n                );\r\n            }\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        /**\r\n         * Uses the Haversine formula to calculate the distance between two geoLocations\r\n         *\r\n         * @method getDistanceBetweenTwoLocations\r\n         * @see http://en.wikipedia.org/wiki/Haversine_formula\r\n         *\r\n         * @param {Object} position1\r\n         * @param {Number} position1.lat\r\n         * @param {Number} position1.long\r\n         * @param {Object} [position2]\r\n         * @param {Number} position2.lat\r\n         * @param {Number} position2.long\r\n         *\r\n         * @return [Number] distance in kilometers\r\n         */\r\n        getDistanceBetweenTwoLocations: function (position1, position2) {\r\n\r\n            position2 = position2 || _location;\r\n\r\n            var dLat = deg2rad(position2.lat - position2.lat),\r\n                dLon = deg2rad(position2.long - position1.long),\r\n\r\n                a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\r\n                    + Math.cos(deg2rad(position2.lat)) * Math.cos(deg2rad(position2.lat))\r\n                    * Math.sin(dLon / 2) * Math.sin(dLon / 2),\r\n\r\n                c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n            return EARTH_RADIUS * c;\r\n        }\r\n    };\r\n});","\n/**\r\n *\r\n * @module Network\r\n *\r\n */\r\n\r\ndefine('network/model/node',['lodash', 'q', 'eventemitter2', 'settings', 'project', '../geolocation'], function (_, Q, EventEmitter2, settings, project, geolocation) {\r\n\r\n    var ee = new EventEmitter2({\r\n        wildcard: true,\r\n        delimiter: ':',\r\n        newListener: false,\r\n        maxListeners: 10\r\n    });\r\n\r\n\r\n    /**\r\n     * A Node represents a WebSocketServer which is required\r\n     * for signaling between Peers.\r\n     *\r\n     * @class Node\r\n     * @constructor\r\n     *\r\n     * @param {Object} config\r\n     */\r\n    var Node = function (config) {\r\n\r\n        var self = this;\r\n\r\n        // Event-methods\r\n        this.emit = ee.emit;\r\n        this.on = ee.on;\r\n        this.off = ee.off;\r\n        this.onAny = ee.onAny;\r\n\r\n        this.host = config.host || 'localhost';\r\n        this.port = config.port || 8080;\r\n        this.isSecure = config.isSecure || false;\r\n        this.url = null; //set via WS\r\n        this.id = 0; //for local use only\r\n        this.uuid = config.uuid;\r\n        this.socket = null;\r\n\r\n        this.isConnected = false;\r\n\r\n        /**\r\n         * @method connect\r\n         * @return {Promise}\r\n         */\r\n        this.connect = function () {\r\n\r\n            var deferred = Q.defer();\r\n\r\n            try {\r\n                this.socket = new WebSocket((this.isSecure ? 'wss' : 'ws') + '://' + this.host + ':' + this.port);\r\n                this.url = this.socket.url;\r\n\r\n                //add listeners\r\n                this.socket.addEventListener('message', this.messageHandler);\r\n                this.socket.addEventListener('open', function () {\r\n                    logger.log('Node ' + self.id, self.url, 'connected');\r\n                    self.isConnected = true;\r\n                    deferred.resolve();\r\n                });\r\n\r\n                this.socket.addEventListener('error', function (e) {\r\n                    self.disconnect();\r\n                    logger.log('Node ' + self.id, self.url, 'error');\r\n                });\r\n\r\n                this.socket.addEventListener('close', function (e) {\r\n                    self.disconnect();\r\n                    logger.log('Node ' + self.id, self.url, 'disconnected', e.code + ' : ' + e.reason);\r\n\r\n                    switch (e.code) {\r\n                        case 1011 :\r\n                            logger.log('Node ' + self.id, self.url, 'is idle! Please restart it.');\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                deferred.reject();\r\n                self.disconnect();\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        /**\r\n         * @method\r\n         * @chainable\r\n         * @returns {Node}\r\n         */\r\n        this.disconnect = function () {\r\n            this.socket = null;\r\n            this.isConnected = false;\r\n            return this;\r\n        };\r\n\r\n        this.send = function (cmd, data, waitForResponse) {\r\n\r\n            var self = this,\r\n                deferred = Q.defer();\r\n\r\n            if (!this.isConnected) {\r\n                deferred.reject('Not connected to node!');\r\n                return deferred.promise;\r\n            }\r\n\r\n            if (!data || !_.isObject(data) || _.isEmpty(data)) {\r\n                deferred.reject('Data is not an object/empty!');\r\n                return deferred.promise;\r\n            }\r\n\r\n            if (!cmd) {\r\n                deferred.reject('Command is not defined!');\r\n                return deferred.promise;\r\n            }\r\n\r\n            //add cmd to data\r\n            data.cmd = cmd;\r\n            //add auth token\r\n            data.authToken = settings.authToken;\r\n\r\n            //send data to websocket as String\r\n            this.socket.send(JSON.stringify(data));\r\n\r\n\r\n            // If we need to wait for the answer\r\n            if (waitForResponse) {\r\n\r\n                function responseHandler(e) {\r\n                    var response = JSON.parse(e.data);\r\n                    if (response.cmd === cmd) {\r\n                        self.socket.removeEventListener('message', responseHandler);\r\n                        deferred.resolve(response.data);\r\n                    }\r\n                }\r\n\r\n                this.socket.addEventListener('message', responseHandler);\r\n\r\n                // No need to wait\r\n            } else {\r\n                deferred.resolve();\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.sendAuthentication = function () {\r\n            return geolocation.getGeoLocation()\r\n                .then(function (location) {\r\n                    return self.send('peer:auth', {uuid: settings.uuid, location: location}, true);\r\n                });\r\n\r\n        };\r\n\r\n        this.sendPeerOffer = function (targetPeerUuid, offer) {\r\n\r\n            return geolocation.getGeoLocation()\r\n                .then(function (location) {\r\n                    self.send('peer:offer', {uuid: settings.uuid, targetPeerUuid: targetPeerUuid, offer: offer, location: location}, false);\r\n                });\r\n        };\r\n\r\n        this.sendPeerAnswer = function (targetPeerUuid, answer) {\r\n            return this.send('peer:answer', {uuid: settings.uuid, targetPeerUuid: targetPeerUuid, answer: answer}, false);\r\n        };\r\n\r\n        this.sendPeerCandidate = function (targetPeerUuid, candidate) {\r\n            return this.send('peer:candidate', {uuid: settings.uuid, targetPeerUuid: targetPeerUuid, candidate: candidate}, false);\r\n        };\r\n\r\n        this.getAllRelatedPeers = function () {\r\n            return this.send('peer:list', {projectUuid: project.uuid}, true);\r\n        };\r\n\r\n\r\n        this.messageHandler = function (e) {\r\n            var data = JSON.parse(e.data),\r\n                cmd = data.cmd;\r\n\r\n            logger.log('Node ' + self.id, 'Received', data);\r\n\r\n            switch (cmd.toLowerCase()) {\r\n                case 'peer:offer' :\r\n                    self.emit('peer:offer', {nodeUuid: self.uuid, targetPeerUuid: data.data.targetPeerUuid, offer: data.data.offer, location: data.data.location});\r\n                    break;\r\n                case 'peer:answer' :\r\n                    self.emit('peer:answer', {nodeUuid: self.uuid, targetPeerUuid: data.data.targetPeerUuid, answer: data.data.answer});\r\n                    break;\r\n                case 'peer:candidate' :\r\n                    self.emit('peer:candidate', {nodeUuid: self.uuid, targetPeerUuid: data.data.targetPeerUuid, candidate: data.data.candidate});\r\n                    break;\r\n            }\r\n        };\r\n\r\n\r\n        this.serialize = function () {\r\n            return{\r\n                host: this.host,\r\n                isSecure: this.isSecure,\r\n                port: this.port\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return Node;\r\n});","\n/**\r\n * Collection for Node-Instances\r\n *\r\n * @module Network\r\n * @class Nodes\r\n *\r\n */\r\n\r\ndefine('network/collections/nodes',['q', '../model/node', '../../muskepeer-module'], function (Q, Node, MuskepeerModule) {\r\n\r\n    var _nodes = [],\r\n        module = new MuskepeerModule();\r\n\r\n    return module.extend(\r\n        {\r\n            /**\r\n             * @property list\r\n             * @type {Array}\r\n             */\r\n            list: _nodes,\r\n\r\n            /**\r\n             * @method connect\r\n             * @return {Promise}\r\n             */\r\n            connect: function () {\r\n                var promises = [];\r\n\r\n                logger.log('Nodes', 'Connecting...');\r\n\r\n                _nodes.forEach(function (node) {\r\n                    promises.push(node.connect());\r\n                });\r\n\r\n                return Q.all(promises);\r\n            },\r\n\r\n            /**\r\n             * @method update\r\n             * @param {Array} nodeData\r\n             */\r\n            update: function (nodeData) {\r\n                var node;\r\n                nodeData.forEach(function (data) {\r\n                    node = new Node(data);\r\n\r\n                    node.id = _nodes.length + 1;\r\n\r\n                    // Pass-through events\r\n                    node.onAny(function (e) {\r\n                        module.emit(this.event, e)\r\n                    });\r\n\r\n                    _nodes.push(node);\r\n                });\r\n\r\n                //Update public list\r\n                this.list = _nodes;\r\n            },\r\n\r\n            /**\r\n             * @method getNodeByUrl\r\n             * @param {String} url\r\n             * @return {Node}\r\n             */\r\n            getNodeByUrl: function (url) {\r\n                return _.find(_nodes, function (node) {\r\n                    return node.url === url;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @method getNodeUuidsAsArray\r\n             * @return {Array}\r\n             */\r\n            getNodeUuidsAsArray: function () {\r\n                return _.map(_nodes, function (node) {\r\n                    return node.uuid;\r\n                })\r\n            },\r\n\r\n            /**\r\n             * @method getMissingNodeUuidsAsArray\r\n             * @param {Array} externalList\r\n             * @return {Array}\r\n             */\r\n            getMissingNodeUuidsAsArray: function (externalList) {\r\n                var internalList = module.getNodeUuidsAsArray();\r\n                return _.difference(externalList, internalList);\r\n            },\r\n\r\n\r\n            /**\r\n             * @method getNodeByUuid\r\n             * @param {String} uuid\r\n             * @return {Node}\r\n             */\r\n            getNodeByUuid: function (uuid) {\r\n                return _.find(_nodes, function (node) {\r\n                    return node.uuid === uuid;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @method authenticate\r\n             * @return {Promise}\r\n             */\r\n            authenticate: function () {\r\n                var promises = [];\r\n\r\n                logger.log('Nodes', 'Authenticating...');\r\n\r\n                _nodes.forEach(function (node) {\r\n                    var deferred = Q.defer();\r\n                    node.sendAuthentication()\r\n                        .then(function () {\r\n\r\n                            deferred.resolve();\r\n                        });\r\n                    promises.push(deferred.promise);\r\n\r\n                });\r\n\r\n                return Q.all(promises);\r\n\r\n            },\r\n\r\n            /**\r\n             * @method getRelatedPeers\r\n             * @return {Array}\r\n             */\r\n            getRelatedPeers: function () {\r\n                var promises = [];\r\n\r\n                _nodes.forEach(function (node) {\r\n                    var deferred = Q.defer();\r\n                    node.getAllRelatedPeers().then(function (peers) {\r\n                        //add reference to node, to know where the peer is connected\r\n                        peers.forEach(function (peer) {\r\n                            peer.nodes = [node.uuid];\r\n                        });\r\n                        deferred.resolve(peers);\r\n                    });\r\n                    promises.push(deferred.promise);\r\n\r\n                });\r\n                return Q.all(promises);\r\n            }\r\n        });\r\n\r\n});","\n/**\r\n *\r\n * @module Network\r\n *\r\n */\r\n\r\ndefine('network/model/peer',['lodash', 'q', 'eventemitter2', '../collections/nodes', 'settings', 'project'], function (_, Q, EventEmitter2, nodes, settings, project) {\r\n\r\n    var TIMEOUT_WAIT_TIME = 30000, //30s\r\n        QUEUE_RETRY_TIME = 5,\r\n        ICE_SERVER_SETTINGS = {\r\n            iceServers: settings.iceServers\r\n        };\r\n\r\n// a.k.a mediaConstraint\r\n    var connectionConstraint = {\r\n            optional: [\r\n                {RtpDataChannels: true},\r\n                {DtlsSrtpKeyAgreement: true}\r\n            ],\r\n            mandatory: {\r\n                OfferToReceiveAudio: false,\r\n                OfferToReceiveVideo: false\r\n            }\r\n        },\r\n        channelConstraint = {\r\n        },\r\n        ee = new EventEmitter2({\r\n            wildcard: true,\r\n            delimiter: ':',\r\n            newListener: false,\r\n            maxListeners: 10\r\n        });\r\n\r\n// Handle vendor prefixes\r\n    if (window.webkitRTCPeerConnection) {\r\n        RTCPeerConnection = webkitRTCPeerConnection;\r\n        RTCIceCandidate = window.RTCIceCandidate;\r\n        RTCSessionDescription = window.RTCSessionDescription;\r\n    } else if (window.mozRTCPeerConnection) {\r\n        RTCPeerConnection = mozRTCPeerConnection;\r\n        RTCIceCandidate = mozRTCIceCandidate;\r\n        RTCSessionDescription = mozRTCSessionDescription;\r\n    }\r\n\r\n\r\n    /**\r\n     * A Peer represents another Browser which is connected via\r\n     * WebRTCs DataChannel\r\n     *\r\n     * @class Peer\r\n     * @constructor\r\n     *\r\n     * @param {Object} config\r\n     */\r\n    var Peer = function (config) {\r\n\r\n        var _self = this;\r\n\r\n        this.id = config.id;\r\n\r\n\r\n        // Event-methods\r\n        this.emit = ee.emit;\r\n        this.on = ee.on;\r\n        this.off = ee.off;\r\n        this.onAny = ee.onAny;\r\n\r\n        /**\r\n         * @property connection\r\n         * @type {RTCPeerCpnnection}\r\n         */\r\n        this.connection = undefined;\r\n\r\n        /**\r\n         * @property channel\r\n         * @type {RTCDataChannel}\r\n         */\r\n        this.channel = undefined;\r\n\r\n        /**\r\n         * Indicates if there is a stable conenction to this peer\r\n         * @property isConnected\r\n         * @default false\r\n         * @type {Boolean}\r\n         */\r\n        this.isConnected = false;\r\n\r\n        /**\r\n         * Whether this peer is the initiator of a connection\r\n         * @property isSource\r\n         * @default false\r\n         * @type {Boolean}\r\n         */\r\n        this.isSource = config.isSource || false;\r\n\r\n        /**\r\n         * Whether this peer is the initiator of a connection\r\n         * @property isTarget\r\n         * @default false\r\n         * @type {Boolean}\r\n         */\r\n        this.isTarget = config.isTarget || false;\r\n\r\n        /**\r\n         * Universal unique identifier for this peer\r\n         * @property uuid\r\n         * @type {String}\r\n         */\r\n        this.uuid = config.uuid;\r\n\r\n        /**\r\n         * Geolocation of this peer\r\n         * @property location\r\n         * @type {Object}\r\n         */\r\n        this.location = config.location;\r\n\r\n        /**\r\n         * Distance to this peer in kilometers\r\n         * @property distance\r\n         * @default undefined\r\n         * @type {Number}\r\n         */\r\n        this.distance = undefined;\r\n\r\n        /**\r\n         * Uuids of the nodes this peer is connected to,\r\n         * used to find a signaling-channel.\r\n         * @property nodes\r\n         * @type {Array}\r\n         */\r\n        this.nodes = config.nodes || [];\r\n\r\n\r\n        /**\r\n         * A timestamp to prove when the last timout\r\n         * occured when trying to connect to the peer.\r\n         * @property timeout\r\n         * @default undefined\r\n         * @type {Number}\r\n         */\r\n        this.timeout = undefined;\r\n\r\n        /**\r\n         * List of timers for synchronization\r\n         * @type {Array}\r\n         */\r\n        this.syncTimers = [];\r\n\r\n\r\n        /**\r\n         * Amount of queuedmessages that could not be sent\r\n         *\r\n         * @property queuedMessageAmount\r\n         * @default 0\r\n         * @type {Number}\r\n         */\r\n        this.queuedMessageAmount = 0;\r\n\r\n\r\n        /**\r\n         * Indicator to tell which protocol is currently used\r\n         * SCTP or SRTP\r\n         *\r\n         * @property protocol\r\n         * @default undefined\r\n         * @type {String}\r\n         */\r\n        this.protocol = undefined;\r\n\r\n\r\n        // Protocol switch SRTP(=default) or SCTP\r\n        if (settings.protocol.toLowerCase() === 'sctp') {\r\n            this.protocol = 'sctp';\r\n            logger.log('Peer ' + _self.id, 'Using SCTP');\r\n\r\n            connectionConstraint = {\r\n                optional: [\r\n                    {RtpDataChannels: false},\r\n                    {DtlsSrtpKeyAgreement: true}\r\n                ],\r\n                mandatory: {\r\n                    OfferToReceiveAudio: false,\r\n                    OfferToReceiveVideo: false\r\n                }\r\n            };\r\n\r\n            channelConstraint = {\r\n                reliable: true\r\n            };\r\n        } else {\r\n            this.protocol = 'srtp';\r\n            logger.log('Peer ' + _self.id, 'Using SRTP');\r\n        }\r\n\r\n\r\n        /**\r\n         * Find a signaling-channel two a given peer\r\n         *\r\n         * @method getSignalChannel\r\n         * @return {Node}\r\n         */\r\n        this.getSignalChannel = function () {\r\n            var signal;\r\n\r\n            signal = _.intersection(nodes.getNodeUuidsAsArray(), this.nodes);\r\n\r\n            //get a sharedNode that we are connected to\r\n            do {\r\n                signal = nodes.getNodeByUuid(signal.shift());\r\n            }\r\n            while (!signal.isConnected);\r\n\r\n            return signal;\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         * @method timerCompleteHandler\r\n         */\r\n        function timerCompleteHandler(e) {\r\n            if (!_self.isConnected) {\r\n                _self.timeout = Date.now();\r\n                _self.emit('peer:timeout');\r\n                logger.log('Peer ' + _self.id, 'Time-out');\r\n\r\n            }\r\n            else _self.timeout = undefined;\r\n        }\r\n\r\n        /* Event Handler Start */\r\n        function iceCandidateHandler(e) {\r\n            //II. The handler is called when network candidates become available.\r\n            if (!e || !e.candidate) return;\r\n\r\n            // III. In the handler, Alice sends stringified candidate data to Eve, via their signaling channel.\r\n            _self.getSignalChannel().sendPeerCandidate(_self.uuid, e.candidate);\r\n\r\n        }\r\n\r\n        function dataChannelHandler(e) {\r\n            logger.log('Peer ' + _self.id, 'Received remote DataChannel');\r\n\r\n            _self.channel = e.channel;\r\n\r\n            _self.channel = _self.channel;\r\n\r\n            _self.channel.onclose = channelCloseHandler;\r\n            _self.channel.onerror = channelErrorHandler;\r\n            _self.channel.onmessage = channelMessageHandler;\r\n            _self.channel.onopen = channelOpenHandler;\r\n\r\n        }\r\n\r\n        function iceConnectionStateChangeHandler(e) {\r\n\r\n            // Everything is fine\r\n            if (_self.connection.iceConnectionState === 'connected' &&\r\n                _self.connection.iceGatheringState === 'complete') {\r\n\r\n                logger.log('Peer ' + _self.id, 'Connection established');\r\n            }\r\n            // Connection has closed\r\n            else if (_self.connection.iceConnectionState === 'disconnected') {\r\n                logger.log('Peer ' + _self.id, 'Connection closed');\r\n\r\n                _self.isConnected = false;\r\n                _self.emit('peer:disconnect', _self);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function negotiationNeededHandler(e) {\r\n\r\n            logger.log('Peer ' + _self.id, 'Negotiation needed');\r\n\r\n            //2. Alice creates an offer (an SDP session description) with the RTCPeerConnection createOffer() method.\r\n            _self.connection.createOffer(function (sessionDescription) {\r\n\r\n                    //3. Alice calls setLocalDescription() with his offer.)\r\n                    _self.connection.setLocalDescription(sessionDescription);\r\n\r\n                    //4. Alice stringifies the offer and uses a signaling mechanism to send it to Eve.\r\n                    _self.getSignalChannel().sendPeerOffer(_self.uuid, sessionDescription);\r\n\r\n                },\r\n                function (err) {\r\n                    logger.error('Peer ' + _self.id, err, 'Was using', _self.protocol, 'protocol.');\r\n                },\r\n                connectionConstraint);\r\n        }\r\n\r\n\r\n        function signalingStateChangeHandler(e) {\r\n        }\r\n\r\n        function channelErrorHandler(e) {\r\n            logger.log('Peer ' + _self.id, 'Channel has an error', e);\r\n        }\r\n\r\n\r\n        function channelMessageHandler(e) {\r\n            var msg;\r\n\r\n            _self.isConnected = true;\r\n\r\n            if (e.data instanceof Blob) {\r\n                msg = {blob: e.data};\r\n            }\r\n            else {\r\n                msg = JSON.parse(e.data);\r\n            }\r\n\r\n            _self.emit('peer:message', _.extend(msg, {target: _self}));\r\n\r\n\r\n        }\r\n\r\n        function channelOpenHandler(e) {\r\n            logger.log('Peer ' + _self.id, 'DataChannel is open');\r\n\r\n            _self.isConnected = true;\r\n            _self.emit('peer:connect', _self);\r\n\r\n        }\r\n\r\n        function channelCloseHandler(e) {\r\n            logger.log('Peer ' + _self.id, 'DataChannel is closed', e);\r\n            _self.isConnected = false;\r\n            _self.emit('peer:disconnect', _self);\r\n        }\r\n\r\n        /* Event Handler END */\r\n\r\n\r\n        /**\r\n         * Create a WebRTC-Connection\r\n         *\r\n         * @method createConnection\r\n         * @return {Promise}\r\n         */\r\n        this.createConnection = function () {\r\n\r\n\r\n            this.isSource = true;\r\n            this.isTarget = false;\r\n\r\n            logger.log('Peer ' + _self.id, 'Creating connection');\r\n\r\n            //1.Alice creates an RTCPeerConnection object.\r\n            _self.connection = new RTCPeerConnection(ICE_SERVER_SETTINGS, connectionConstraint);\r\n\r\n            //I. Alice creates an RTCPeerConnection object with an onicecandidate handler.\r\n\r\n            //Add listeners to connection\r\n            _self.connection.ondatachannel = dataChannelHandler;\r\n            _self.connection.onicecandidate = iceCandidateHandler;\r\n            _self.connection.oniceconnectionstatechange = iceConnectionStateChangeHandler;\r\n            _self.connection.onnegotiationneeded = negotiationNeededHandler;\r\n            _self.connection.onsignalingstatechange = signalingStateChangeHandler;\r\n\r\n\r\n            // Start timeout countdown\r\n            _.delay(timerCompleteHandler, TIMEOUT_WAIT_TIME);\r\n\r\n            try {\r\n                // Create  data-channel\r\n                _self.channel = _self.connection.createDataChannel('Muskepeer', channelConstraint);\r\n            }\r\n            catch (e) {\r\n                // If an error occured here, there is a problem about the connection,\r\n                // so lets do a timeout and maybe retry later\r\n                this.isConnected = false;\r\n                timerCompleteHandler();\r\n                deferred.reject();\r\n            }\r\n\r\n\r\n            // Add listeners to channel\r\n            _self.channel.onclose = channelCloseHandler;\r\n            _self.channel.onerror = channelErrorHandler;\r\n            _self.channel.onmessage = channelMessageHandler;\r\n            _self.channel.onopen = channelOpenHandler;\r\n\r\n\r\n        };\r\n\r\n\r\n        /**\r\n         * @method answerOffer\r\n         * @param data\r\n         * @return {Promise}\r\n         */\r\n        this.answerOffer = function (data) {\r\n            var uuid = this.uuid,\r\n                deferred = Q.defer,\r\n                signal = this.getSignalChannel();\r\n\r\n            _self.connection = new RTCPeerConnection(ICE_SERVER_SETTINGS, connectionConstraint);\r\n            _self.connection.ondatachannel = dataChannelHandler;\r\n            _self.connection.onicecandidate = iceCandidateHandler;\r\n            _self.connection.oniceconnectionstatechange = iceConnectionStateChangeHandler;\r\n            _self.connection.onnegotiationneeded = negotiationNeededHandler;\r\n            _self.connection.onsignalingstatechange = signalingStateChangeHandler;\r\n\r\n            this.connection = _self.connection;\r\n\r\n            //5. Eve calls setRemoteDescription() with Alice's offer, so that her RTCPeerConnection knows about Alice's setup.\r\n            _self.connection.setRemoteDescription(new RTCSessionDescription(data.offer), function () {\r\n\r\n                //6. Eve calls createAnswer(), and the success callback for this is passed a local session description: Eve's answer.\r\n                _self.connection.createAnswer(function (sessionDescription) {\r\n\r\n                        //7. Eve sets her answer as the local description by calling setLocalDescription().\r\n                        _self.connection.setLocalDescription(sessionDescription);\r\n\r\n                        //8. Eve then uses the signaling mechanism to send her stringified answer back to Alice.\r\n                        signal.sendPeerAnswer(uuid, sessionDescription);\r\n\r\n                    },\r\n                    function (err) {\r\n                        logger.log(err);\r\n                    },\r\n                    connectionConstraint);\r\n\r\n            });\r\n\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n\r\n        /**\r\n         * Accept a WebRTC-Connection\r\n         *\r\n         * @method acceptConnection\r\n         * @param data\r\n         */\r\n        this.acceptConnection = function (data) {\r\n            this.isTarget = true;\r\n            this.isSource = false;\r\n\r\n            //9. Alice sets Eve's answer as the remote session description using setRemoteDescription().\r\n            _self.connection.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n\r\n        };\r\n\r\n        /**\r\n         * Add candidate info to connection\r\n         * @method addCandidate\r\n         * @param data\r\n         */\r\n        this.addCandidate = function (data) {\r\n            _self.connection.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        };\r\n\r\n\r\n        /**\r\n         * Save a reference to a node\r\n         *\r\n         * @method addNodes\r\n         * @param {Array} nodeUuids List of nodeUuids\r\n         */\r\n        this.addNodes = function (nodeUuids) {\r\n\r\n            nodeUuids.forEach(function (nodeUuid) {\r\n                //store only if needed, no redundancy\r\n                if (_self.nodes.indexOf(nodeUuid) < 0) {\r\n                    _self.nodes.push(nodeUuid);\r\n                }\r\n            });\r\n\r\n        };\r\n\r\n        /**\r\n         * Send data via a WebRTC-Channel to a peer\r\n         *\r\n         * @method send\r\n         * @param data\r\n         */\r\n        this.send = function (data) {\r\n\r\n            var jsonString;\r\n\r\n            if (!_self.isConnected || _self.channel.readyState !== 'open') {\r\n                logger.error('Peer ' + _self.id, 'Attempt to send, but channel is not open!');\r\n                return;\r\n            }\r\n\r\n\r\n            // Actually it should be possible to send a blob, but it isn't\r\n            // https://code.google.com/p/webrtc/issues/detail?id=2276\r\n            if (data instanceof Blob) {\r\n                _self.channel.send(data);\r\n            }\r\n            else {\r\n                // Currently JSON & Channel.send error produce a SyntaxError\r\n                // https://code.google.com/p/webrtc/issues/detail?id=2434\r\n                try {\r\n                    jsonString = JSON.stringify(data);\r\n                }\r\n                catch (e) {\r\n                    // We won't retry as this always will fail\r\n                }\r\n                try {\r\n                    _self.channel.send(jsonString);\r\n\r\n                    if (_self.queuedMessageAmount > 0) {\r\n                        _self.queuedMessageAmount--;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // We will be back after the break! :)\r\n                    _self.queuedMessageAmount++;\r\n                    _.delay(_self.send, QUEUE_RETRY_TIME, data);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * @method synchronize\r\n         */\r\n        this.synchronize = function () {\r\n\r\n            logger.log('Peer ' + _self.id, 'Synchronizing');\r\n\r\n            if (project.network.synchronization.nodes.enabled) {\r\n                this.syncTimers.push(setInterval(project.network.synchronization.nodes.interval, this.getNodeList));\r\n                this.getNodeList();\r\n            }\r\n            if (project.network.synchronization.peers.enabled) {\r\n                this.syncTimers.push(setInterval(project.network.synchronization.peers.interval, this.getPeerList))\r\n                this.getPeerList();\r\n            }\r\n            if (project.network.synchronization.files.enabled) {\r\n                this.syncTimers.push(setInterval(project.network.synchronization.files.interval, this.getPeerList))\r\n                this.getFileList();\r\n            }\r\n            if (project.network.synchronization.jobs.enabled) {\r\n                this.syncTimers.push(setInterval(project.network.synchronization.jobs.interval, this.getPeerList))\r\n                this.getJobList();\r\n            }\r\n            if (project.network.synchronization.results.enabled) {\r\n                this.syncTimers.push(setInterval(project.network.synchronization.results.interval, this.getPeerList))\r\n                this.getResultList();\r\n            }\r\n\r\n\r\n        };\r\n\r\n\r\n        /* File Exchange */\r\n        this.getFileList = function () {\r\n            this.send({ type: 'file:list:pull'});\r\n        };\r\n\r\n        this.sendFileList = function (list) {\r\n            this.send({ type: 'file:list:push', list: list});\r\n        };\r\n\r\n        this.getFileByUuid = function (uuids) {\r\n            if (!_.isArray(uuids)) {\r\n                uuids = [uuids];\r\n            }\r\n\r\n            uuids.forEach(function (uuid) {\r\n                _self.send({type: 'file:pull', uuid: uuid});\r\n            });\r\n        };\r\n\r\n\r\n        this.sendFile = function (uuid, chunk, pos) {\r\n            pos = pos || 0;\r\n\r\n            // Send as blob, wrapped with info\r\n            if (chunk instanceof Blob) {\r\n                this.send({ type: 'file:push:start', uuid: uuid, pos: pos});\r\n                this.send(chunk);\r\n                this.send({ type: 'file:push:end', uuid: uuid});\r\n            }\r\n            // Send as base64-String, along with info\r\n            else {\r\n                this.send({ type: 'file:push', uuid: uuid, chunk: chunk, pos: pos});\r\n            }\r\n\r\n        };\r\n\r\n\r\n        /* Node Exchange */\r\n        this.getNodeList = function () {\r\n            _self.send({ type: 'node:list:pull'});\r\n        };\r\n\r\n        this.sendNodeList = function (list) {\r\n            while (list.length > 0) {\r\n                this.send({type: 'node:list:push', list: list.splice(0, project.network.synchronization.nodes.groupSize)});\r\n            }\r\n        };\r\n\r\n        this.getNodeByUuid = function (uuids) {\r\n            if (!_.isArray(uuids)) {\r\n                uuids = [uuids];\r\n            }\r\n\r\n            uuids.forEach(function (uuid) {\r\n                _self.send({type: 'node:pull', uuid: uuid});\r\n            });\r\n        };\r\n\r\n        this.sendNode = function (nodes) {\r\n\r\n            if (!_.isArray(nodes)) {\r\n                nodes = [nodes];\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                _self.send({type: 'node:push', node: node});\r\n            });\r\n        };\r\n\r\n\r\n        /* Peer Exchange */\r\n        this.getPeerList = function () {\r\n            this.send({ type: 'peer:list:pull'});\r\n        };\r\n\r\n        this.sendPeerList = function (list) {\r\n            while (list.length > 0) {\r\n                this.send({type: 'peer:list:push', list: list.splice(0, project.network.synchronization.peers.groupSize)});\r\n            }\r\n        };\r\n\r\n        this.getPeerByUuid = function (uuids) {\r\n            if (!_.isArray(uuids)) {\r\n                uuids = [uuids];\r\n            }\r\n\r\n            uuids.forEach(function (uuid) {\r\n                _self.send({type: 'peer:pull', uuid: uuid});\r\n            });\r\n        };\r\n\r\n        this.sendPeer = function (peers) {\r\n            if (!_.isArray(peers)) {\r\n                peers = [peers];\r\n            }\r\n\r\n            peers.forEach(function (peer) {\r\n                _self.send({type: 'peer:push', peer: peer});\r\n            });\r\n        };\r\n\r\n        /* Job Exchange */\r\n        this.getJobList = function () {\r\n            this.send({ type: 'job:list:pull'});\r\n        };\r\n\r\n        this.sendJobList = function (list) {\r\n            while (list.length > 0) {\r\n                this.send({type: 'job:list:push', list: list.splice(0, project.network.synchronization.jobs.groupSize)});\r\n            }\r\n        };\r\n\r\n        this.getJobByUuid = function (uuids) {\r\n            if (!_.isArray(uuids)) {\r\n                uuids = [uuids];\r\n            }\r\n\r\n            uuids.forEach(function (uuid) {\r\n                _self.send({type: 'job:pull', uuid: uuid});\r\n            });\r\n        };\r\n\r\n\r\n        this.sendJob = function (jobs) {\r\n            if (!_.isArray(jobs)) {\r\n                jobs = [jobs];\r\n            }\r\n\r\n            jobs.forEach(function (job) {\r\n                _self.send({type: 'job:push', job: job});\r\n            });\r\n        };\r\n\r\n        /* Result Exchange */\r\n        this.getResultList = function () {\r\n            this.send({ type: 'result:list:pull'});\r\n        };\r\n\r\n        this.sendResultList = function (list) {\r\n            while (list.length > 0) {\r\n                this.send({type: 'result:list:push', list: list.splice(0, project.network.synchronization.results.groupSize)});\r\n            }\r\n        };\r\n\r\n        this.getResultByUuid = function (uuids) {\r\n            if (!_.isArray(uuids)) {\r\n                uuids = [uuids];\r\n            }\r\n\r\n            uuids.forEach(function (uuid) {\r\n                _self.send({type: 'result:pull', uuid: uuid});\r\n            })\r\n        };\r\n\r\n        this.sendResult = function (results) {\r\n            if (!_.isArray(results)) {\r\n                results = [results];\r\n            }\r\n\r\n            results.forEach(function (result) {\r\n                _self.send({type: 'result:push', result: result});\r\n            });\r\n        };\r\n\r\n\r\n        /**\r\n         * @method serialize\r\n         * @return {Object}\r\n         */\r\n        this.serialize = function () {\r\n            return{\r\n                uuid: this.uuid,\r\n                location: this.location,\r\n                nodes: this.nodes\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * @method broadcast\r\n         */\r\n        this.broadcast = function (type, data) {\r\n            _self.send({type: 'broadcast:' + type, data: data});\r\n        };\r\n\r\n\r\n        /**\r\n         * @method disconnect\r\n         */\r\n        this.disconnect = function () {\r\n            _self.isConnected = false;\r\n            _self.channel.close();\r\n            _self.connection.close();\r\n        }\r\n\r\n\r\n    };\r\n    return Peer;\r\n})\r\n;","\n/**\r\n * Collection for Peer-Instances\r\n *\r\n * @module Network\r\n * @class Peers\r\n *\r\n */\r\n\r\ndefine('network/collections/peers',['q', 'lodash', 'settings', '../geolocation', '../../muskepeer-module', '../model/peer'], function (Q, _, settings, geolocation, MuskepeerModule, Peer) {\r\n\r\n\r\n        var TIMEOUT_RETRY_TIME = 60000, //60s\r\n            MAX_RANDOM_ASSESSMENT_DELAY_TIME = 1500;\r\n\r\n        var module = new MuskepeerModule(),\r\n            _peers = [];\r\n\r\n\r\n        return module.extend({\r\n\r\n            /**\r\n             * @property list\r\n             * @type {Array}\r\n             */\r\n            list: _peers,\r\n\r\n            /**\r\n             * @method add\r\n             * @param peer\r\n             */\r\n            add: function (peer) {\r\n                if (!module.getPeerByUuid(peer.uuid)) {\r\n                    _peers.push(peer);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @method connect\r\n             * @param {Array} [peers]\r\n             * @return {Promise}\r\n             */\r\n            connect: function (peers) {\r\n\r\n                //pass peers, otherwise will take all\r\n                peers = peers || _peers;\r\n\r\n                var promises = [];\r\n\r\n                _.each(peers, function (peer) {\r\n\r\n                    // Never connect to null or self\r\n                    if (!peer || peer.uuid === settings.uuid) return;\r\n\r\n                    // No need to connect if already connected\r\n                    if (!peer.isConnected) {\r\n                        promises.push(peer.createConnection());\r\n                    }\r\n\r\n                });\r\n\r\n                return Q.all(promises);\r\n            },\r\n\r\n            /**\r\n             * @method connectToNeighbourPeers\r\n             * @return {Promise}\r\n             */\r\n            connectToNeighbourPeers: function () {\r\n                return module.connect(module.getNeighbourPeers());\r\n            },\r\n\r\n\r\n            /**\r\n             * @method getPeerByUuid\r\n             * @param {String} uuid\r\n             * @returns {Peer}\r\n             */\r\n            getPeerByUuid: function (uuid) {\r\n                return _.find(_peers, function (peer) {\r\n                    return peer.uuid === uuid;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @method getNeighbourPeers\r\n             * @return {Array}\r\n             */\r\n            getNeighbourPeers: function () {\r\n                // Assuming they are already sorted in a specific way\r\n                // e.g. geolocation-distance\r\n\r\n                // Remove all peers that had a timeout shortly\r\n                var peers = _peers.filter(function (peer) {\r\n                    // Timeout at all? && Timeout was long ago\r\n                    return !peer.timeout || peer.timeout + TIMEOUT_RETRY_TIME < Date.now();\r\n                });\r\n\r\n                return peers.slice(0, settings.maxPeers || 2);\r\n            },\r\n\r\n\r\n            /**\r\n             * Get all known Peers Uuids as an array\r\n             *\r\n             * @method getPeerUuidsAsArray\r\n             * @return {Array}\r\n             */\r\n            getPeerUuidsAsArray: function () {\r\n                return _.map(_peers, function (peer) {\r\n                    return peer.uuid;\r\n                })\r\n            },\r\n\r\n            /**\r\n             * Compare a list of given peers to the local one,\r\n             * return the ones that are missing locally.\r\n             *\r\n             * @method getPeerUugetMissingPeerUuidsAsArrayidsAsArray\r\n             * @param {Array} externalList\r\n             * @return {Array}\r\n             */\r\n\r\n            getMissingPeerUuidsAsArray: function (externalList) {\r\n                var internalList = module.getPeerUuidsAsArray();\r\n                // The external list will always include the uuid of this peer,\r\n                // so we add it herejust for the comparison\r\n                internalList.push(settings.uuid);\r\n                return _.difference(externalList, internalList);\r\n            },\r\n\r\n\r\n            /**\r\n             * @method update\r\n             * @param {Object} peerData\r\n             */\r\n            update: function (peerData) {\r\n\r\n                // Multidimensional array form multiple nodes needs to be flattened\r\n                peerData = _.flatten(peerData);\r\n\r\n                peerData.forEach(function (data) {\r\n\r\n                    //make sure it's not self\r\n                    if (data.uuid === settings.uuid) return;\r\n\r\n                    //already got this one?\r\n                    var peer = module.getPeerByUuid(data.uuid);\r\n\r\n                    //already got this peer?\r\n                    if (peer) {\r\n                        //only add the node uuid\r\n                        peer.addNodes(data.nodes);\r\n                        return;\r\n                    }\r\n\r\n                    // Local id for debugging\r\n                    data.id = _peers.length + 1;\r\n\r\n                    // Save as new peer\r\n                    peer = new Peer(data);\r\n                    module.add(peer);\r\n\r\n                    // Pass-through events\r\n                    peer.onAny(function (e) {\r\n                        module.emit(this.event, e);\r\n                    });\r\n\r\n                    // Calculate geolocation distance\r\n                    peer.distance = geolocation.getDistanceBetweenTwoLocations(peer.location);\r\n\r\n                });\r\n\r\n\r\n                // Sort peers by their geolocation-distance\r\n                _peers = _.sortBy(_peers, function (peer) {\r\n                    return peer.distance;\r\n                });\r\n\r\n                // Update public list\r\n                this.list = _peers;\r\n            },\r\n\r\n\r\n            /**\r\n             * Broadcast data to peers using a RAD--time.\r\n             * Will exclude originPeerUuid from receivers if passed.\r\n             *\r\n             * @method broadcast\r\n             * @param type\r\n             * @param data\r\n             * @param {String} [originPeerUuid]\r\n             */\r\n            broadcast: function (type, data, originPeerUuid) {\r\n\r\n                var peers = module.getConnectedPeers();\r\n\r\n\r\n                // Remove own uuid from list and\r\n                // the peer we received the message from\r\n                peers = _.reject(peers, function (peer) {\r\n                    return peer.uuid === settings.uuid || peer.uuid === originPeerUuid;\r\n                });\r\n\r\n                // Nobody to broadcast to\r\n                if (peers.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                if (!originPeerUuid) {\r\n                    logger.log('Peers', 'Broadcasting', type, 'to', peers.length, 'peer(s)');\r\n                }\r\n                else {\r\n                    logger.log('Peers', 'Rebroadcasting', type, 'to', peers.length, 'peer(s)');\r\n                }\r\n\r\n\r\n                // Broadcast to all connected peers\r\n                peers.forEach(function (peer) {\r\n                    // Get a RAD before broadcasting\r\n                    var rad = Math.random() * MAX_RANDOM_ASSESSMENT_DELAY_TIME;\r\n                    _.delay(peer.broadcast, rad, type, data);\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Get a list of all peers to which there is an active connection.\r\n             *\r\n             * @method getConnectedPeers\r\n             *\r\n             * @return {Array}\r\n             */\r\n            getConnectedPeers: function () {\r\n                return _.where(_peers, {isConnected: true});\r\n            }\r\n\r\n        });\r\n    }\r\n);","\n/**\r\n *\r\n * @module Network\r\n *\r\n */\r\n\r\ndefine('network/model/service',[], function () {\r\n\r\n    /**\r\n     * External  Service to store result data to\r\n     * a service using HTTP and XHR.\r\n     * Tested for parse.com\r\n     *\r\n     * @class Service\r\n     * @constructor\r\n     *\r\n     * @param {Object} options\r\n     */\r\n\r\n    return function Service(options) {\r\n\r\n        this.id = options.id;\r\n        this.url = options.url;\r\n        this.type = options.type;\r\n        this.params = options.params;\r\n        this.headers = options.headers;\r\n\r\n        /**\r\n         * @private\r\n         * @method serialize\r\n         * @param {Object} mapping\r\n         * @return {String}\r\n         */\r\n        function serialize(mapping) {\r\n            var values = [];\r\n\r\n            for (var key in mapping) {\r\n                if (mapping.hasOwnProperty(key)) {\r\n                    values.push(key + '=' + mapping[key])\r\n                }\r\n            }\r\n\r\n            return values.join('&');\r\n        }\r\n\r\n        /**\r\n         * @method save\r\n         * @param data\r\n         */\r\n        this.save = function (data) {\r\n\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            xhr.open('POST', this.url + serialize(this.params), true);\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            this.headers.forEach(function (header) {\r\n                xhr.setRequestHeader(header.key, header.value);\r\n            });\r\n\r\n            xhr.send(JSON.stringify(data));\r\n\r\n            logger.log('Service ' + this.id, 'sending.');\r\n\r\n        };\r\n\r\n    };\r\n});","\n/**\r\n *\r\n * @module Network\r\n * @class Network\r\n * @extends MuskepeerModule\r\n * @uses window\r\n *\r\n * @see http://www.html5rocks.com/en/mobile/workingoffthegrid/\r\n *\r\n */\r\n\r\ndefine('network/index',['q', 'lodash', 'crypto/index', 'storage/index', 'project', 'settings', './geolocation', 'muskepeer-module', './collections/nodes', './collections/peers', 'uuid', './model/service'],\r\n\r\n\r\n    function (Q, _, crypto, storage, project, settings, geolocation, MuskepeerModule, nodes, peers, uuid, Service) {\r\n\r\n\r\n        var MASTER_BROADCAST_MESSAGE_TTL = 1000 * 60, //1m\r\n            MASTER_BROADCAST_PEER_MAX_TIME_DRIFTING = 1000 * 60 * 2; //2m\r\n\r\n        var module = new MuskepeerModule();\r\n\r\n        // Detect network change\r\n        window.addEventListener('offline', networkConnectivityStateChangeHandler);\r\n        window.addEventListener('online', networkConnectivityStateChangeHandler);\r\n\r\n        /**\r\n         * Event-Handler, called when Network state changes\r\n         *\r\n         * @private\r\n         * @method networkConnectivityStateChangeHandler\r\n         * @param {Object} e\r\n         */\r\n        function networkConnectivityStateChangeHandler(e) {\r\n            if (e.type === 'online') {\r\n                logger.log('Network', 'online!');\r\n            }\r\n            else {\r\n                logger.warn('Network', 'offline!');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         * @method registerExternalServices\r\n         */\r\n        function registerExternalServices() {\r\n            // Create external storage services\r\n            project.network.services.forEach(function (settings, index) {\r\n                if (!settings.enabled) return;\r\n                settings.id = index + 1;\r\n                module.services.push(new Service(settings));\r\n            });\r\n\r\n            logger.log('Network', 'ExternalServices registered');\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method masterMessageHandler\r\n         */\r\n        function masterMessageHandler(e) {\r\n\r\n            if (isValidMasterMessage(e.data.message, e.data.signature)) {\r\n\r\n                storage.db.has('messages', e.data.message.uuid)\r\n                    .then(function (exists) {\r\n\r\n                        if (!exists) {\r\n\r\n                            // Inform\r\n                            module.emit(e.type, e.data.message);\r\n\r\n                            // Save\r\n                            storage.db.save('messages', e.data.message)\r\n                                .then(function () {\r\n                                    // Broadcast\r\n                                    peers.broadcast(e.type, e.data, e.target.uuid);\r\n                                });\r\n\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * @private\r\n         * @method isValidMasterMessage\r\n         */\r\n        function isValidMasterMessage(message, signature) {\r\n            var now = Date.now();\r\n\r\n            if (!message || !signature) return false;\r\n\r\n            // Signature is okay?\r\n            if (!crypto.verify(JSON.stringify(message), signature)) {\r\n                return false;\r\n            }\r\n\r\n            // We allow, some drifting, as time between clients might not be in sync\r\n            if (!message.timestamp || message.timestamp > now + MASTER_BROADCAST_PEER_MAX_TIME_DRIFTING) {\r\n                return false;\r\n            }\r\n\r\n            // TTL reached?\r\n            if (now > message.timestamp + MASTER_BROADCAST_MESSAGE_TTL) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Event-Handler, gets called when another Peer sends an offer\r\n         * If the Peer is not yet in the Peers-Collection, it will be created and added.\r\n         * Then the answering process gets initialized.\r\n         *\r\n         * @private\r\n         * @method peerOfferHandler\r\n         * @param {Object} data\r\n         */\r\n        function peerOfferHandler(data) {\r\n            var peer = peers.getPeerByUuid(data.targetPeerUuid);\r\n\r\n            if (!peer) {\r\n\r\n                peers.update([\r\n                    {\r\n                        uuid: data.targetPeerUuid,\r\n                        nodes: [data.nodeUuid],\r\n                        location: data.location,\r\n                        isSource: true,\r\n                        isTarget: false\r\n                    }\r\n                ]);\r\n\r\n                peer = peers.getPeerByUuid(data.targetPeerUuid);\r\n            }\r\n\r\n            peer.answerOffer(data);\r\n        }\r\n\r\n        /**\r\n         * Event-Handler, gets called when another Peer sends an answer to an offer\r\n         *\r\n         * @private\r\n         * @method peerAnswerHandler\r\n         * @param {Object} data\r\n         */\r\n        function peerAnswerHandler(data) {\r\n            var peer = peers.getPeerByUuid(data.targetPeerUuid);\r\n            peer.acceptConnection(data);\r\n        }\r\n\r\n        /**\r\n         * Event-Handler, gets called when another Peer sends candidate-data.\r\n         * Adds the candidate-data to the Peer it came from\r\n         *\r\n         * @private\r\n         * @method peerCandidateHandler\r\n         * @param {Object} data\r\n         */\r\n        function peerCandidateHandler(data) {\r\n            var peer = peers.getPeerByUuid(data.targetPeerUuid);\r\n            peer.addCandidate(data);\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Handler, gets called when a Peer-connection is completely established.\r\n         *\r\n         * @private\r\n         * @method peerConnectedHandler\r\n         * @param {Peer} peer\r\n         */\r\n        function peerConnectedHandler(peer) {\r\n            peer.synchronize();\r\n        }\r\n\r\n        /**\r\n         * Event-Handler, gets called when a Peer-connection is closed.\r\n         * Causes a reconnect to nearest Peers if needed.\r\n         *\r\n         * @private\r\n         * @method peerDisconnectHandler\r\n         * @param {Object} e\r\n         */\r\n        function peerDisconnectHandler(e) {\r\n            if (peers.getConnectedPeers().length < settings.maxPeers) {\r\n                peers.connectToNeighbourPeers();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Event-Handler, gets called when a Peer-connection\r\n         * can't be established after a specific time interval and a timeout occured.\r\n         *\r\n         * @private\r\n         * @method peerTimeoutHandler\r\n         * @param {Object} e\r\n         */\r\n        function peerTimeoutHandler(e) {\r\n            peerDisconnectHandler(e);\r\n        }\r\n\r\n\r\n        /**\r\n         * Event-Handler, gets called when a Peer receives a message.\r\n         *\r\n         * @param {Object} e\r\n         */\r\n        function peerMessageHandler(e) {\r\n\r\n            logger.log('Peer ' + e.target.id, 'Received', e.type);\r\n\r\n            if (!e.type) {\r\n                logger.log('Network', 'Peer-message without type received');\r\n                return;\r\n            }\r\n\r\n            // Seems to be a master-message\r\n            if (e.data && e.data.message && e.data.signature) {\r\n                masterMessageHandler(e);\r\n                return;\r\n            }\r\n\r\n            // Pass-through events\r\n            module.emit(e.type, e);\r\n\r\n        }\r\n\r\n\r\n        return module.extend({\r\n\r\n            /**\r\n             * Determine if the client is on-/offline\r\n             * @property isOnline {Boolean}\r\n             */\r\n            isOnline: window.navigator.onLine,\r\n\r\n            nodes: nodes,\r\n            peers: peers,\r\n\r\n            services: [],\r\n\r\n            /**\r\n             * Start the network-module\r\n             *\r\n             * @method start\r\n             */\r\n            start: function () {\r\n\r\n                // No need to do anything more if we are not online\r\n                if (!module.isOnline) {\r\n                    logger.warn('Network', 'not starting, no internet-connection.');\r\n                    return;\r\n                }\r\n\r\n                // Adding listeners to nodes collection\r\n                nodes.on('peer:offer', peerOfferHandler);\r\n                nodes.on('peer:answer', peerAnswerHandler);\r\n                nodes.on('peer:candidate', peerCandidateHandler);\r\n\r\n                // Adding listeners to peers collection\r\n                peers.on('peer:connect', peerConnectedHandler);\r\n                peers.on('peer:message', peerMessageHandler);\r\n                peers.on('peer:disconnect', peerDisconnectHandler);\r\n                peers.on('peer:timeout', peerTimeoutHandler);\r\n\r\n\r\n                registerExternalServices();\r\n\r\n\r\n                // Detect geoLocation\r\n                geolocation.getGeoLocation()\r\n                    .then(function (location) {\r\n                        logger.log('Geolocation', 'Location available');\r\n                        // Get nodes from database\r\n                        return storage.db.findAndReduceByObject('nodes', {filterDuplicates: false}, {projectUuid: project.uuid})\r\n                    })\r\n                    .then(function (nodeData) {\r\n                        // Create instances of type model/node\r\n                        nodes.update(nodeData);\r\n                    })\r\n                    .then(nodes.connect)\r\n                    .then(nodes.authenticate)\r\n                    .then(nodes.getRelatedPeers)\r\n                    .then(function (peerData) {\r\n                        // Create instances of type model/peer\r\n                        peers.update(peerData);\r\n                    })\r\n                    .then(peers.connectToNeighbourPeers)\r\n                    .done(function () {\r\n                        logger.log('Network', 'Start complete');\r\n                    });\r\n\r\n            },\r\n            /**\r\n             * Stop the network module\r\n             *\r\n             * @method stop\r\n             */\r\n            stop: function () {\r\n                //TODO deconstruct, remove listeners, close all connections\r\n            },\r\n\r\n\r\n            /**\r\n             *@method publish\r\n             */\r\n            publish: function (type, data) {\r\n\r\n                // Broadcast to peers\r\n                peers.broadcast(type, data);\r\n\r\n                // Broadcast to services\r\n                module.services.forEach(function (service) {\r\n                    service.save(data);\r\n                });\r\n            },\r\n\r\n\r\n            /**\r\n             * @method broadcastMasterMessage\r\n             * @param type\r\n             * @param data\r\n             */\r\n            broadcastMasterMessage: function (type, data) {\r\n\r\n                data = data || {};\r\n\r\n                var msg = _.extend(data, {\r\n                        uuid: uuid.generate(),\r\n                        type: type,\r\n                        timestamp: Date.now()\r\n                    }),\r\n                    signature = crypto.sign(JSON.stringify(msg));\r\n\r\n                peers.broadcast(type, {\r\n                        'message': msg,\r\n                        'signature': signature\r\n                    }\r\n                );\r\n\r\n            }\r\n        });\r\n    }\r\n);\r\n\r\n","\n/**\r\n * @module Mediator\r\n * @class Mediator\r\n */\r\n\r\ndefine('mediator',['computation/index', 'network/index', 'storage/index'],\r\n\r\n    function (computation, network, storage) {\r\n\r\n        return {\r\n\r\n            /**\r\n             * @method couple\r\n             */\r\n            couple: function () {\r\n\r\n                /**\r\n                 * Master Broadcast Messages\r\n                 */\r\n\r\n                network.on('broadcast:computation:start', computation.start);\r\n                network.on('broadcast:computation:stop', computation.stop);\r\n\r\n                /** DEBUGGING **/\r\n                network.on('broadcast:db:clear', storage.db.clear);\r\n                network.on('broadcast:filesystem:clear', storage.fs.clear);\r\n                network.on('broadcast:client:reload', function (e) {\r\n                    setTimeout(function () {\r\n                        location.reload()\r\n                    }, e.time);\r\n                });\r\n\r\n\r\n                /**\r\n                 * Broadcast Messages\r\n                 */\r\n                network.on('broadcast:result:push', function (e) {\r\n                    computation.results.add(e.data)\r\n                        .then(function (hasChanged) {\r\n                            if (hasChanged) {\r\n                                network.peers.broadcast('result:push', e.data, e.target.uuid);\r\n                            }\r\n                        });\r\n                });\r\n\r\n                network.on('broadcast:job:push', function (e) {\r\n                    computation.jobs.add(e.data)\r\n                        .then(function (hasChanged) {\r\n                            if (hasChanged) {\r\n                                computation.pushJobToAwaitingWorker(e.data);\r\n                                network.peers.broadcast('job:push', e.data, e.target.uuid);\r\n                            }\r\n                        });\r\n                });\r\n\r\n                network.on('broadcast:job:lock', function (e) {\r\n\r\n                });\r\n\r\n                network.on('broadcast:job:unlock', function (e) {\r\n\r\n                });\r\n\r\n\r\n                /**\r\n                 *  List Requests\r\n                 */\r\n\r\n                network.on('node:list:pull', function (e) {\r\n                    e.target.sendNodeList(network.nodes.getNodeUuidsAsArray());\r\n                });\r\n\r\n                network.on('peer:list:pull', function (e) {\r\n                    e.target.sendPeerList(network.peers.getPeerUuidsAsArray());\r\n                });\r\n\r\n                network.on('file:list:pull', function (e) {\r\n                    storage.getFileUuidsAsArray().then(function (list) {\r\n                        e.target.sendFileList(list);\r\n                    });\r\n                });\r\n\r\n                network.on('job:list:pull', function (e) {\r\n                    storage.getJobUuidsAsArray().then(function (list) {\r\n                        e.target.sendJobList(list);\r\n                    });\r\n                });\r\n\r\n                network.on('result:list:pull', function (e) {\r\n                    storage.getResultUuidsAsArray().then(function (list) {\r\n                        e.target.sendResultList(list);\r\n                    });\r\n                });\r\n\r\n\r\n                /**\r\n                 *  List Answers\r\n                 */\r\n\r\n                network.on('node:list:push', function (e) {\r\n                    //logger.log('Peer ' + peer.id, 'Result of node:sync', list.length);\r\n                    e.target.getNodeByUuid(network.nodes.getMissingNodeUuidsAsArray(e.list));\r\n                });\r\n\r\n                network.on('peer:list:push', function (e) {\r\n                    //logger.log('Peer ' + peer.id, 'Result of peer:sync', list.length);\r\n                    e.target.getPeerByUuid(network.peers.getMissingPeerUuidsAsArray(e.list));\r\n                });\r\n\r\n                network.on('file:list:push', function (e) {\r\n                    storage.getMissingFileUuidsAsArray(e.list).then(function (list) {\r\n                        //logger.log('Peer ' + e.target.id, 'Result of file:sync', list.length);\r\n                        e.target.getFileByUuid(list);\r\n                    });\r\n                });\r\n\r\n                network.on('job:list:push', function (e) {\r\n                    storage.getMissingJobUuidsAsArray(e.list).then(function (list) {\r\n                        //logger.log('Peer ' + e.target.id, 'Result of job:sync', list.length);\r\n                        e.target.getJobByUuid(list);\r\n                    });\r\n                });\r\n\r\n\r\n                network.on('result:list:push', function (e) {\r\n                    storage.getMissingResultUuidsAsArray(e.list).then(function (list) {\r\n                        //logger.log('Peer ' + e.target.id, 'Result of result:sync', list.length);\r\n                        e.target.getResultByUuid(list);\r\n                    });\r\n                });\r\n\r\n\r\n                /**\r\n                 * Requests\r\n                 */\r\n\r\n                network.on('node:pull', function (e) {\r\n                    e.target.sendNode(network.nodes.getNodeByUuid(e.uuid).serialize());\r\n                });\r\n\r\n                network.on('peer:pull', function (e) {\r\n                    e.target.sendPeer(network.peers.getPeerByUuid(e.uuid).serialize());\r\n                });\r\n\r\n                network.on('file:pull', function (e) {\r\n                    // Not implemented yet!\r\n                });\r\n\r\n                network.on('job:pull', function (e) {\r\n                    storage.db.read('jobs', e.uuid, {uuidIsHash: true}).then(function (job) {\r\n                        e.target.sendJob(job);\r\n                    });\r\n                });\r\n\r\n                network.on('result:pull', function (e) {\r\n                    storage.db.read('results', e.uuid, {uuidIsHash: true}).then(function (result) {\r\n                        e.target.sendResult(result);\r\n                    });\r\n                });\r\n\r\n\r\n                /**\r\n                 * Answers\r\n                 */\r\n                network.on('node:push', function (e) {\r\n                    network.nodes.update(e.node);\r\n                });\r\n\r\n                network.on('peer:push', function (e) {\r\n                    network.peers.update(e.peer);\r\n                });\r\n\r\n                network.on('file:push', function (e) {\r\n                    // Not implemented yet!\r\n                });\r\n\r\n                network.on('job:push', function (e) {\r\n                    storage.db.save('jobs', e.job, {uuidIsHash: true});\r\n                });\r\n\r\n                network.on('result:push', function (e) {\r\n                    storage.db.save('results', e.result, {uuidIsHash: true});\r\n                });\r\n\r\n\r\n                /**\r\n                 * Computational Events\r\n                 */\r\n\r\n                computation.on('job:lock', function (e) {\r\n                    network.publish('job:lock', e);\r\n                });\r\n                computation.on('job:unlock', function (e) {\r\n                    network.publish('job:unlock', e);\r\n                });\r\n                computation.on('job:push', function (e) {\r\n                    network.publish('job:push', e);\r\n                });\r\n                computation.on('result:push', function (e) {\r\n                    network.publish('result:push', e);\r\n                });\r\n\r\n            },\r\n\r\n            /**\r\n             * @method decouple\r\n             */\r\n            decouple: function () {\r\n                network.removeAllListeners();\r\n                computation.removeAllListeners();\r\n            }\r\n        };\r\n    });","\n/**\r\n * @author Matthieu Holzer\r\n * @version 0.1\r\n * @module MuskepeerClient\r\n * @class MuskepeerClient\r\n */\r\n\r\ndefine('muskepeer-client',[\r\n    'q',\r\n    'lodash',\r\n    'computation/index',\r\n    'crypto/index',\r\n    'network/index',\r\n    'project',\r\n    'settings',\r\n    'storage/index',\r\n    'mediator'\r\n], function (Q, _, computation, crypto, network, project, settings, storage, mediator) {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Simple feature testing of the application requirements\r\n     * as a lot of the used technologies are still working drafts\r\n     * and for from standard\r\n     *\r\n     * @private\r\n     * @method getDeviceCapabilities\r\n     * @return {Object}\r\n     */\r\n    function getDeviceCapabilities() {\r\n        var requirements = [\r\n                { name: 'JSON', test: JSON },\r\n                { name: 'Blob', test: Blob },\r\n                { name: 'localStorage', test: localStorage },\r\n                { name: 'indexedDB', test: indexedDB },\r\n                { name: 'GeoLocation API', test: navigator.geolocation },\r\n                { name: 'WebRTC API', test: (window.mozRTCPeerConnection || window.webkitRTCPeerConnection || RTCPeerConnection) },\r\n                { name: 'FileSystem API', test: (navigator.webkitPersistentStorage || window.webkitStorageInfo) }\r\n            ],\r\n            features = [\r\n                { name: 'Object.observe', test: Object.observe }\r\n            ],\r\n            result = {\r\n                isCompatible: false,\r\n                missingFeatures: [],\r\n                missingRequirements: []\r\n            };\r\n\r\n        // These are really needed!\r\n        requirements.forEach(function (requirement) {\r\n            if (!requirement.test) result.missingRequirements.push(requirement.name);\r\n        });\r\n\r\n        // Those features could be compensated by (polyfills/shims/shivs)\r\n        // if the browser doesn't support them\r\n        features.forEach(function (feature) {\r\n            if (!feature.test) result.missingFeatures.push(feature.name);\r\n        });\r\n\r\n        // Finally set a single compatibility flag\r\n        result.isCompatible = result.missingRequirements.length === 0;\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    return {\r\n\r\n        computation: computation,\r\n        crypto: crypto,\r\n        mediator: mediator,\r\n        network: network,\r\n        project: project,\r\n        settings: settings,\r\n        storage: storage,\r\n\r\n        /**\r\n         * Initiate muskepeer\r\n         *\r\n         * @method init\r\n         * @chainable\r\n         * @return {Object}\r\n         */\r\n        init: function () {\r\n\r\n            logger.log('Uuid', this.settings.uuid);\r\n\r\n            try {\r\n                var device = getDeviceCapabilities();\r\n\r\n                if (!device.isCompatible) {\r\n                    var msg = 'The following features are required but not supported by your browser: ' + device.missingRequirements.join('\\n');\r\n                    window.alert(msg);\r\n                    return;\r\n                }\r\n            }\r\n            catch (e) {\r\n                window.alert('Your browser is not supported.');\r\n            }\r\n\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Start muskepeer\r\n         *\r\n         * @method start\r\n         * @chainable\r\n         * @param config Configuration-Object\r\n         * @returns {Object}\r\n         */\r\n        start: function (config) {\r\n\r\n            // Create project object from passed options\r\n            project.create(config.project)\r\n                .then(storage.init)\r\n                .then(function () {\r\n\r\n                    // Anything to do at all?\r\n                    if (!project.active) {\r\n                        throw Error('Project is disabled');\r\n                    }\r\n\r\n                    // Create a Uuid (which is a hash here) for each node\r\n                    config.nodes.forEach(function (node) {\r\n                        node.uuid = crypto.hash(node.host + node.port)\r\n                    });\r\n\r\n                    // Store node configuration\r\n                    return storage.db.saveMultiple('nodes', config.nodes, {allowDuplicates: false, uuidIsHash: true})\r\n                })\r\n                .then(function () {\r\n\r\n                    // Collection files\r\n                    var requiredFiles = [];\r\n\r\n                    // Add workerFile\r\n                    if (project.computation.workers.enabled && project.computation.workers.url) {\r\n                        requiredFiles.push({ url: project.computation.workers.url, type: 'text/javascript'});\r\n                    }\r\n\r\n                    // Add factoryFile\r\n                    if (project.computation.factories.enabled && project.computation.factories.url) {\r\n                        requiredFiles.push({ url: project.computation.factories.url, type: 'text/javascript'});\r\n                    }\r\n\r\n                    // Store fileInfo to fileSystem\r\n                    return storage.fs.add(_.union(project.files, requiredFiles))\r\n                })\r\n                .then(function () {\r\n                    //TODO Currently all files get downloaded not loaded from other peers as\r\n                    // Blob is not yet supported via DataChannel\r\n                    return storage.fs.downloadIncompleteFiles();\r\n                })\r\n                .done(function () {\r\n\r\n\r\n                    mediator.couple();\r\n\r\n                    // Finallly initialize the network and computation module\r\n\r\n                    network.start();\r\n                    //computation.start();\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Stop muskepeer\r\n         * @method stop\r\n         * @chainable\r\n         */\r\n        stop: function () {\r\n\r\n            mediator.decouple();\r\n\r\n            this.computation.stop();\r\n            this.network.stop();\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n});","\n/**\r\n * @author Matthieu Holzer\r\n * @date 12.11.13\r\n * @module Logger\r\n * @class Logger\r\n */\r\n\r\ndefine('util/logger',['lodash'], function (_) {\r\n\r\n    var MAX_MESSAGES = 50;\r\n\r\n    var output = document.getElementsByTagName('output')[0],\r\n        htmlLogging = true,\r\n        msgAmount = 0;\r\n\r\n    /**\r\n     * Create a timestamp ( format : HH::MM:SS )\r\n     *\r\n     * @private\r\n     * @method getPrettyTimeStamp\r\n     * @return {String}\r\n     */\r\n    function getPrettyTimeStamp() {\r\n        var current = new Date(),\r\n            date = [],\r\n            hours = current.getHours() < 10 ? ('0' + current.getHours()) : current.getHours(),\r\n            minutes = current.getMinutes() < 10 ? ('0' + current.getMinutes()) : current.getMinutes(),\r\n            seconds = current.getSeconds() < 10 ? ('0' + current.getSeconds()) : current.getSeconds();\r\n\r\n        date.push(hours);\r\n        date.push(minutes);\r\n        date.push(seconds);\r\n\r\n        return date.join(':');\r\n    }\r\n\r\n\r\n    function print(type, args) {\r\n\r\n        if (msgAmount >= MAX_MESSAGES) {\r\n            output.innerHTML = '';\r\n            console.clear();\r\n            msgAmount = 0;\r\n        }\r\n\r\n        var origin = args[0],\r\n            data = Array.prototype.slice.call(args, 1),\r\n            dataAsString = _.clone(data);\r\n\r\n        //Console\r\n        console[type].apply(console, [getPrettyTimeStamp(), origin, ':'].concat(data));\r\n\r\n        //DOM\r\n        if (htmlLogging) {\r\n\r\n            dataAsString.forEach(function (el, id) {\r\n                if (_.isObject(el)) {\r\n                    dataAsString[id] = '<em style=\"color:blue\">' + JSON.stringify(el) + '</em>';\r\n                }\r\n            });\r\n\r\n            output.innerHTML += getPrettyTimeStamp() + ' ' + '<strong style=\"color:red\">' + origin + '</strong> : ' + dataAsString.join(' ') + '<br/>';\r\n\r\n        }\r\n\r\n        msgAmount++;\r\n\r\n\r\n    }\r\n\r\n\r\n    return {\r\n\r\n        /**\r\n         * @method disableHTMLLog\r\n         * @default true\r\n         */\r\n        disableHTMLLog: function () {\r\n            htmlLogging = false;\r\n        },\r\n\r\n\r\n        /**\r\n         * @method enableHTMLLog\r\n         * @default true\r\n         */\r\n        enableHTMLLog: function () {\r\n            htmlLogging = true;\r\n        },\r\n\r\n        /**\r\n         * Log some information\r\n         *\r\n         * @method log\r\n         *\r\n         * @param {*} msg\r\n         * @param {*} [desc]\r\n         * @param {*} [data]\r\n         */\r\n        log: function (msg, desc, data) {\r\n            print('log', arguments);\r\n        },\r\n\r\n        /**\r\n         * Log a warning\r\n         *\r\n         * @method warn\r\n         *\r\n         * @param {*} msg\r\n         * @param {*} [desc]\r\n         * @param {*} [data]\r\n         */\r\n        warn: function (msg, desc, data) {\r\n            print('warn', arguments);\r\n        },\r\n\r\n        /**\r\n         * Log an error\r\n         *\r\n         * @method error\r\n         *\r\n         * @param {*} msg\r\n         * @param {*} [desc]\r\n         * @param {*} [data]\r\n         */\r\n        error: function (msg, desc, data) {\r\n            print('error', arguments);\r\n        }\r\n    };\r\n});"]}