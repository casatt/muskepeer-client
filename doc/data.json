{
    "project": {
        "name": "muskepeer-client",
        "description": "",
        "version": "0.0.1"
    },
    "files": {
        "src\\computation\\collection\\jobs.js": {
            "name": "src\\computation\\collection\\jobs.js",
            "modules": {
                "Jobs": 1
            },
            "classes": {
                "Jobs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\collection\\results.js": {
            "name": "src\\computation\\collection\\results.js",
            "modules": {
                "Results": 1
            },
            "classes": {
                "Results": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\model\\job.js": {
            "name": "src\\computation\\model\\job.js",
            "modules": {},
            "classes": {
                "Job": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\model\\pool.js": {
            "name": "src\\computation\\model\\pool.js",
            "modules": {
                "Pool": 1
            },
            "classes": {
                "Pool": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\model\\result.js": {
            "name": "src\\computation\\model\\result.js",
            "modules": {},
            "classes": {
                "Result": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\model\\thread.js": {
            "name": "src\\computation\\model\\thread.js",
            "modules": {},
            "classes": {
                "Worker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\computation\\index.js": {
            "name": "src\\computation\\index.js",
            "modules": {
                "Computation": 1
            },
            "classes": {
                "Computation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\crypto\\index.js": {
            "name": "src\\crypto\\index.js",
            "modules": {
                "Crypto": 1
            },
            "classes": {
                "Crypto": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\examples\\documentation\\worker.js": {
            "name": "src\\examples\\documentation\\worker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\examples\\knn-digits\\factory.js": {
            "name": "src\\examples\\knn-digits\\factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\examples\\knn-digits\\worker.js": {
            "name": "src\\examples\\knn-digits\\worker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\examples\\n-queens\\worker.js": {
            "name": "src\\examples\\n-queens\\worker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\collections\\nodes.js": {
            "name": "src\\network\\collections\\nodes.js",
            "modules": {},
            "classes": {
                "Nodes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\collections\\peers.js": {
            "name": "src\\network\\collections\\peers.js",
            "modules": {},
            "classes": {
                "Peers": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\model\\node.js": {
            "name": "src\\network\\model\\node.js",
            "modules": {},
            "classes": {
                "Node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\model\\peer.js": {
            "name": "src\\network\\model\\peer.js",
            "modules": {},
            "classes": {
                "Peer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\model\\service.js": {
            "name": "src\\network\\model\\service.js",
            "modules": {},
            "classes": {
                "Service": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\geolocation.js": {
            "name": "src\\network\\geolocation.js",
            "modules": {
                "GeoLocation": 1
            },
            "classes": {
                "GeoLocation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\network\\index.js": {
            "name": "src\\network\\index.js",
            "modules": {
                "Network": 1
            },
            "classes": {
                "Network": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\storage\\database.js": {
            "name": "src\\storage\\database.js",
            "modules": {
                "Database": 1
            },
            "classes": {
                "Database": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\storage\\filesystem.js": {
            "name": "src\\storage\\filesystem.js",
            "modules": {
                "FileSystem": 1
            },
            "classes": {
                "FileSystem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\storage\\index.js": {
            "name": "src\\storage\\index.js",
            "modules": {
                "Storage": 1
            },
            "classes": {
                "Storage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\logger.js": {
            "name": "src\\util\\logger.js",
            "modules": {
                "Logger": 1
            },
            "classes": {
                "Logger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\mediator.js": {
            "name": "src\\mediator.js",
            "modules": {
                "Mediator": 1
            },
            "classes": {
                "Mediator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\muskepeer-client.js": {
            "name": "src\\muskepeer-client.js",
            "modules": {
                "MuskepeerClient": 1
            },
            "classes": {
                "MuskepeerClient": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\muskepeer-module.js": {
            "name": "src\\muskepeer-module.js",
            "modules": {},
            "classes": {
                "MuskepeerModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\project.js": {
            "name": "src\\project.js",
            "modules": {
                "Project": 1
            },
            "classes": {
                "Project": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\settings.js": {
            "name": "src\\settings.js",
            "modules": {
                "Settings": 1
            },
            "classes": {
                "Settings": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\uuid.js": {
            "name": "src\\uuid.js",
            "modules": {
                "Uuid": 1
            },
            "classes": {
                "Uuid": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Jobs": {
            "name": "Jobs",
            "submodules": {},
            "classes": {
                "Jobs": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\computation\\collection\\jobs.js",
            "line": 1
        },
        "Results": {
            "name": "Results",
            "submodules": {},
            "classes": {
                "Results": 1,
                "Job": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\computation\\model\\job.js",
            "line": 4
        },
        "Pool": {
            "name": "Pool",
            "submodules": {},
            "classes": {
                "Pool": 1,
                "Result": 1,
                "Worker": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\computation\\model\\thread.js",
            "line": 1
        },
        "Computation": {
            "name": "Computation",
            "submodules": {},
            "classes": {
                "Computation": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\computation\\index.js",
            "line": 1,
            "extends": "MuskepeerModule"
        },
        "Crypto": {
            "name": "Crypto",
            "submodules": {},
            "classes": {
                "Crypto": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\crypto\\index.js",
            "line": 1
        },
        "Network": {
            "name": "Network",
            "submodules": {},
            "classes": {
                "Nodes": 1,
                "Peers": 1,
                "Node": 1,
                "Peer": 1,
                "Service": 1,
                "Network": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\network\\index.js",
            "line": 1,
            "extends": "MuskepeerModule",
            "uses": [
                "window"
            ],
            "see": [
                "http://www.html5rocks.com/en/mobile/workingoffthegrid/"
            ]
        },
        "GeoLocation": {
            "name": "GeoLocation",
            "submodules": {},
            "classes": {
                "GeoLocation": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\network\\geolocation.js",
            "line": 1,
            "requires": [
                "q",
                "project"
            ]
        },
        "Database": {
            "name": "Database",
            "submodules": {},
            "classes": {
                "Database": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\storage\\database.js",
            "line": 1,
            "description": "Database",
            "see": [
                "https://github.com/jensarps/IDBWrapper"
            ]
        },
        "FileSystem": {
            "name": "FileSystem",
            "submodules": {},
            "classes": {
                "FileSystem": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\storage\\filesystem.js",
            "line": 1,
            "description": "FileSystem",
            "see": [
                "http://www.html5rocks.com/de/tutorials/file/filesystem/",
                "https://gist.github.com/robnyman/1894032",
                "https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL",
                "http://www.html5rocks.com/en/tutorials/file/filesystem/#toc-filesystemurls"
            ]
        },
        "Storage": {
            "name": "Storage",
            "submodules": {},
            "classes": {
                "Storage": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\storage\\index.js",
            "line": 1,
            "description": "Storage",
            "extends": "MuskepeerModule"
        },
        "Logger": {
            "name": "Logger",
            "submodules": {},
            "classes": {
                "Logger": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\util\\logger.js",
            "line": 1,
            "author": "Matthieu Holzer",
            "date": "12.11.13"
        },
        "Mediator": {
            "name": "Mediator",
            "submodules": {},
            "classes": {
                "Mediator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\mediator.js",
            "line": 1
        },
        "MuskepeerClient": {
            "name": "MuskepeerClient",
            "submodules": {},
            "classes": {
                "MuskepeerClient": 1,
                "MuskepeerModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\muskepeer-module.js",
            "line": 14,
            "author": "Matthieu Holzer",
            "version": "0.1"
        },
        "Project": {
            "name": "Project",
            "submodules": {},
            "classes": {
                "Project": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\project.js",
            "line": 1,
            "description": "Represents the current project"
        },
        "Settings": {
            "name": "Settings",
            "submodules": {},
            "classes": {
                "Settings": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\settings.js",
            "line": 1,
            "description": "Store for User-Settings which will be saved/read from\nlocalStorage"
        },
        "Uuid": {
            "name": "Uuid",
            "submodules": {},
            "classes": {
                "Uuid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\uuid.js",
            "line": 1,
            "description": "Module to generate and test UUIDs"
        }
    },
    "classes": {
        "Jobs": {
            "name": "Jobs",
            "shortname": "Jobs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Jobs",
            "file": "src\\computation\\collection\\jobs.js",
            "line": 1
        },
        "Results": {
            "name": "Results",
            "shortname": "Results",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Results",
            "namespace": "",
            "file": "src\\computation\\collection\\results.js",
            "line": 1
        },
        "Job": {
            "name": "Job",
            "shortname": "Job",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Results",
            "namespace": "",
            "file": "src\\computation\\model\\job.js",
            "line": 4,
            "is_constructor": 1,
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Pool": {
            "name": "Pool",
            "shortname": "Pool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Pool",
            "namespace": "",
            "file": "src\\computation\\model\\pool.js",
            "line": 1
        },
        "Result": {
            "name": "Result",
            "shortname": "Result",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Pool",
            "namespace": "",
            "file": "src\\computation\\model\\result.js",
            "line": 3,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Worker": {
            "name": "Worker",
            "shortname": "Worker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Pool",
            "namespace": "",
            "file": "src\\computation\\model\\thread.js",
            "line": 1
        },
        "Computation": {
            "name": "Computation",
            "shortname": "Computation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Computation",
            "namespace": "",
            "file": "src\\computation\\index.js",
            "line": 1
        },
        "Crypto": {
            "name": "Crypto",
            "shortname": "Crypto",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Crypto",
            "namespace": "",
            "file": "src\\crypto\\index.js",
            "line": 1,
            "see": [
                "http://kjur.github.io/jsrsasign/sample-ecdsa.html"
            ]
        },
        "Nodes": {
            "name": "Nodes",
            "shortname": "Nodes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\collections\\nodes.js",
            "line": 1,
            "description": "Collection for Node-Instances"
        },
        "Peers": {
            "name": "Peers",
            "shortname": "Peers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\collections\\peers.js",
            "line": 1,
            "description": "Collection for Peer-Instances"
        },
        "Node": {
            "name": "Node",
            "shortname": "Node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\model\\node.js",
            "line": 17,
            "description": "A Node represents a WebSocketServer which is required\nfor signaling between Peers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Peer": {
            "name": "Peer",
            "shortname": "Peer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\model\\peer.js",
            "line": 47,
            "description": "A Peer represents another Browser which is connected via\nWebRTCs DataChannel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Service": {
            "name": "Service",
            "shortname": "Service",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\model\\service.js",
            "line": 9,
            "description": "External  Service to store result data to\na service using HTTP and XHR.\nTested for parse.com",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "GeoLocation": {
            "name": "GeoLocation",
            "shortname": "GeoLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "GeoLocation",
            "namespace": "",
            "file": "src\\network\\geolocation.js",
            "line": 1
        },
        "Network": {
            "name": "Network",
            "shortname": "Network",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Network",
            "namespace": "",
            "file": "src\\network\\index.js",
            "line": 1
        },
        "Database": {
            "name": "Database",
            "shortname": "Database",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "src\\storage\\database.js",
            "line": 1,
            "description": "Database"
        },
        "FileSystem": {
            "name": "FileSystem",
            "shortname": "FileSystem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FileSystem",
            "namespace": "",
            "file": "src\\storage\\filesystem.js",
            "line": 1,
            "description": "FileSystem"
        },
        "Storage": {
            "name": "Storage",
            "shortname": "Storage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Storage",
            "namespace": "",
            "file": "src\\storage\\index.js",
            "line": 1,
            "description": "Storage"
        },
        "Logger": {
            "name": "Logger",
            "shortname": "Logger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Logger",
            "namespace": "",
            "file": "src\\util\\logger.js",
            "line": 1,
            "author": "Matthieu Holzer",
            "date": "12.11.13"
        },
        "Mediator": {
            "name": "Mediator",
            "shortname": "Mediator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mediator",
            "namespace": "",
            "file": "src\\mediator.js",
            "line": 1
        },
        "MuskepeerClient": {
            "name": "MuskepeerClient",
            "shortname": "MuskepeerClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MuskepeerClient",
            "namespace": "",
            "file": "src\\muskepeer-client.js",
            "line": 1,
            "author": "Matthieu Holzer",
            "version": "0.1"
        },
        "MuskepeerModule": {
            "name": "MuskepeerModule",
            "shortname": "MuskepeerModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MuskepeerClient",
            "namespace": "",
            "file": "src\\muskepeer-module.js",
            "line": 14,
            "is_constructor": 1
        },
        "Project": {
            "name": "Project",
            "shortname": "Project",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Project",
            "namespace": "",
            "file": "src\\project.js",
            "line": 1,
            "description": "Represents the current project"
        },
        "Settings": {
            "name": "Settings",
            "shortname": "Settings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Settings",
            "namespace": "",
            "file": "src\\settings.js",
            "line": 1,
            "description": "Store for User-Settings which will be saved/read from\nlocalStorage"
        },
        "Uuid": {
            "name": "Uuid",
            "shortname": "Uuid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Uuid",
            "namespace": "",
            "file": "src\\uuid.js",
            "line": 1,
            "description": "Module to generate and test UUIDs"
        }
    },
    "classitems": [
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 11,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getJobsFromStorage",
            "params": [
                {
                    "name": "filterFinished",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "filterLocked",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 40,
            "itemtype": "property",
            "name": "",
            "type": "{Number}",
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 47,
            "description": "Wiil return true if the job was added, false it wasn't.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "job",
                    "description": "",
                    "type": "Job"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 85,
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 94,
            "itemtype": "method",
            "name": "getNextAvailableJob",
            "return": {
                "description": ""
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 120,
            "itemtype": "method",
            "name": "getJobByUuid",
            "params": [
                {
                    "name": "uuid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 130,
            "itemtype": "method",
            "name": "lockJob",
            "params": [
                {
                    "name": "job",
                    "description": "",
                    "type": "Job"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 142,
            "itemtype": "method",
            "name": "unlockJob",
            "params": [
                {
                    "name": "job",
                    "description": "",
                    "type": "Job"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 154,
            "itemtype": "method",
            "name": "markJobAsComplete",
            "params": [
                {
                    "name": "job",
                    "description": "",
                    "type": "Job"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\jobs.js",
            "line": 163,
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "job",
                    "description": "",
                    "type": "Job"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Jobs",
            "module": "Jobs"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 11,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getResultsFromStorage",
            "params": [
                {
                    "name": "filterValidated",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 35,
            "itemtype": "property",
            "name": "",
            "type": "{Number}",
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 42,
            "description": "Adds a result to the storage. If its new will return true,\nif it's an update it will return false;",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "Result"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 68,
            "description": "Update a result, will return true, if the result really changed.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 113,
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 122,
            "itemtype": "method",
            "name": "getResultByUuid",
            "params": [
                {
                    "name": "uuid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 132,
            "itemtype": "method",
            "name": "isValid",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\collection\\results.js",
            "line": 145,
            "itemtype": "method",
            "name": "allValid",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Results",
            "module": "Results"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 26,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "workerEventHandler",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 35,
            "description": "Amount of worker-instances",
            "itemtype": "property",
            "name": "size",
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 59,
            "itemtype": "method",
            "name": "getThreadById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Worker"
            },
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 68,
            "itemtype": "method",
            "name": "start",
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 83,
            "itemtype": "method",
            "name": "stop",
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 102,
            "itemtype": "method",
            "name": "pause",
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 112,
            "itemtype": "method",
            "name": "resume",
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\model\\pool.js",
            "line": 122,
            "itemtype": "method",
            "name": "getIdleThreads",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Pool",
            "module": "Pool"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 19,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "allFound",
            "params": [
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 76,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createThreadPool",
            "params": [
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "url",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 137,
            "description": "Create worker instances",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createWorkers",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 169,
            "description": "Create jobFactory",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createFactories",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 200,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "addEventListenersToPool",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 216,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "removeEventListenersFromPool",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 224,
            "description": "Event-Listener, listens for\njob:push from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolJobFoundHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 249,
            "description": "Event-Listener, listens for\njob:pull from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolJobRequiredHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 302,
            "description": "Event-Listener, listens for\nresult:push from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolResultFoundHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 351,
            "description": "Event-Listener, listens for\nresult:pull from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolResultRequiredHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 373,
            "description": "Event-Listener, listens for\nfile:push from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolFileFoundHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 385,
            "description": "Event-Listener, listens for\nfile:pull from Thread-Pool",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "poolFileRequiredHandler",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 456,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "resultCounterCompleteHandler",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 469,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "jobCounterCompleteHandler",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 482,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "counterCompleteHandler",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 497,
            "itemtype": "property",
            "name": "isRunning",
            "type": "Boolean",
            "default": "false",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 502,
            "itemtype": "property",
            "name": "isPaused",
            "type": "Boolean",
            "default": "false",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 508,
            "itemtype": "property",
            "name": "jobs",
            "type": "Object",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 513,
            "itemtype": "property",
            "name": "results",
            "type": "Object",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 525,
            "itemtype": "method",
            "name": "start",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 556,
            "itemtype": "method",
            "name": "pause",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 565,
            "itemtype": "method",
            "name": "resume",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 574,
            "itemtype": "method",
            "name": "stop",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 594,
            "itemtype": "method",
            "name": "stopWorkers",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 607,
            "itemtype": "method",
            "name": "stopFactories",
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 621,
            "itemtype": "method",
            "name": "isComplete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\computation\\index.js",
            "line": 640,
            "itemtype": "method",
            "name": "pushJobToAwaitingWorker",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Computation",
            "module": "Computation"
        },
        {
            "file": "src\\crypto\\index.js",
            "line": 14,
            "description": "Generate a hash from an Object using SHA256",
            "itemtype": "method",
            "name": "hash",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Crypto",
            "module": "Crypto"
        },
        {
            "file": "src\\crypto\\index.js",
            "line": 27,
            "itemtype": "method",
            "name": "isValidPublicKey",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Crypto",
            "module": "Crypto"
        },
        {
            "file": "src\\crypto\\index.js",
            "line": 36,
            "itemtype": "method",
            "name": "isValidPrivateKey",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Crypto",
            "module": "Crypto"
        },
        {
            "file": "src\\crypto\\index.js",
            "line": 45,
            "description": "Sign a message using Elliptic Curve DSA",
            "itemtype": "method",
            "name": "sign",
            "params": [
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "return": {
                "description": "signature",
                "type": "String"
            },
            "class": "Crypto",
            "module": "Crypto"
        },
        {
            "file": "src\\crypto\\index.js",
            "line": 76,
            "description": "Verify that a message and signature haven't been manipulated",
            "itemtype": "method",
            "name": "verify",
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "signature",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Crypto",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\documentation\\worker.js",
            "line": 4,
            "description": "COMMUNICATION BLOCK START",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\documentation\\worker.js",
            "line": 38,
            "description": "COMMUNICATION BLOCK END",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\factory.js",
            "line": 1,
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\factory.js",
            "line": 8,
            "description": "COMMUNICATION BLOCK START",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\factory.js",
            "line": 37,
            "description": "COMMUNICATION BLOCK END",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\worker.js",
            "line": 1,
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\worker.js",
            "line": 8,
            "description": "COMMUNICATION BLOCK START",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\worker.js",
            "line": 38,
            "description": "COMMUNICATION BLOCK END",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\knn-digits\\worker.js",
            "line": 69,
            "description": "k-Nearest-Neighbour implementation in a javascript webworker\nClassifies objects based on closest training examples in the feature space\nhttp://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm",
            "author": "Matthieu Holzer",
            "date": "07/01/2012",
            "itemtype": "method",
            "name": "knn",
            "params": [
                {
                    "name": "trainingData",
                    "description": "A Object including all the trainingDataSets",
                    "type": "Object"
                },
                {
                    "name": "testData",
                    "description": "A Object including all the testDataSets",
                    "type": "Object"
                },
                {
                    "name": "k",
                    "description": "Number of neighbours to analyze",
                    "type": "Number"
                },
                {
                    "name": "sigma",
                    "description": "Range in which the neighbours have to be located",
                    "type": "Number"
                },
                {
                    "name": "kernelFuncName",
                    "description": "The name of the kernel-function which should be used",
                    "type": "String"
                },
                {
                    "name": "distanceFuncName",
                    "description": "The name of the distance-function which should be used",
                    "type": "String"
                },
                {
                    "name": "sigmaAutoIncrease",
                    "description": "Whether you wish to autoincrease sigma to include exactly k-neighbours (might slow everything down!)",
                    "type": "Boolean"
                },
                {
                    "name": "classAttributePosition",
                    "description": "The index of your class-atrribute in the trainingData",
                    "type": "Number"
                }
            ],
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\examples\\n-queens\\worker.js",
            "line": 1,
            "description": "Simple Brute-Force-Algorithm to solve the\nn-queens problem. It will produce distinct solutions.",
            "class": "Nodes",
            "module": "Crypto"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 16,
            "itemtype": "property",
            "name": "list",
            "type": "{Array}",
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 22,
            "itemtype": "method",
            "name": "connect",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 38,
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "nodeData",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 61,
            "itemtype": "method",
            "name": "getNodeByUrl",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 72,
            "itemtype": "method",
            "name": "getNodeUuidsAsArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 82,
            "itemtype": "method",
            "name": "getMissingNodeUuidsAsArray",
            "params": [
                {
                    "name": "externalList",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 93,
            "itemtype": "method",
            "name": "getNodeByUuid",
            "params": [
                {
                    "name": "uuid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 104,
            "itemtype": "method",
            "name": "authenticate",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\nodes.js",
            "line": 128,
            "itemtype": "method",
            "name": "getRelatedPeers",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Nodes",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 21,
            "itemtype": "property",
            "name": "list",
            "type": "{Array}",
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 27,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "peer",
                    "description": ""
                }
            ],
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 37,
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "peers",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 64,
            "itemtype": "method",
            "name": "connectToNeighbourPeers",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 73,
            "itemtype": "method",
            "name": "getPeerByUuid",
            "params": [
                {
                    "name": "uuid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Peer"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 84,
            "itemtype": "method",
            "name": "getNeighbourPeers",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 102,
            "description": "Get all known Peers Uuids as an array",
            "itemtype": "method",
            "name": "getPeerUuidsAsArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 114,
            "description": "Compare a list of given peers to the local one,\nreturn the ones that are missing locally.",
            "itemtype": "method",
            "name": "getPeerUugetMissingPeerUuidsAsArrayidsAsArray",
            "params": [
                {
                    "name": "externalList",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 132,
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "peerData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 184,
            "description": "Broadcast data to peers using a RAD--time.\nWill exclude originPeerUuid from receivers if passed.",
            "itemtype": "method",
            "name": "broadcast",
            "params": [
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "originPeerUuid",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\collections\\peers.js",
            "line": 225,
            "description": "Get a list of all peers to which there is an active connection.",
            "itemtype": "method",
            "name": "getConnectedPeers",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Peers",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\node.js",
            "line": 46,
            "itemtype": "method",
            "name": "connect",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Node",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\node.js",
            "line": 90,
            "itemtype": "method",
            "name": "",
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Node",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 69,
            "itemtype": "property",
            "name": "connection",
            "type": "{RTCPeerCpnnection}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 75,
            "itemtype": "property",
            "name": "channel",
            "type": "{RTCDataChannel}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 81,
            "description": "Indicates if there is a stable conenction to this peer",
            "itemtype": "property",
            "name": "isConnected",
            "default": "false",
            "type": "{Boolean}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 89,
            "description": "Whether this peer is the initiator of a connection",
            "itemtype": "property",
            "name": "isSource",
            "default": "false",
            "type": "{Boolean}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 97,
            "description": "Whether this peer is the initiator of a connection",
            "itemtype": "property",
            "name": "isTarget",
            "default": "false",
            "type": "{Boolean}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 105,
            "description": "Universal unique identifier for this peer",
            "itemtype": "property",
            "name": "uuid",
            "type": "{String}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 112,
            "description": "Geolocation of this peer",
            "itemtype": "property",
            "name": "location",
            "type": "{Object}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 119,
            "description": "Distance to this peer in kilometers",
            "itemtype": "property",
            "name": "distance",
            "default": "undefined",
            "type": "{Number}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 127,
            "description": "Uuids of the nodes this peer is connected to,\nused to find a signaling-channel.",
            "itemtype": "property",
            "name": "nodes",
            "type": "{Array}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 136,
            "description": "A timestamp to prove when the last timout\noccured when trying to connect to the peer.",
            "itemtype": "property",
            "name": "timeout",
            "default": "undefined",
            "type": "{Number}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 145,
            "description": "List of timers for synchronization",
            "type": "{Array}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 152,
            "description": "Amount of queuedmessages that could not be sent",
            "itemtype": "property",
            "name": "queuedMessageAmount",
            "default": "0",
            "type": "{Number}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 162,
            "description": "Indicator to tell which protocol is currently used\nSCTP or SRTP",
            "itemtype": "property",
            "name": "protocol",
            "default": "undefined",
            "type": "{String}",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 198,
            "description": "Find a signaling-channel two a given peer",
            "itemtype": "method",
            "name": "getSignalChannel",
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 218,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "timerCompleteHandler",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 338,
            "description": "Create a WebRTC-Connection",
            "itemtype": "method",
            "name": "createConnection",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 391,
            "itemtype": "method",
            "name": "answerOffer",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 435,
            "description": "Accept a WebRTC-Connection",
            "itemtype": "method",
            "name": "acceptConnection",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 450,
            "description": "Add candidate info to connection",
            "itemtype": "method",
            "name": "addCandidate",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 460,
            "description": "Save a reference to a node",
            "itemtype": "method",
            "name": "addNodes",
            "params": [
                {
                    "name": "nodeUuids",
                    "description": "List of nodeUuids",
                    "type": "Array"
                }
            ],
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 477,
            "description": "Send data via a WebRTC-Channel to a peer",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 523,
            "itemtype": "method",
            "name": "synchronize",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 720,
            "itemtype": "method",
            "name": "serialize",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 733,
            "itemtype": "method",
            "name": "broadcast",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\peer.js",
            "line": 741,
            "itemtype": "method",
            "name": "disconnect",
            "class": "Peer",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\service.js",
            "line": 28,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "mapping",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Service",
            "module": "Network"
        },
        {
            "file": "src\\network\\model\\service.js",
            "line": 46,
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "class": "Service",
            "module": "Network"
        },
        {
            "file": "src\\network\\geolocation.js",
            "line": 11,
            "description": "Earth-radius in kilometers",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "EARH_RADIUS",
            "type": "{Number}",
            "readonly": "",
            "static": 1,
            "final": 1,
            "class": "GeoLocation",
            "module": "GeoLocation"
        },
        {
            "file": "src\\network\\geolocation.js",
            "line": 23,
            "description": "Internal caching for the location object",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "location",
            "type": "Object",
            "default": "null",
            "class": "GeoLocation",
            "module": "GeoLocation"
        },
        {
            "file": "src\\network\\geolocation.js",
            "line": 32,
            "description": "Convert angular-value to radian",
            "itemtype": "method",
            "name": "deg2grad",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "deg",
                    "description": "Degrees",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "GeoLocation",
            "module": "GeoLocation"
        },
        {
            "file": "src\\network\\geolocation.js",
            "line": 45,
            "description": "Asynchronously get the latitude/longitude of the device using the W3C-API",
            "itemtype": "method",
            "name": "getGeoLocation",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "GeoLocation",
            "module": "GeoLocation"
        },
        {
            "file": "src\\network\\geolocation.js",
            "line": 85,
            "description": "Uses the Haversine formula to calculate the distance between two geoLocations",
            "itemtype": "method",
            "name": "getDistanceBetweenTwoLocations",
            "see": [
                "http://en.wikipedia.org/wiki/Haversine_formula"
            ],
            "params": [
                {
                    "name": "position1",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "lat",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "long",
                            "description": "",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "position2",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "lat",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "long",
                            "description": "",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "[Number] distance in kilometers"
            },
            "class": "GeoLocation",
            "module": "GeoLocation"
        },
        {
            "file": "src\\network\\index.js",
            "line": 27,
            "description": "Event-Handler, called when Network state changes",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "networkConnectivityStateChangeHandler",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 43,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "registerExternalServices",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 59,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "masterMessageHandler",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 88,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isValidMasterMessage",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 115,
            "description": "Event-Handler, gets called when another Peer sends an offer\nIf the Peer is not yet in the Peers-Collection, it will be created and added.\nThen the answering process gets initialized.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerOfferHandler",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 145,
            "description": "Event-Handler, gets called when another Peer sends an answer to an offer",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerAnswerHandler",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 157,
            "description": "Event-Handler, gets called when another Peer sends candidate-data.\nAdds the candidate-data to the Peer it came from",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerCandidateHandler",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 171,
            "description": "Event-Handler, gets called when a Peer-connection is completely established.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerConnectedHandler",
            "params": [
                {
                    "name": "peer",
                    "description": "",
                    "type": "Peer"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 182,
            "description": "Event-Handler, gets called when a Peer-connection is closed.\nCauses a reconnect to nearest Peers if needed.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerDisconnectHandler",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 196,
            "description": "Event-Handler, gets called when a Peer-connection\ncan't be established after a specific time interval and a timeout occured.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "peerTimeoutHandler",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 209,
            "description": "Event-Handler, gets called when a Peer receives a message.",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 237,
            "description": "Determine if the client is on-/offline",
            "itemtype": "property",
            "name": "isOnline",
            "type": "Boolean",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 248,
            "description": "Start the network-module",
            "itemtype": "method",
            "name": "start",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 300,
            "description": "Stop the network module",
            "itemtype": "method",
            "name": "stop",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 310,
            "itemtype": "method",
            "name": "publish",
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\network\\index.js",
            "line": 325,
            "itemtype": "method",
            "name": "broadcastMasterMessage",
            "params": [
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "class": "Network",
            "module": "Network"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 26,
            "description": "Create needed indexedDB-Stores",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createStores",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 72,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getStoreByBame",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 91,
            "description": "Clear all data from stores",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "storeNames",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 121,
            "description": "Counts all entries in a store.",
            "itemtype": "method",
            "name": "count",
            "params": [
                {
                    "name": "storeName",
                    "description": ""
                }
            ],
            "return": {
                "description": "promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 139,
            "description": "Read data by key from indexedDB",
            "itemtype": "method",
            "name": "read",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 167,
            "description": "List all items from a store",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "keyRangeOptions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "filterObject",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 237,
            "description": "Uses list() and reduces matches by indexedDB.keyranges",
            "itemtype": "method",
            "name": "findAndReduceByKeyRange",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "keyRangeOptions",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 251,
            "description": "Uses list() and reduces matches by a filterObject",
            "itemtype": "method",
            "name": "findAndReduceByObject",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "filterObject",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 265,
            "description": "Save data to indexedDb, if not uuid is set it will be added automatically",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 346,
            "description": "Save Mutiple objects to a shared store",
            "itemtype": "method",
            "name": "saveMultiple",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "datasets",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 365,
            "description": "Remove an existing dataset",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 388,
            "description": "Update an existing dataset",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "storeName",
                    "description": ""
                },
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\database.js",
            "line": 453,
            "description": "Find out if a store has s specific dataset",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "storeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 16,
            "final": 1,
            "itemtype": "property",
            "name": "CHUNK_SIZE",
            "type": "{Number}",
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 27,
            "description": "Request access to the local fileSystem,\nwill cause a user prompt at first attempt",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "requestFileSystem",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 47,
            "description": "Request a specific stoage-quota\nwill cause a user prompt at first attempt",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "requestQuota",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 64,
            "description": "Parse a fileName from an uri",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getFileNameFromUri",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 77,
            "description": "Create a directory in filesystem",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createSubDirectory",
            "params": [
                {
                    "name": "dir",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 94,
            "params": [
                {
                    "name": "fileInfo",
                    "description": ""
                },
                {
                    "name": "mode",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "completeFile",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 180,
            "description": "Gets a file via XHR and returns a promise,\nresolve will contain a Blob",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "download",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 238,
            "description": "Updates the list by getting the newest info from db",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "updateFileList",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 253,
            "description": "Converts a base64 String to a Blob",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "base64toBlob",
            "see": [
                "http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript"
            ],
            "params": [
                {
                    "name": "base64",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contentType",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Blob"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 291,
            "description": "List of related files in db,\nwill always be updated automatically",
            "itemtype": "property",
            "name": "list",
            "type": "{Array}",
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 300,
            "description": "Initialize fileStorage",
            "chainable": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "db",
                    "description": "Instance of database submodule"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 329,
            "description": "Write a file/blob to the local filesystem",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "fileInfo",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "blob",
                    "description": "or base64-String",
                    "type": "Blob|String"
                },
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 395,
            "description": "Get a local url to a file in fileSystem",
            "itemtype": "method",
            "name": "readFileAsLocalUrl",
            "params": [
                {
                    "name": "fileInfo",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 413,
            "description": "Get an ObjectUrl to a file from FileSystem",
            "itemtype": "method",
            "name": "readFileAsObjectUrl",
            "params": [
                {
                    "name": "fileInfo",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 435,
            "description": "Read some chunks from the file, which will resul in a Blob-Instance.\nChunk size is defined globally by CHUNK_SIZE.\nSlicing can be disabled using completeFile param.",
            "itemtype": "method",
            "name": "readFileChunkAsBlob",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "completeFile",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 451,
            "description": "Read some chunks from the file, which will be base64 encodded.\nChunk size is defined globally by CHUNK_SIZE.\nSlicing can be disabled using completeFile param.",
            "itemtype": "method",
            "name": "readFileChunkAsDataUrl",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "completeFile",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 467,
            "description": "Read some chunks from the file and return an ArrayBuffer.\nChunk size is defined globally by CHUNK_SIZE.\nSlicing can be disabled using completeFile param.",
            "itemtype": "method",
            "name": "readFileChunkAsArrayBuffer",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "completeFile",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 483,
            "description": "Add file-entries to the storage database,\nnot to the filesystem.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "files",
                    "description": "",
                    "type": "Array|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 527,
            "description": "Get an array of incomplete files from storage-database",
            "itemtype": "method",
            "name": "getListOfIncompleteFiles",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 537,
            "description": "Get an array of all files from storage-database",
            "itemtype": "method",
            "name": "getFileList",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 548,
            "description": "This will download all incomplete files from their urls.\nShould be used if you know, that there are no other peers in you pool,\nthat can deliver the files you need.",
            "itemtype": "method",
            "name": "downloadIncompleteFiles",
            "return": {
                "description": "[Promise}"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 610,
            "description": "Retrieve a filInfo object from storage (db) by uuid (hash).",
            "itemtype": "method",
            "name": "getFileInfoByUuid",
            "params": [
                {
                    "name": "uuid",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 623,
            "description": "Retrieve a fileInfo object from storage by url.",
            "itemtype": "method",
            "name": "getFileInfoByUri",
            "params": [
                {
                    "name": "uri",
                    "description": ""
                }
            ],
            "return": {
                "description": "can be multiple files",
                "type": "Array"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 635,
            "description": "etrieve a fileInfo object from storage by name.",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\filesystem.js",
            "line": 645,
            "description": "Will delete all files/folders inside the project-dir recursively\nas well as the references (fileInfo) in database",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FileSystem",
            "module": "FileSystem"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 14,
            "description": "Get all uuids from the documents stored in a specific store",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getUuidListFromStore",
            "params": [
                {
                    "name": "storeName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 36,
            "description": "Get the internalList from storage and compare to a given list of uuids.\nOnly the difference from both lists will be returned.\nUsed for synchronization of two peers.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getDifferenceFromStoreAndExternalList",
            "params": [
                {
                    "name": "storeName",
                    "description": ""
                },
                {
                    "name": "externalList",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 61,
            "description": "Initialize Storage Module",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 82,
            "itemtype": "property",
            "name": "isReady",
            "type": "{Boolean}",
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 91,
            "description": "Get a list of all files (their uuids) from storage",
            "itemtype": "method",
            "name": "getFileUuidsAsArray",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 101,
            "description": "Get a list of all jobs (their uuids) from storage",
            "itemtype": "method",
            "name": "getJobUuidsAsArray",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 111,
            "description": "Get a list of all results (their uuids) from storage",
            "itemtype": "method",
            "name": "getResultUuidsAsArray",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 122,
            "description": "Compare internalList and externalList of files",
            "itemtype": "method",
            "name": "getMissingFileUuidsAsArray",
            "params": [
                {
                    "name": "externalList",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 134,
            "description": "Compare internalList and externalList of jobs",
            "itemtype": "method",
            "name": "getMissingJobUuidsAsArray",
            "params": [
                {
                    "name": "externalList",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\storage\\index.js",
            "line": 146,
            "description": "Compare internalList and externalList of results",
            "itemtype": "method",
            "name": "getMissingResultUuidsAsArray",
            "params": [
                {
                    "name": "externalList",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Storage",
            "module": "Storage"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 16,
            "description": "Create a timestamp ( format : HH::MM:SS )",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getPrettyTimeStamp",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 74,
            "itemtype": "method",
            "name": "disableHTMLLog",
            "default": "true",
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 83,
            "itemtype": "method",
            "name": "enableHTMLLog",
            "default": "true",
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 91,
            "description": "Log some information",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "desc",
                    "description": "",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "*",
                    "optional": true
                }
            ],
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 104,
            "description": "Log a warning",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "desc",
                    "description": "",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "*",
                    "optional": true
                }
            ],
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\util\\logger.js",
            "line": 117,
            "description": "Log an error",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "desc",
                    "description": "",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "*",
                    "optional": true
                }
            ],
            "class": "Logger",
            "module": "Logger"
        },
        {
            "file": "src\\mediator.js",
            "line": 12,
            "itemtype": "method",
            "name": "couple",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 17,
            "description": "Master Broadcast Messages",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 24,
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 34,
            "description": "Broadcast Messages",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 65,
            "description": "List Requests",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 96,
            "description": "List Answers",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 133,
            "description": "Requests",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 162,
            "description": "Answers",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 186,
            "description": "Computational Events",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\mediator.js",
            "line": 205,
            "itemtype": "method",
            "name": "decouple",
            "class": "Mediator",
            "module": "Mediator"
        },
        {
            "file": "src\\muskepeer-client.js",
            "line": 22,
            "description": "Simple feature testing of the application requirements\nas a lot of the used technologies are still working drafts\nand for from standard",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getDeviceCapabilities",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "MuskepeerClient",
            "module": "MuskepeerClient"
        },
        {
            "file": "src\\muskepeer-client.js",
            "line": 78,
            "description": "Initiate muskepeer",
            "itemtype": "method",
            "name": "init",
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "MuskepeerClient",
            "module": "MuskepeerClient"
        },
        {
            "file": "src\\muskepeer-client.js",
            "line": 105,
            "description": "Start muskepeer",
            "itemtype": "method",
            "name": "start",
            "chainable": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Configuration-Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "MuskepeerClient",
            "module": "MuskepeerClient"
        },
        {
            "file": "src\\muskepeer-client.js",
            "line": 170,
            "description": "Stop muskepeer",
            "itemtype": "method",
            "name": "stop",
            "chainable": 1,
            "class": "MuskepeerClient",
            "module": "MuskepeerClient"
        },
        {
            "file": "src\\muskepeer-module.js",
            "line": 1,
            "class": "MuskepeerModule",
            "module": "MuskepeerClient"
        },
        {
            "file": "src\\project.js",
            "line": 10,
            "description": "Defaults project-settings",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "defaults",
            "type": "{Object}",
            "class": "Project",
            "module": "Project"
        },
        {
            "file": "src\\project.js",
            "line": 118,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isValidUrl",
            "params": [
                {
                    "name": "url",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Project",
            "module": "Project"
        },
        {
            "file": "src\\project.js",
            "line": 130,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "downloadJSON",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Project",
            "module": "Project"
        },
        {
            "file": "src\\project.js",
            "line": 164,
            "description": "Combines passed project settings with defaults",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "combineWithDefaults",
            "params": [
                {
                    "name": "project",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Project",
            "module": "Project"
        },
        {
            "file": "src\\project.js",
            "line": 181,
            "description": "Create project from object or url",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "config",
                    "description": "Object or url of json-file",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Project",
            "module": "Project"
        },
        {
            "file": "src\\settings.js",
            "line": 15,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "readSettingsFromLocalStorage",
            "return": {
                "description": "Settings",
                "type": "Object"
            },
            "class": "Settings",
            "module": "Settings"
        },
        {
            "file": "src\\settings.js",
            "line": 24,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "storeSettingsToLocalStorage",
            "class": "Settings",
            "module": "Settings"
        },
        {
            "file": "src\\uuid.js",
            "line": 13,
            "description": "Generates an universally unique identifier",
            "itemtype": "method",
            "name": "generate",
            "return": {
                "description": "An Universally unique identifier v4",
                "type": "String"
            },
            "see": [
                "http://en.wikipedia.org/wiki/Universally_unique_identifier"
            ],
            "class": "Uuid",
            "module": "Uuid"
        },
        {
            "file": "src\\uuid.js",
            "line": 24,
            "description": "Test if a uuid is valid",
            "itemtype": "method",
            "name": "isValid",
            "params": [
                {
                    "name": "uuid",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Uuid",
            "module": "Uuid"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\computation\\collection\\jobs.js:94"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\computation\\index.js:640"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\examples\\knn-digits\\worker.js:69"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\network\\collections\\peers.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\network\\model\\node.js:90"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\storage\\database.js:388"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\storage\\filesystem.js:94"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\storage\\index.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\storage\\index.js:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\storage\\index.js:146"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\util\\logger.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " src\\muskepeer-client.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\muskepeer-client.js:105"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\project.js:118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\uuid.js:24"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK START",
            "line": " src\\examples\\documentation\\worker.js:4"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK END",
            "line": " src\\examples\\documentation\\worker.js:38"
        },
        {
            "message": "Missing item type",
            "line": " src\\examples\\knn-digits\\factory.js:1"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK START",
            "line": " src\\examples\\knn-digits\\factory.js:8"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK END",
            "line": " src\\examples\\knn-digits\\factory.js:37"
        },
        {
            "message": "Missing item type",
            "line": " src\\examples\\knn-digits\\worker.js:1"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK START",
            "line": " src\\examples\\knn-digits\\worker.js:8"
        },
        {
            "message": "Missing item type\nCOMMUNICATION BLOCK END",
            "line": " src\\examples\\knn-digits\\worker.js:38"
        },
        {
            "message": "Missing item type\nSimple Brute-Force-Algorithm to solve the\nn-queens problem. It will produce distinct solutions.",
            "line": " src\\examples\\n-queens\\worker.js:1"
        },
        {
            "message": "Missing item type\nList of timers for synchronization",
            "line": " src\\network\\model\\peer.js:145"
        },
        {
            "message": "Missing item type\nEvent-Handler, gets called when a Peer receives a message.",
            "line": " src\\network\\index.js:209"
        },
        {
            "message": "Missing item type",
            "line": " src\\storage\\filesystem.js:94"
        },
        {
            "message": "Missing item type\netrieve a fileInfo object from storage by name.",
            "line": " src\\storage\\filesystem.js:635"
        },
        {
            "message": "Missing item type\nMaster Broadcast Messages",
            "line": " src\\mediator.js:17"
        },
        {
            "message": "Missing item type",
            "line": " src\\mediator.js:24"
        },
        {
            "message": "Missing item type\nBroadcast Messages",
            "line": " src\\mediator.js:34"
        },
        {
            "message": "Missing item type\nList Requests",
            "line": " src\\mediator.js:65"
        },
        {
            "message": "Missing item type\nList Answers",
            "line": " src\\mediator.js:96"
        },
        {
            "message": "Missing item type\nRequests",
            "line": " src\\mediator.js:133"
        },
        {
            "message": "Missing item type\nAnswers",
            "line": " src\\mediator.js:162"
        },
        {
            "message": "Missing item type\nComputational Events",
            "line": " src\\mediator.js:186"
        },
        {
            "message": "Missing item type",
            "line": " src\\muskepeer-module.js:1"
        }
    ]
}